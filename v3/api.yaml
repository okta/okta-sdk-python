#
# Copyright 2022-Present Okta, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
openapi: 3.0.3
info:
  title: Okta Admin Management
  description: Allows customers to easily access the Okta Management APIs
  termsOfService: https://developer.okta.com/terms/
  contact:
    name: Okta Developer Team
    url: https://developer.okta.com/
    email: devex-public@okta.com
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 5.1.0
  x-logo:
    url: logo.svg
    backgroundColor: transparent
    altText: Okta Developer
externalDocs:
  description: Find more info here
  url: https://developer.okta.com/docs/reference/core-okta-api/#design-principles
servers:
  - url: https://{yourOktaDomain}
    variables:
      yourOktaDomain:
        default: subdomain.okta.com
        description: The domain of your organization. This can be a provided subdomain of an official okta domain (okta.com, oktapreview.com, etc) or one of your configured custom domains.
tags:
  - name: AgentPools
    x-displayName: Agent Pools
    description: The Agent Pools API provides operation to manage the update settings of the agents for your organization.
  - name: ApiServiceIntegrations
    x-displayName: API Service Integrations
    description: |
      This API provides operations to manage API service integration instances in your organization.

      For a current list of available API service integrations, see the [Okta Integration Network catalog](https://www.okta.com/integrations/?capability=api).

      See [Add an API Service Integration](https://help.okta.com/okta_help.htm?type=oie&id=ext-add-api-service-integration) for corresponding admin instructions using the Admin Console.
      If you want to build an API service integration, see [API service integrations in the OIN](https://developer.okta.com/docs/guides/oin-api-service-overview/).
  - name: ApiToken
    x-displayName: API Tokens
    description: The API Tokens API provides operations to manage SSWS API tokens for your organization.
  - name: Application
    x-displayName: Applications
    description: The Applications API provides operations to manage applications and/or assignments to users or groups for your organization.
  - name: ApplicationConnections
    x-displayName: Application Connections
    description: |
      The Application Connections API provides operations for configuring connections to an app.

      Currently, only the Okta Org2Org app provisioning connection is supported in this API.
  - name: ApplicationCredentials
    x-displayName: Application Credentials
    description: |
      Specifies credentials and scheme for the application's `signOnMode`

      ### Application Key Credential
      The application Key Credential object defines a [JSON Web Key](https://datatracker.ietf.org/doc/html/rfc7517) for a signature or encryption credential for an application.

      > **Notes:**
      > * To update the app, you can provide just the Signing Credential object instead of the entire Application Credential object.
      > * Currently only the X.509 JWK format is supported for applications with the `SAML_2_0` sign-on mode.
  - name: ApplicationFeatures
    x-displayName: Application Features
    description: |
      The Feature object is used to configure feature settings for the application.

      The only feature this API currently supports is `USER_PROVISIONING` for the Org2Org application type.
      The `USER_PROVISIONING` feature is the same as the **To App** provisioning setting in the Admin Console.
      Enable this feature to:
      * Create Users
      * Update User Attributes
      * Deactivate Users
      * Sync Password
  - name: ApplicationGrants
    x-displayName: Application Grants
    description: |
      A scope consent grant represents an application's permission to request to include a specific Okta scope in OAuth 2.0 Bearer tokens.
      If the application does not have this grant, token requests that contain this Okta scope are denied.
  - name: ApplicationGroups
    x-displayName: Application Groups
    description: Groups assigned to an application
  - name: ApplicationLogos
    x-displayName: Application Logos
    description: Provides a resource to manage the application instance logo
  - name: ApplicationPolicies
    x-displayName: Application Policies
    description: Provides a resource to manage authentication policies associated with an application
  - name: ApplicationSSO
    x-displayName: Application SSO
    description: Provides a Single Sign-On (SSO) resource for an application
  - name: ApplicationTokens
    x-displayName: Application Tokens
    description: Application OAuth 2.0 token operations
  - name: ApplicationUsers
    x-displayName: Application Users
    description: Application user operations
  - name: AttackProtection
    x-displayName: Attack Protection
    description: The Attack Protection API provides operations to configure the User Lockout Settings in your org to prevent brute-force attacks.
  - name: Authenticator
    x-displayName: Authenticators
    description: |-
      The Authenticators Administration API provides operations to configure which Authenticators are available to end users for use when signing in to applications.

      End users are required to use one or more Authenticators depending on the security requirements of the authentication policy.

      Okta Identity Engine currently supports Authenticators for the following factors:

      **Knowledge-based:**

      * Password
      * Security Question

      **Possession-based:**

      * Phone (SMS, Voice Call)
      * Email
      * WebAuthn
      * Duo
      * Custom App
  - name: AuthorizationServer
    x-displayName: Authorization Servers
    description: Authorization Servers generate OAuth 2.0 and OpenID Connect tokens, including access tokens and ID tokens. The Okta Management API gives you the ability to configure and manage Authorization Servers and the security policies that are attached to them.
  - name: Behavior
    x-displayName: Behavior Rules
    description: The Behavior Rules API provides operations to manage the behavior detection rules for your organization.
  - name: CAPTCHA
    x-displayName: CAPTCHAs
    description: |-
      As an option to increase org security, Okta supports CAPTCHA services to prevent automated sign-in attempts. You can integrate one of two providers: [hCaptcha](https://www.hcaptcha.com/) or [reCAPTCHA v2](https://developers.google.com/recaptcha/docs/invisible).

      The vendor implementations supported by Okta are both invisible. They each run risk-analysis software in the background during user sign in to determine the likelihood that the user is a bot. This risk analysis is based on the settings that you configure with the provider that you choose.

      Before you configure your org to use CAPTCHA, sign in to the vendor of your choice or sign up for an account. For more details, refer to [CAPTCHA integration](https://help.okta.com/okta_help.htm?type=oie&id=csh-captcha).
  - name: CustomDomain
    x-displayName: Custom Domains
    description: The Custom Domains API provides operations to manage custom domains for your organization.
  - name: Customization
    x-displayName: Customizations
    description: |-
      The Brands API allows you to customize the look and feel of pages and templates, such as the Okta-hosted sign-in page, error pages, email templates, and the Okta End-User Dashboard.

      Each new org contains Okta default branding. You can upload your own assets (colors, background image, logo, and favicon) to replace the default assets and publish these assets directly to your pages and templates.
  - name: Device
    x-displayName: Devices
    description: |-
      The Okta Devices API provides a centralized integration platform to fetch and manage device information. Okta administrators can use these APIs to manage workforce identity Device object information.

      The Devices API supports the following **Device Operations**:
      * Get, Delete Device objects.
      * Perform lifecycle transitions on the Device objects.
        Device lifecycle is defined as transitions of the Device Status by the associated operations. The Device object follows a predefined lifecycle transition flow. Device Lifecycle operations are idempotent and its calls are synchronous.

      The Devices API supports the following **Authorization Schemes**:
      * SSWS - [API tokens](https://developer.okta.com/docs/reference/core-okta-api/#authentication)
      * Bearer - [OAuth2.0 and OpenID Connect](https://developer.okta.com/docs/concepts/oauth-openid/)

      > **Note:** For devices to enroll in Okta and show up in the Devices API, the following actions are required:
      > 1. Admins - Enable Okta FastPass. See [Enable FastPass](https://help.okta.com/okta_help.htm?type=oie&id=ext-fp-enable)
      > 2. End users with existing mobile Okta Verify enrollments - After you upgrade your org to Okta Identity Engine, direct end users with existing Okta Verify enrollments to use [FastPass](https://help.okta.com/okta_help.htm?type=oie&id=csh-fp-main).

      > **Note:** End users with a new enrollment in Okta Verify on an Okta Identity Engine org have a device record created in the device inventory by default.
      See [Device Registration](https://help.okta.com/okta_help.htm?type=oie&id=csh-device-registration), [Login Using Okta Verify](https://help.okta.com/okta_help.htm?type=eu&id=ext-ov-user-overview).
  - name: DeviceAssurance
    x-displayName: Device Assurance Policies
    description: The Device Assurance Policies API provides operations to manage device assurance policies in your organization.
  - name: EmailDomain
    x-displayName: Email Domains
    description: The Email Domains API provides operations to manage email domains for your organization.
  - name: EmailServer
    x-displayName: Email Servers
    description: The Okta Email Servers API provides operations to manage custom email SMTP servers for your organization.
  - name: EventHook
    x-displayName: Event Hooks
    description: |-
      The Event Hooks API provides operations to manage event hooks for your organization.

      For general information on event hooks and how to create and use them, see [Event hooks](https://developer.okta.com/docs/concepts/event-hooks/). The following documentation is only for the management API, which provides a CRUD interface for registering event hooks.

      For a step-by-step guide on implementing an example event hook, see the [Event hook](https://developer.okta.com/docs/guides/event-hook-implementation/) guide.
  - name: Feature
    x-displayName: Features
    description: |-
      The Okta Features API provides operations to manage self-service Early Access (EA) and Beta features in your org.

      > **Note:** Important background information for this API is available on the [Feature Lifecycle Management](https://developer.okta.com/docs/concepts/feature-lifecycle-management/) page.
  - name: Group
    x-displayName: Groups
    description: The Groups API provides operations to manage Okta Groups and their user members for your organization.
  - name: HookKey
    x-displayName: Hook Keys
    description: The Hook Keys API provides operations to manage hook keys for your organization.
  - name: IdentityProvider
    x-displayName: Identity Providers
    description: The Identity Providers API provides operations to manage federations with external Identity Providers (IdP). For example, your app can support signing in with credentials from Apple, Facebook, Google, LinkedIn, Microsoft, an enterprise IdP using SAML 2.0, or an IdP using the OpenID Connect (`OIDC`) protocol.
  - name: IdentitySource
    x-displayName: Identity Sources
    description: The Okta Identity Source API provides a mechanism to synchronize an HR source (the custom identity source) with Okta user profiles in an org.
  - name: InlineHook
    x-displayName: Inline Hooks
    description: |-
      The Inline Hooks API provides operations to manage inline hooks for your organization.

      For general information on inline hooks and how to create and use them, see [inline hooks](https://developer.okta.com/docs/concepts/inline-hooks/). The following documentation is only for the management API, which provides a CRUD interface for registering inline hooks.
  - name: LinkedObject
    x-displayName: Linked Objects
    description: |-
      Users have relationships to each other, like manager and subordinate or customer and sales representative. You can create users with relationships by using the Linked Objects API to represent the relationship.

      1. Create a Linked Object definition such as Manager:Subordinate or Case Worker:Client. These pairs are represented by a `primary` attribute and an `associated` attribute.
      2. Link users together to create the relationship between the two. You create a Linked Object value with a single request that links one `primary` and one `associated` user.

      For each relationship:

      * A user has at most one `primary` link (a user has a single manager), but can have many `associated` links (a user can have many subordinates).
      * A user can be the `primary` in one relationship and the `associated` in another.
      * A user can be both the `primary` and `associated` in the same relationship.

      Okta Expression Language function for [Linked Objects](https://developer.okta.com/docs/reference/okta-expression-language/#linked-object-function) provides access to the details about a linked user.

      > **Note:** The Linked Objects feature isn't available for OpenID Connect claims.

      ## Example usage

      Okta allows you to create up to 200 Linked Object definitions. These definitions are one-to-many, for example:

      * A manager has many subordinates. Each subordinate has one manager.
      * A sales representative has many customers. Each customer has one sales rep.
      * A case worker has many clients. Each client has one case worker.

      Most organizations have more than one manager or sales representative. You can create the Linked Object definition once, and then assign the `primary` relationship to as many users as you have people in that relationship.

      You can assign the `associated` relationship for a single `primary` user to as many users as needed. The `associated` user can be related to only one `primary` per Linked Object definition. But a user can be assigned to more than one Linked Object definition.

      For example, assume that you've created one Linked Object definition for manager (`primary`) and for subordinates (`associated`):

      * Joe is Frank's manager.
      * Bob is Joe's manager, but Jane's subordinate.
      * Jane is the CEO, so she reports to herself.

      Thus, you can create chains of relationships (Jane > Bob > Joe > Frank) or terminal relationships (Jane is both `primary` and `associated` user).

      Then, if you create another Linked Object relationship for scrum team membership, you could assign relationships to the same four users:

      * Bob is the scrum lead for the Identity Scrum team.
      * Joe and Frank are both contributors to the team.

      Bob can be the `primary` for a Manager:Subordinate, an `associated` user for that same Linked Object definition, and also the `primary` for the Scrumlead:Contributor Linked Object definition.

      To represent a relationship, create a Linked Object definition that specifies a `primary` (parent) relationship and an `associated` (child) relationship, and then add a link in which the appropriate user is assigned to each side of that link type.

      ## Links between User Types

      If you created multiple User Types, they all share the same Linked Object definitions. For example, if you have separate User Types for employees and contractors, a link could designate an employee as the manager for a contractor, with the contractor being a subordinate of that employee.
  - name: LogStream
    x-displayName: Log Streaming
    description: The Log Streaming API provides operations to manage log stream configurations for an org. You can configure up to two log stream integrations per org.
  - name: NetworkZone
    x-displayName: Network Zones
    description: |-
      The Okta Network Zones API provides operations to manage Zones in your organization. There are two usage Zone types: Policy Network Zones and Blocklist Network Zones. Policy Network Zones are used to guide policy decisions. Blocklist Network Zones are used to deny access from certain IP addresses, locations, proxy types, or Autonomous System Numbers (ASNs) before policy evaluation.

      A default system Policy Network Zone is provided in your Okta org. You can use the Network Zones API to modify the default Policy Network Zone or to create a custom Policy or Blocklist Network Zone. When you create your custom Zone, you can specify if the Zone is an IP Zone or a Dynamic Zone. An IP Zone allows you to define network perimeters around a set of IPs, whereas a Dynamic Zone allows you to define network perimeters around location, IP type, and ASNs.
  - name: OrgSetting
    x-displayName: Org Settings
    description: The Org Settings API provides operations to manage your org account settings such as contact information, granting Okta Support access, and more.
  - name: Policy
    x-displayName: Policies
    description: |-
      The Okta Policy API enables an Administrator to perform Policy and Policy Rule operations. The Policy framework is used by Okta to control Rules and settings that govern, among other things, user session lifetime, whether multi-factor authentication is required when logging in, what MFA factors may be employed, password complexity requirements, what types of self-service operations are permitted under various circumstances, and what identity provider to route users to.

      Policy settings for a particular Policy type, such as Sign On Policy, consist of one or more Policy objects, each of which contains one or more Policy Rules. Policies and Rules contain conditions that determine whether they are applicable to a particular user at a particular time.
  - name: PrincipalRateLimit
    x-displayName: Principal Rate Limits
    description: The Principal Rate Limits API provides operations to manage Principal Rate Limits for your organization.
  - name: ProfileMapping
    x-displayName: Profile Mappings
    description: The Mappings API provides operations to manage the mapping of Profile properties between an Okta User and an App User using [Okta Expression Language](https://developer.okta.com/docs/reference/okta-expression-language). More information on Okta User and App User Profiles can be found in Okta's [User profiles](https://developer.okta.com/docs/concepts/user-profiles/#what-is-the-okta-universal-directory).
  - name: PushProvider
    x-displayName: Push Providers
    description: The Push Providers API provides operations to manage Push Providers for your organization.
    x-okta-lifecycle:
      features:
        - CUSTOM_PUSH_AUTHENTICATOR
  - name: RateLimitSettings
    x-displayName: Rate Limit Settings
    description: The Rate Limit Settings APIs provide operations to manage settings and configurations surrounding rate limiting in your Okta organization.
  - name: Realm
    x-displayName: Realms
    description: The realm API provides operations to manage realms
  - name: ResourceSet
    x-displayName: Resource Sets
    description: The Resource Sets API provides operations to manage Resource Sets as custom collections of resources. You can use Resource Sets to assign Custom Roles to administrators who are scoped to the designated resources. See [Supported Resources](https://developer.okta.com/docs/concepts/role-assignment/#supported-resources).
  - name: RiskEvent
    x-displayName: Risk Events
    description: The Risk Events API provides the ability for third-party risk providers to send risk events to Okta. See [Third-party risk provider integration](https://developer.okta.com/docs/guides/third-party-risk-integration/) for guidance on integrating third-party risk providers with Okta.
  - name: RiskProvider
    x-displayName: Risk Providers
    description: The Risk Providers API provides the ability to manage the Risk Providers within Okta. See [Third-party risk provider integration](https://developer.okta.com/docs/guides/third-party-risk-integration/) for guidance on integrating third-party risk providers with Okta.
  - name: Role
    x-displayName: Roles
    description: |-
      The Roles API provides operations to manage administrative Role assignments for a User.

      Role listing APIs provide a union of both standard and Custom Roles assigned to a User or Group.
  - name: RoleAssignment
    x-displayName: Role Assignments
    description: These APIs allow you to assign custom roles to user and groups, as well as designate Third-Party Administrator status to a user or group.
  - name: RoleTarget
    x-displayName: Role Targets
    description: |-
      Role targets are a way of defining permissions for admin roles into a smaller subset of Groups or Apps within your org. Targets limit an admin's permissions to a targeted area of the org. You can define admin roles to target Groups, Applications, and Application Instances.

      * **Group targets:** Grant an admin permission to manage only a specified Group. For example, an admin role may be assigned to manage only the IT Group.
      * **App targets:** Grant an admin permission to manage all instances of the specified Apps. Target Apps are Okta catalog Apps. For example, you can have multiple configurations of an Okta catalog App, such as Salesforce or Facebook. When you add a Salesforce or Facebook App as a target, that grants the admin permission to manage all the instances of those Apps and create new instances of them.
      * **App Instance targets:** Grant an admin permission to manage an instance of one App or instances of multiple Apps. App Instances are specific Apps that admins have created in their org. For example, there may be a Salesforce App configured differently for each sales region of a company. When you create an App Instance target, you can assign an admin to manage only two instances of the configured Salesforce Apps and then also to manage an instance of another configured App such as Workday.

      > **Note:** Don't use these operations with a Custom Role ID. Custom Role assignments always require a target Resource Set. See [Role Assignments](https://developer.okta.com/docs/concepts/role-assignment/) for more information.
  - name: Schema
    x-displayName: Schemas
    description: |-
      The Schemas API provides operations to manage custom User profiles as well as endpoints to discover the structure of the Log Stream configuration.

      Okta's [Universal Directory](https://help.okta.com/okta_help.htm?id=ext_About_Universal_Directory) allows administrators to define custom User profiles for Okta Users and Applications.
      Okta adopts a subset of [JSON Schema Draft 4](https://tools.ietf.org/html/draft-zyp-json-schema-04) as the schema language to describe and validate extensible User profiles.
      For Log Stream Schemas, Okta uses [JSON Schema Draft 2020-12](https://json-schema.org/specification.html).
      [JSON Schema](http://json-schema.org/) is a lightweight declarative format for describing the structure, constraints, and validation of JSON documents.

      > **Note:** Okta implements only a subset of [JSON Schema Draft 4](https://tools.ietf.org/html/draft-zyp-json-schema-04) and [JSON Schema Draft 2020-12](https://json-schema.org/specification.html). This document describes which parts apply to Okta, and any extensions Okta has made to [JSON Schema Draft 4](https://tools.ietf.org/html/draft-zyp-json-schema-04) and [JSON Schema Draft 2020-12](https://json-schema.org/specification.html).
  - name: Session
    x-displayName: Sessions
    description: |-
      Okta uses a cookie-based authentication mechanism to maintain a user's authentication Session across web requests. The Okta Sessions API provides operations to create and manage authentication Sessions for users in your Okta organization.

      >**Note:** Some browsers block third-party cookies by default, which disrupts Okta functionality in certain flows. See [FAQ: How Blocked Third Party Cookies Can Potentially Impact Your Okta Environment](https://support.okta.com/help/s/article/FAQ-How-Blocking-Third-Party-Cookies-Can-Potentially-Impact-Your-Okta-Environment).

      >**Note:** The Sessions API doesn't support direct authentication. Direct authentication is supported through the [Authentication API](https://developer.okta.com/docs/reference/api/authn/#authentication-operations) or through OIDC using the [Resource Owner Password flow](https://developer.okta.com/docs/guides/implement-grant-type/ropassword/main/).

      ### Session cookie

      Okta uses an HTTP session cookie to provide access to your Okta organization and applications across web requests for an interactive user agent such as a web browser. A session cookie has an expiration configurable by an administrator for the organization and is valid until the cookie expires or the user closes the Session (logout) or browser application.

      ### Session token

      A [session token](https://developer.okta.com/docs/reference/api/authn/#session-token) is a one-time bearer token that provides proof of authentication and may be redeemed for an interactive SSO session in Okta in a user agent. Session tokens can only be used **once** to establish a Session for a user and are revoked when the token expires.

      Okta provides a very rich [Authentication API](https://developer.okta.com/docs/reference/api/authn/) to validate a [user's primary credentials](https://developer.okta.com/docs/reference/api/authn/#primary-authentication) and secondary [MFA factor](https://developer.okta.com/docs/reference/api/authn/#verify-factor). A session token is returned after successful authentication, which can be later exchanged for a session cookie that uses one of the following flows:

      - [Retrieve a session cookie by visiting the OpenID Connect Authorization Endpoint](https://developer.okta.com/docs/guides/session-cookie/main/#retrieve-a-session-cookie-through-the-openid-connect-authorization-endpoint)
      - [Retrieve a session cookie by visiting a session redirect link](https://developer.okta.com/docs/guides/session-cookie/main/#retrieve-a-session-cookie-by-visiting-a-session-redirect-link)
      - [Retrieve a session cookie by visiting an application embed link](https://developer.okta.com/docs/guides/session-cookie/main/#retrieve-a-session-cookie-by-visiting-an-application-embed-link)

      >**Note:** **Session tokens** are secrets and should be protected at rest and during transit. A session token for a user is equivalent to having the user's actual credentials.
  - name: Subscription
    x-displayName: Subscriptions
    description: The Subscriptions API provides operations to manage email subscription settings for Okta administrator notifications.
  - name: SystemLog
    x-displayName: System Log
    description: |-
      The System Log records system events that are related to your organization in order to provide an audit trail that can be used to understand platform activity and to diagnose problems.

      The System Log API provides near real-time, read-only access to your organization's system log and is the programmatic counterpart of the [System Log UI](https://help.okta.com/okta_help.htm?id=ext_Reports_SysLog).

      The terms "event" and "log event" are often used interchangeably. In the context of this API, an "event" is an occurrence of interest within the system, and a "log" or "log event" is the recorded fact.

      The System Log API supports these primary use cases:
        * Event data export into a security information and event management system (SIEM)
        * System monitoring
        * Development debugging
        * Event introspection and audit

      The System Log API isn't intended for use as a Database as a Service (DBaaS) or to serve data directly to downstream consumers without an intermediate data store.

      See [Events API Migration](https://developer.okta.com/docs/concepts/events-api-migration/) for information on migrating from the Events API to the System Log API.
  - name: Template
    x-displayName: SMS Templates
    description: |-
      The SMS Templates API provides operations to manage custom SMS templates for verification.

      > **Note:** Only SMS custom Templates are available through the API.

      SMS Templates customize the SMS message that is sent to users. One default SMS Template is provided. All custom Templates must have the variable `${code}` as part of the text. The `${code}` variable is replaced with the actual SMS code when the message is sent. Optionally, you can also use the variable `${org.name}`. If a Template contains `${org.name}`, it is replaced with the organization name before the SMS message is sent.
  - name: ThreatInsight
    x-displayName: ThreatInsight
    description: |-
      [Okta ThreatInsight](https://help.okta.com/okta_help.htm?id=ext_threatinsight) maintains a
      constantly evolving list of IP addresses that consistently exhibit malicious activity.
      Authentication requests that are associated with an IP in this list can be logged to the
      [System Log](https://help.okta.com/okta_help.htm?id=ext_Reports_SysLog) and blocked.
      ThreatInsight also covers non-authentication requests in limited capacity depending on the attack patterns of these malicious IPs.

      The ThreatInsight API provides operations to manage your org ThreatInsight configuration.

      > **Note:** To prevent abuse, Okta ThreatInsight works in a limited capacity for free trial edition orgs. Please contact Okta support if fully functional Okta ThreatInsight is required.
  - name: TrustedOrigin
    x-displayName: Trusted Origins
    description: |-
      The Trusted Origins API provides operations to manage Trusted Origins and sources.

      When external URLs are requested during sign-in, sign-out, or recovery operations, Okta checks those URLs against the allowed list of Trusted Origins. Trusted Origins also enable browser-based applications to access Okta APIs from JavaScript (CORS). If the origins aren't specified, the related operation (redirect or Okta API access) isn't permitted.

      You can also configure Trusted Origins to allow iFrame embedding of Okta resources, such as Okta sign-in pages and the Okta End-User Dashboard, within that origin. This is an Early Access feature. To enable it, contact [Okta Support](https://support.okta.com/help/s/).

      > **Note:** This Early Access feature is supported for Okta domains only. It isn't currently supported for custom domains.
  - name: UISchema
    x-displayName: UI Schema
    description: |-
      The Okta UI Schema API allows you to control how inputs appear on an enrollment form. The UI Schema API is only available as a part of Okta Identity Engine.

      If you’re not sure which solution you’re using, check the footer on any page of the Admin Console. The version number is appended with E for Identity Engine orgs and C for Classic Engine orgs.
  - name: User
    x-displayName: Users
    description: The User API provides operations to manage users in your organization.
  - name: UserFactor
    x-displayName: User Factors
    description: The Factors API provides operations to enroll, manage, and verify factors for multifactor authentication (MFA). Manage both administration and end-user accounts, or verify an individual factor at any time.
  - name: UserType
    x-displayName: User Types
    description: The User Types API provides operations to manage User Types.
paths:
  /.well-known/app-authenticator-configuration:
    get:
      x-okta-lifecycle:
        features:
          - CUSTOM_PUSH_AUTHENTICATOR
      summary: Retrieve the Well-Known App Authenticator Configuration
      description: Retrieves the well-known app authenticator configuration, which includes an app authenticator's settings, supported methods and various other configuration details
      operationId: getWellKnownAppAuthenticatorConfiguration
      parameters:
        - name: oauthClientId
          in: query
          description: Filters app authenticator configurations by `oauthClientId`
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WellKnownAppAuthenticatorConfiguration'
        '400':
          $ref: '#/components/responses/ErrorMissingRequiredParameter400'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security: []
      tags:
        - Authenticator
  /.well-known/okta-organization:
    get:
      summary: Retrieve the Well-Known Org Metadata
      description: Retrieves the well-known org metadata, which includes the id, configured custom domains, authentication pipeline, and various other org settings
      operationId: getWellknownOrgMetadata
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellKnownOrgMetadata'
              examples:
                Identity Engine Org with Custom Domain:
                  $ref: '#/components/examples/WellKnownOrgMetadataResponseCustomUrlOie'
                Classic Org:
                  $ref: '#/components/examples/WellKnownOrgMetadataResponseClassic'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security: []
      tags:
        - OrgSetting
  /api/v1/agentPools:
    get:
      summary: List all Agent Pools
      description: Lists all agent pools with pagination support
      operationId: listAgentPools
      parameters:
        - $ref: '#/components/parameters/queryLimitPerPoolType'
        - $ref: '#/components/parameters/queryPoolType'
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentPool'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.read
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
    get:
      summary: List all Agent Pool updates
      description: Lists all agent pool updates
      operationId: listAgentPoolsUpdates
      parameters:
        - $ref: '#/components/parameters/queryScheduled'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.read
      tags:
        - AgentPools
    post:
      summary: Create an Agent Pool update
      description: Creates an Agent pool update \n For user flow 2 manual update, starts the update immediately. \n For user flow 3, schedules the update based on the configured update window and delay.
      operationId: createAgentPoolsUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/settings:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
    get:
      summary: Retrieve an Agent Pool update's settings
      description: Retrieves the current state of the agent pool update instance settings
      operationId: getAgentPoolsUpdateSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdateSetting'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.read
      tags:
        - AgentPools
    post:
      summary: Update an Agent Pool update settings
      description: Updates an agent pool update settings
      operationId: updateAgentPoolsUpdateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdateSetting'
        required: true
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdateSetting'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    get:
      summary: Retrieve an Agent Pool update by id
      description: Retrieves Agent pool update from updateId
      operationId: getAgentPoolsUpdateInstance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.read
      tags:
        - AgentPools
    post:
      summary: Update an Agent Pool update by id
      description: Updates Agent pool update and return latest agent pool update
      operationId: updateAgentPoolsUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdate'
        required: true
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
    delete:
      summary: Delete an Agent Pool update
      description: Deletes Agent pool update
      operationId: deleteAgentPoolsUpdate
      responses:
        '204':
          description: Deleted
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/activate:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    post:
      summary: Activate an Agent Pool update
      description: Activates scheduled Agent pool update
      operationId: activateAgentPoolsUpdate
      responses:
        '201':
          description: Activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    post:
      summary: Deactivate an Agent Pool update
      description: Deactivates scheduled Agent pool update
      operationId: deactivateAgentPoolsUpdate
      responses:
        '201':
          description: Deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/pause:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    post:
      summary: Pause an Agent Pool update
      description: Pauses running or queued Agent pool update
      operationId: pauseAgentPoolsUpdate
      responses:
        '201':
          description: Paused
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/resume:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    post:
      summary: Resume an Agent Pool update
      description: Resumes running or queued Agent pool update
      operationId: resumeAgentPoolsUpdate
      responses:
        '201':
          description: Resumed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/retry:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    post:
      summary: Retry an Agent Pool update
      description: Retries Agent pool update
      operationId: retryAgentPoolsUpdate
      responses:
        '201':
          description: Retried
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/stop:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    post:
      summary: Stop an Agent Pool update
      description: Stops Agent pool update
      operationId: stopAgentPoolsUpdate
      responses:
        '201':
          description: Stopped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/api-tokens:
    get:
      summary: List all API Token Metadata
      description: Lists all the metadata of the active API tokens
      operationId: listApiTokens
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
        - name: q
          in: query
          description: Finds a token that matches the name or clientName.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiToken'
              examples:
                List Tokens:
                  $ref: '#/components/examples/ApiTokenListMetadataResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apiTokens.read
      tags:
        - ApiToken
  /api/v1/api-tokens/current:
    delete:
      summary: Revoke the Current API Token
      description: Revokes the API token provided in the Authorization header
      operationId: revokeCurrentApiToken
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
      tags:
        - ApiToken
  /api/v1/api-tokens/{apiTokenId}:
    parameters:
      - $ref: '#/components/parameters/pathApiTokenId'
    get:
      summary: Retrieve an API Token's Metadata
      description: Retrieves the metadata for an active API token by id
      operationId: getApiToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiToken'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/ApiTokenMetadataResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apiTokens.read
      tags:
        - ApiToken
    delete:
      summary: Revoke an API Token
      description: Revokes an API token by `apiTokenId`
      operationId: revokeApiToken
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apiTokens.manage
      tags:
        - ApiToken
  /api/v1/apps:
    get:
      summary: List all Applications
      description: Lists all applications with pagination. A subset of apps can be returned that match a supported filter expression or query.
      operationId: listApplications
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of apps
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of results for a page
          schema:
            type: integer
            format: int32
            default: -1
        - name: filter
          in: query
          description: Filters apps by status, user.id, group.id or credentials.signing.kid expression
          schema:
            type: string
        - name: expand
          in: query
          description: Traverses users link relationship and optionally embeds Application User resource
          schema:
            type: string
        - name: includeNonDeleted
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - Application
    post:
      summary: Create an Application
      description: Creates a new application to your Okta organization
      operationId: createApplication
      parameters:
        - name: activate
          in: query
          description: Executes activation lifecycle operation when creating the app
          schema:
            type: boolean
            default: true
        - name: OktaAccessGateway-Agent
          in: header
          schema:
            type: string
      x-codegen-request-body-name: application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/${appId}/sso/saml/metadata:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    get:
      summary: Preview the application SAML metadata
      description: Previews the SSO SAML metadata for an application
      operationId: previewSAMLmetadataForApplication
      responses:
        '200':
          description: OK
          content:
            text/xml:
              schema:
                type: string
                description: SAML metadata in XML
                format: xml
              examples:
                previewSAML:
                  summary: SAML metadata example
                  value: |
                    <?xml version="1.0" encoding="UTF-8"?>
                      <md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata" entityID="exk39sivhuytV2D8H0h7">
                        <md:IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
                            <md:KeyDescriptor use="signing">
                                <ds:KeyInfo xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
                                    <ds:X509Data>
                                        <ds:X509Certificate>MIIDqDCCApCgAwIBAgIGAVGNO4qeMA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEG
                    A1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU
                    MBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJ
                    ARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODUwMDhaFw0xNzEyMTAxODUxMDdaMIGUMQswCQYD
                    VQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsG
                    A1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEc
                    MBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
                    ggEBALAakG48bgcTWHdwmVLHig0mkiRejxIVm3wbzrNSJcBruTq2zCYZ1rGfVxTYON8kJqvkXPmv
                    kzWKhpEkvhubL+mx29XpXY0AsNIfgcm5xIV56yhXSvlMdqzGo3ciRwoACaF+ClNLxmXK9UTZD89B
                    bVVGCG5AEvja0eCQ0GYsO5i9aSI5aTroab8Aew31PuWl/RGQWmjVy8+7P4wwkKKJNKCpxMYDlhfa
                    WRp0zwUSbUCO0qEyeAYdZx6CLES4FGrDi/7D6G+ewWC+kbz1tL1XpF2Dcg3+IOlHrV6VWzz3rG39
                    v9zFIncjvoQJFDGWhpqGqcmXvgH0Ze3SVcVF01T+bK0CAwEAATANBgkqhkiG9w0BAQUFAAOCAQEA
                    AHmnSZ4imjNrIf9wxfQIcqHXEBoJ+oJtd59cw1Ur/YQY9pKXxoglqCQ54ZmlIf4GghlcZhslLO+m
                    NdkQVwSmWMh6KLxVM18/xAkq8zyKbMbvQnTjFB7x45bgokwbjhivWqrB5LYHHCVN7k/8mKlS4eCK
                    Ci6RGEmErjojr4QN2xV0qAqP6CcGANgpepsQJCzlWucMFKAh0x9Kl8fmiQodfyLXyrebYsVnLrMf
                    jxE1b6dg4jKvv975tf5wreQSYZ7m//g3/+NnuDKkN/03HqhV7hTNi1fyctXk8I5Nwgyr+pT5LT2k
                    YoEdncuy+GQGzE9yLOhC4HNfHQXpqp2tMPdRlw==</ds:X509Certificate>
                                    </ds:X509Data>
                                </ds:KeyInfo>
                            </md:KeyDescriptor>
                            <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>
                            <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>
                            <md:SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://{yourOktaDomain}/app/sample-app/exk39sivhuytV2D8H0h7/sso/saml"/>
                            <md:SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://{yourOktaDomain}/app/sample-app/exk39sivhuytV2D8H0h7/sso/saml"/>
                        </md:IDPSSODescriptor>
                    </md:EntityDescriptor>
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationSSO
  /api/v1/apps/{appId}:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    get:
      summary: Retrieve an Application
      description: Retrieves an application from your Okta organization by `id`
      operationId: getApplication
      parameters:
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - Application
    put:
      summary: Replace an Application
      description: Replaces an application
      operationId: replaceApplication
      x-codegen-request-body-name: application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - Application
    delete:
      summary: Delete an Application
      description: Deletes an inactive application
      operationId: deleteApplication
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/connections/default:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    get:
      summary: Retrieve the default Provisioning Connection
      description: Retrieves the default Provisioning Connection for an app
      operationId: getDefaultProvisioningConnectionForApplication
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConnection'
              examples:
                ProvisioningConnectionResponseExample:
                  $ref: '#/components/examples/ProvisioningConnectionTokenResponseEx'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationConnections
    post:
      summary: Update the default Provisioning Connection
      description: Updates the default Provisioning Connection for an app
      operationId: updateDefaultProvisioningConnectionForApplication
      parameters:
        - in: query
          name: activate
          schema:
            type: boolean
          description: Activates the Provisioning Connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConnectionRequest'
            examples:
              ProvisioningConnectionTokenExample:
                $ref: '#/components/examples/ProvisioningConnectionTokenRequestEx'
              ProvisioningConnectionOauthExample:
                $ref: '#/components/examples/ProvisioningConnectionOauthRequestEx'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConnection'
              examples:
                ProvisioningConnectionTokenExample:
                  $ref: '#/components/examples/ProvisioningConnectionTokenResponseEx'
                ProvisioningConnectionOauthExample:
                  $ref: '#/components/examples/ProvisioningConnectionOauthResponseEx'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationConnections
  /api/v1/apps/{appId}/connections/default/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    post:
      summary: Activate the default Provisioning Connection
      description: Activates the default Provisioning Connection for an app
      operationId: activateDefaultProvisioningConnectionForApplication
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationConnections
  /api/v1/apps/{appId}/connections/default/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    post:
      summary: Deactivate the default Provisioning Connection
      description: Deactivates the default Provisioning Connection for an app
      operationId: deactivateDefaultProvisioningConnectionForApplication
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationConnections
  /api/v1/apps/{appId}/credentials/csrs:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    get:
      summary: List all Certificate Signing Requests
      description: Lists all Certificate Signing Requests for an application
      operationId: listCsrsForApplication
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Csr'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationCredentials
    post:
      summary: Generate a Certificate Signing Request
      description: Generates a new key pair and returns the Certificate Signing Request for it
      operationId: generateCsrForApplication
      x-codegen-request-body-name: metadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationCredentials
  /api/v1/apps/{appId}/credentials/csrs/{csrId}:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
      - $ref: '#/components/parameters/pathCsrId'
    get:
      summary: Retrieve a Certificate Signing Request
      description: Retrieves a certificate signing request for the app by `id`
      operationId: getCsrForApplication
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationCredentials
    delete:
      summary: Revoke a Certificate Signing Request
      description: Revokes a certificate signing request and deletes the key pair from the application
      operationId: revokeCsrFromApplication
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationCredentials
  /api/v1/apps/{appId}/credentials/csrs/{csrId}/lifecycle/publish:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
      - $ref: '#/components/parameters/pathCsrId'
    post:
      summary: Publish a Certificate Signing Request
      description: Publishes a certificate signing request for the app with a signed X.509 certificate and adds it into the application key credentials
      operationId: publishCsrFromApplication
      requestBody:
        required: true
        content:
          application/x-x509-ca-cert:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryCerCert
          application/pkix-cert:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryDerCert
          application/x-pem-file:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryPemCert
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationCredentials
  /api/v1/apps/{appId}/credentials/keys:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    get:
      summary: List all Key Credentials
      description: Lists all key credentials for an application
      operationId: listApplicationKeys
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationCredentials
  /api/v1/apps/{appId}/credentials/keys/generate:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    post:
      summary: Generate a Key Credential
      description: Generates a new X.509 certificate for an application key credential
      operationId: generateApplicationKey
      parameters:
        - name: validityYears
          in: query
          schema:
            type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationCredentials
  /api/v1/apps/{appId}/credentials/keys/{keyId}:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
      - $ref: '#/components/parameters/pathKeyId'
    get:
      summary: Retrieve a Key Credential
      description: Retrieves a specific application key credential by kid
      operationId: getApplicationKey
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationCredentials
  /api/v1/apps/{appId}/credentials/keys/{keyId}/clone:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
      - $ref: '#/components/parameters/pathKeyId'
    post:
      summary: Clone a Key Credential
      description: Clones a X.509 certificate for an application key credential from a source application to target application.
      operationId: cloneApplicationKey
      parameters:
        - name: targetAid
          in: query
          description: Unique key of the target Application
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationCredentials
  /api/v1/apps/{appId}/features:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    get:
      summary: List all Features
      description: |
        Lists all features for an application
        > **Note:** The only application feature currently supported is `USER_PROVISIONING`.
        > This request returns an error if provisioning isn't enabled for the application.
        > To set up provisioning, see [Update the default Provisioning Connection](/openapi/okta-management/management/tag/ApplicationConnections/#tag/ApplicationConnections/operation/updateDefaultProvisioningConnectionForApplication).
      operationId: listFeaturesForApplication
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationFeature'
                type: array
              examples:
                ListAppFeatureResponse:
                  $ref: '#/components/examples/AppFeatureListResponseEx'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                ListAppFeatureAPIValidationFailed:
                  $ref: '#/components/examples/ErrorAppFeatureAPIValidationFailed'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationFeatures
  /api/v1/apps/{appId}/features/{featureName}:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
      - $ref: '#/components/parameters/pathFeatureName'
    get:
      summary: Retrieve a Feature
      description: Retrieves a Feature object for an application
      operationId: getFeatureForApplication
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFeature'
              examples:
                AppFeatureResponse:
                  $ref: '#/components/examples/AppFeatureResponseEx'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationFeatures
    put:
      summary: Update a Feature
      description: |
        Updates a Feature object for an application
        > **Note:** This endpoint supports partial updates.
      operationId: updateFeatureForApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapabilitiesObject'
            examples:
              UpdateAppFeatureEx:
                $ref: '#/components/examples/UpdateAppFeatureRequestEx'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFeature'
              examples:
                UpdateAppFeatureEx:
                  $ref: '#/components/examples/UpdateAppFeatureResponseEx'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationFeatures
  /api/v1/apps/{appId}/grants:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    get:
      summary: List all Scope Consent Grants
      description: Lists all scope consent grants for the application
      operationId: listScopeConsentGrants
      parameters:
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.appGrants.read
      tags:
        - ApplicationGrants
    post:
      summary: Grant Consent to Scope
      description: Grants consent for the application to request an OAuth 2.0 Okta scope
      operationId: grantConsentToScope
      x-codegen-request-body-name: oAuth2ScopeConsentGrant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.appGrants.manage
      tags:
        - ApplicationGrants
  /api/v1/apps/{appId}/grants/{grantId}:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
      - $ref: '#/components/parameters/pathGrantId'
    get:
      summary: Retrieve a Scope Consent Grant
      description: Retrieves a single scope consent grant for the application
      operationId: getScopeConsentGrant
      parameters:
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.appGrants.read
      tags:
        - ApplicationGrants
    delete:
      summary: Revoke a Scope Consent Grant
      description: Revokes permission for the application to request the given scope
      operationId: revokeScopeConsentGrant
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.appGrants.manage
      tags:
        - ApplicationGrants
  /api/v1/apps/{appId}/groups:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    get:
      summary: List all Assigned Groups
      description: Lists all group assignments for an application
      operationId: listApplicationGroupAssignments
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of assignments
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of results for a page
          schema:
            type: integer
            format: int32
            default: -1
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationGroupAssignment'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationGroups
  /api/v1/apps/{appId}/groups/{groupId}:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
      - $ref: '#/components/parameters/pathGroupId'
    get:
      summary: Retrieve an Assigned Group
      description: Retrieves an application group assignment
      operationId: getApplicationGroupAssignment
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationGroups
    put:
      summary: Assign a Group
      description: Assigns a group to an application
      operationId: assignGroupToApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: applicationGroupAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGroupAssignment'
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationGroups
    delete:
      summary: Unassign a Group
      description: Unassigns a group from an application
      operationId: unassignApplicationFromGroup
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationGroups
  /api/v1/apps/{appId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    post:
      summary: Activate an Application
      description: Activates an inactive application
      operationId: activateApplication
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    post:
      summary: Deactivate an Application
      description: Deactivates an active application
      operationId: deactivateApplication
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/logo:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    post:
      summary: Upload an application Logo
      description: |
        Uploads a logo for the app instance.
        If the app already has a logo, this operation replaces the previous logo.

        The logo is visible in the Admin Console as an icon for your app instance.
        If you have one `appLink` object configured, this logo also appears in the End-User Dashboard as an icon for your app.
        > **Note:** If you have multiple `appLink` objects, use the Admin Console to add logos for each app link.
        > You can't use the API to add logos for multiple app links.
      operationId: uploadApplicationLogo
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: |
                    The image file containing the logo.

                    The file must be in PNG, JPG, SVG, or GIF format, and less than one MB in size.
                    For best results, use an image with a transparent background and a square dimension of 200 x 200 pixels to prevent upscaling.
              required:
                - file
      responses:
        '201':
          description: Content Created
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationLogos
  /api/v1/apps/{appId}/policies/{policyId}:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
      - $ref: '#/components/parameters/pathPolicyId'
    put:
      summary: Assign an application to a Policy
      description: |-
        Assigns an application to an [authentication policy](/openapi/okta-management/management/tag/Policy/), identified by `policyId`.
        If the application was previously assigned to another policy, this operation replaces that assignment with the updated policy identified by `policyId`.

        > **Note:** When you [merge duplicate authentication policies](https://help.okta.com/okta_help.htm?type=oie&id=ext-merge-auth-policies),
        the policy and mapping CRUD operations may be unavailable during the consolidation. When the consolidation is complete, you receive an email.
      operationId: assignApplicationPolicy
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationPolicies
  /api/v1/apps/{appId}/tokens:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    get:
      summary: List all OAuth 2.0 Tokens
      description: Lists all tokens for the application
      operationId: listOAuth2TokensForApplication
      parameters:
        - name: expand
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Token'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationTokens
    delete:
      summary: Revoke all OAuth 2.0 Tokens
      description: Revokes all tokens for the specified application
      operationId: revokeOAuth2TokensForApplication
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationTokens
  /api/v1/apps/{appId}/tokens/{tokenId}:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
      - $ref: '#/components/parameters/pathTokenId'
    get:
      summary: Retrieve an OAuth 2.0 Token
      description: Retrieves a token for the specified application
      operationId: getOAuth2TokenForApplication
      parameters:
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Token'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationTokens
    delete:
      summary: Revoke an OAuth 2.0 Token
      description: Revokes the specified token for the specified application
      operationId: revokeOAuth2TokenForApplication
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationTokens
  /api/v1/apps/{appId}/users:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    get:
      summary: List all assigned Users
      description: Lists all assigned users for an app
      operationId: listApplicationUsers
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: query_scope
          in: query
          schema:
            type: string
        - name: after
          in: query
          description: specifies the pagination cursor for the next page of assignments
          schema:
            type: string
        - name: limit
          in: query
          description: specifies the number of results for a page
          schema:
            type: integer
            format: int32
            default: -1
        - name: filter
          in: query
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppUser'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationUsers
    post:
      summary: Assign a User
      description: |-
        Assigns a user to an app with credentials and an app-specific [profile](/openapi/okta-management/management/tag/Application/#tag/Application/operation/assignUserToApplication!c=200&path=profile&t=response).
        Profile mappings defined for the app are applied first before applying any profile properties that are specified in the request.

        > **Notes:**
        > * You need to specify the `id` and omit the `credentials` parameter in the request body only for
        `signOnMode` or authentication schemes (`credentials.scheme`) that don't require credentials.
        > * You can only specify profile properties that aren't defined by profile mappings when Universal Directory is enabled.
        > * If your SSO app requires a profile but doesn't have provisioning enabled, you need to add a profile to the request body.
      operationId: assignUserToApplication
      x-codegen-request-body-name: appUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationUsers
  /api/v1/apps/{appId}/users/{userId}:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: Retrieve an assigned User
      description: Retrieves a specific user assignment for app by `id`
      operationId: getApplicationUser
      parameters:
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - ApplicationUsers
    post:
      summary: Update an App Profile for an assigned User
      description: Updates a user's profile for an application
      operationId: updateApplicationUser
      x-codegen-request-body-name: appUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationUsers
    delete:
      summary: Unassign an App User
      description: Unassigns a user from an application
      operationId: unassignUserFromApplication
      parameters:
        - name: sendEmail
          in: query
          schema:
            type: boolean
            default: false
          x-okta-added-version: 1.5.0
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - ApplicationUsers
  /api/v1/authenticators:
    get:
      summary: List all Authenticators
      description: Lists all authenticators
      operationId: listAuthenticators
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Authenticator'
                type: array
              examples:
                OrgAuthenticatorsEx:
                  $ref: '#/components/examples/AuthenticatorsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authenticators.read
      tags:
        - Authenticator
    post:
      summary: Create an Authenticator
      description: Creates an authenticator
      operationId: createAuthenticator
      parameters:
        - in: query
          name: activate
          description: Whether to execute the activation lifecycle operation when Okta creates the authenticator
          schema:
            type: boolean
            default: false
      x-codegen-request-body-name: authenticator
      requestBody:
        $ref: '#/components/requestBodies/AuthenticatorRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/AuthenticatorResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authenticators.manage
      tags:
        - Authenticator
  /api/v1/authenticators/{authenticatorId}:
    parameters:
      - $ref: '#/components/parameters/pathAuthenticatorId'
    get:
      summary: Retrieve an Authenticator
      description: Retrieves an authenticator from your Okta organization by `authenticatorId`
      operationId: getAuthenticator
      responses:
        '200':
          $ref: '#/components/responses/AuthenticatorResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authenticators.read
      tags:
        - Authenticator
    put:
      summary: Replace an Authenticator
      description: Replaces the properties for an Authenticator identified by `authenticatorId`
      operationId: replaceAuthenticator
      x-codegen-request-body-name: authenticator
      requestBody:
        $ref: '#/components/requestBodies/AuthenticatorRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/AuthenticatorResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authenticators.manage
      tags:
        - Authenticator
  /api/v1/authenticators/{authenticatorId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathAuthenticatorId'
    post:
      summary: Activate an Authenticator
      description: Activates an authenticator by `authenticatorId`
      operationId: activateAuthenticator
      responses:
        '200':
          $ref: '#/components/responses/AuthenticatorResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authenticators.manage
      tags:
        - Authenticator
  /api/v1/authenticators/{authenticatorId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathAuthenticatorId'
    post:
      summary: Deactivate an Authenticator
      description: Deactivates an authenticator by `authenticatorId`
      operationId: deactivateAuthenticator
      responses:
        '200':
          $ref: '#/components/responses/AuthenticatorResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authenticators.manage
      tags:
        - Authenticator
  /api/v1/authenticators/{authenticatorId}/methods:
    parameters:
      - $ref: '#/components/parameters/pathAuthenticatorId'
    get:
      summary: List all Methods of an Authenticator
      description: Lists all Methods of an Authenticator identified by `authenticatorId`
      operationId: listAuthenticatorMethods
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthenticatorMethodBase'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authenticators.read
      tags:
        - Authenticator
  /api/v1/authenticators/{authenticatorId}/methods/{methodType}:
    parameters:
      - $ref: '#/components/parameters/pathAuthenticatorId'
      - $ref: '#/components/parameters/pathMethodType'
    get:
      summary: Retrieve a Method
      description: Retrieves a Method identified by `methodType` of an Authenticator identified by `authenticatorId`
      operationId: getAuthenticatorMethod
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorMethodBase'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authenticators.read
      tags:
        - Authenticator
    put:
      summary: Replace a Method
      description: Replaces a Method of `methodType` for an Authenticator identified by `authenticatorId`
      operationId: replaceAuthenticatorMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorMethodBase'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorMethodBase'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authenticators.manage
      tags:
        - Authenticator
  /api/v1/authenticators/{authenticatorId}/methods/{methodType}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathAuthenticatorId'
      - $ref: '#/components/parameters/pathMethodType'
    post:
      summary: Activate an Authenticator Method
      description: Activates a Method for an Authenticator identified by `authenticatorId` and `methodType`
      operationId: activateAuthenticatorMethod
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorMethodBase'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authenticators.manage
      tags:
        - Authenticator
  /api/v1/authenticators/{authenticatorId}/methods/{methodType}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathAuthenticatorId'
      - $ref: '#/components/parameters/pathMethodType'
    post:
      summary: Deactivate an Authenticator Method
      description: Deactivates a Method for an Authenticator identified by `authenticatorId` and `methodType`
      operationId: deactivateAuthenticatorMethod
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorMethodBase'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authenticators.manage
      tags:
        - Authenticator
  /api/v1/authorizationServers:
    get:
      summary: List all Authorization Servers
      description: Lists all authorization servers
      operationId: listAuthorizationServers
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 200
        - name: after
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationServer'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    post:
      summary: Create an Authorization Server
      description: Creates an authorization server
      operationId: createAuthorizationServer
      x-codegen-request-body-name: authorizationServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServer'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
    get:
      summary: Retrieve an Authorization Server
      description: Retrieves an authorization server
      operationId: getAuthorizationServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    put:
      summary: Replace an Authorization Server
      description: Replaces an authorization server
      operationId: replaceAuthorizationServer
      x-codegen-request-body-name: authorizationServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServer'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
    delete:
      summary: Delete an Authorization Server
      description: Deletes an authorization server
      operationId: deleteAuthorizationServer
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/associatedServers:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
    get:
      summary: List all Associated Authorization Servers
      description: Lists all associated authorization servers by trusted type for the given `authServerId`
      operationId: listAssociatedServersByTrustedType
      parameters:
        - name: trusted
          in: query
          description: Searches trusted authorization servers when true, or searches untrusted authorization servers when false
          schema:
            type: boolean
        - name: q
          in: query
          description: Searches the name or audience of the associated authorization servers
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of results for a page
          schema:
            type: integer
            format: int32
            default: 200
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of the associated authorization servers
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationServer'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    post:
      summary: Create the Associated Authorization Servers
      description: Creates the trusted relationships between the given authorization server and other authorization servers
      operationId: createAssociatedServers
      x-codegen-request-body-name: associatedServerMediated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociatedServerMediated'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationServer'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/associatedServers/{associatedServerId}:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
      - $ref: '#/components/parameters/pathAssociatedServerId'
    delete:
      summary: Delete an Associated Authorization Server
      description: Deletes an associated authorization server
      operationId: deleteAssociatedServer
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/claims:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
    get:
      summary: List all Custom Token Claims
      description: Lists all custom token claims
      operationId: listOAuth2Claims
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Claim'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    post:
      summary: Create a Custom Token Claim
      description: Creates a custom token claim
      operationId: createOAuth2Claim
      x-codegen-request-body-name: oAuth2Claim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Claim'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/claims/{claimId}:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
      - $ref: '#/components/parameters/pathClaimId'
    get:
      summary: Retrieve a Custom Token Claim
      description: Retrieves a custom token claim
      operationId: getOAuth2Claim
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    put:
      summary: Replace a Custom Token Claim
      description: Replaces a custom token claim
      operationId: replaceOAuth2Claim
      x-codegen-request-body-name: oAuth2Claim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Claim'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
    delete:
      summary: Delete a Custom Token Claim
      description: Deletes a custom token claim
      operationId: deleteOAuth2Claim
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/clients:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
    get:
      summary: List all Clients
      description: Lists all clients
      operationId: listOAuth2ClientsForAuthorizationServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Client'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
      - $ref: '#/components/parameters/pathClientId'
    get:
      summary: List all Refresh Tokens for a Client
      description: Lists all refresh tokens for a client
      operationId: listRefreshTokensForAuthorizationServerAndClient
      parameters:
        - name: expand
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: -1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    delete:
      summary: Revoke all Refresh Tokens for a Client
      description: Revokes all refresh tokens for a client
      operationId: revokeRefreshTokensForAuthorizationServerAndClient
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens/{tokenId}:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
      - $ref: '#/components/parameters/pathClientId'
      - $ref: '#/components/parameters/pathTokenId'
    get:
      summary: Retrieve a Refresh Token for a Client
      description: Retrieves a refresh token for a client
      operationId: getRefreshTokenForAuthorizationServerAndClient
      parameters:
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    delete:
      summary: Revoke a Refresh Token for a Client
      description: Revokes a refresh token for a client
      operationId: revokeRefreshTokenForAuthorizationServerAndClient
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/credentials/keys:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
    get:
      summary: List all Credential Keys
      description: Lists all credential keys
      operationId: listAuthorizationServerKeys
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/credentials/lifecycle/keyRotate:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
    post:
      summary: Rotate all Credential Keys
      description: Rotates all credential keys
      operationId: rotateAuthorizationServerKeys
      x-codegen-request-body-name: use
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JwkUse'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
    post:
      summary: Activate an Authorization Server
      description: Activates an authorization server
      operationId: activateAuthorizationServer
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
    post:
      summary: Deactivate an Authorization Server
      description: Deactivates an authorization server
      operationId: deactivateAuthorizationServer
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
    get:
      summary: List all Policies
      description: Lists all policies
      operationId: listAuthorizationServerPolicies
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationServerPolicy'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    post:
      summary: Create a Policy
      description: Creates a policy
      operationId: createAuthorizationServerPolicy
      x-codegen-request-body-name: policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicy'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
      - $ref: '#/components/parameters/pathPolicyId'
    get:
      summary: Retrieve a Policy
      description: Retrieves a policy
      operationId: getAuthorizationServerPolicy
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    put:
      summary: Replace a Policy
      description: Replaces a policy
      operationId: replaceAuthorizationServerPolicy
      x-codegen-request-body-name: policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicy'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
    delete:
      summary: Delete a Policy
      description: Deletes a policy
      operationId: deleteAuthorizationServerPolicy
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer

  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
      - $ref: '#/components/parameters/pathPolicyId'
    post:
      summary: Activate a Policy
      description: Activates an authorization server policy
      operationId: activateAuthorizationServerPolicy
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
      - $ref: '#/components/parameters/pathPolicyId'
    post:
      summary: Deactivate a Policy
      description: Deactivates an authorization server policy
      operationId: deactivateAuthorizationServerPolicy
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
      - $ref: '#/components/parameters/pathPolicyId'
    get:
      summary: List all Policy Rules
      description: Lists all policy rules for the specified Custom Authorization Server and Policy
      operationId: listAuthorizationServerPolicyRules
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    post:
      summary: Create a Policy Rule
      description: Creates a policy rule for the specified Custom Authorization Server and Policy
      operationId: createAuthorizationServerPolicyRule
      x-codegen-request-body-name: policyRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
      - $ref: '#/components/parameters/pathPolicyId'
      - $ref: '#/components/parameters/pathRuleId'
    get:
      summary: Retrieve a Policy Rule
      description: Retrieves a policy rule by `ruleId`
      operationId: getAuthorizationServerPolicyRule
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    put:
      summary: Replace a Policy Rule
      description: Replaces the configuration of the Policy Rule defined in the specified Custom Authorization Server and Policy
      operationId: replaceAuthorizationServerPolicyRule
      x-codegen-request-body-name: policyRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
    delete:
      summary: Delete a Policy Rule
      description: Deletes a Policy Rule defined in the specified Custom Authorization Server and Policy
      operationId: deleteAuthorizationServerPolicyRule
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
      - $ref: '#/components/parameters/pathPolicyId'
      - $ref: '#/components/parameters/pathRuleId'
    post:
      summary: Activate a Policy Rule
      description: Activates an authorization server policy rule
      operationId: activateAuthorizationServerPolicyRule
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
      - $ref: '#/components/parameters/pathPolicyId'
      - $ref: '#/components/parameters/pathRuleId'
    post:
      summary: Deactivate a Policy Rule
      description: Deactivates an authorization server policy rule
      operationId: deactivateAuthorizationServerPolicyRule
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/scopes:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
    get:
      summary: List all Custom Token Scopes
      description: Lists all custom token scopes
      operationId: listOAuth2Scopes
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: cursor
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: -1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Scope'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    post:
      summary: Create a Custom Token Scope
      description: Creates a custom token scope
      operationId: createOAuth2Scope
      x-codegen-request-body-name: oAuth2Scope
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Scope'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/scopes/{scopeId}:
    parameters:
      - $ref: '#/components/parameters/pathAuthServerId'
      - $ref: '#/components/parameters/pathScopeId'
    get:
      summary: Retrieve a Custom Token Scope
      description: Retrieves a custom token scope
      operationId: getOAuth2Scope
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    put:
      summary: Replace a Custom Token Scope
      description: Replaces a custom token scope
      operationId: replaceOAuth2Scope
      x-codegen-request-body-name: oAuth2Scope
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Scope'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
    delete:
      summary: Delete a Custom Token Scope
      description: Deletes a custom token scope
      operationId: deleteOAuth2Scope
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/behaviors:
    get:
      summary: List all Behavior Detection Rules
      description: Lists all behavior detection rules with pagination support
      operationId: listBehaviorDetectionRules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BehaviorRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.behaviors.read
      tags:
        - Behavior
    post:
      summary: Create a Behavior Detection Rule
      description: Creates a new behavior detection rule
      operationId: createBehaviorDetectionRule
      x-codegen-request-body-name: rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BehaviorRule'
            examples:
              BehaviorRuleRequest:
                $ref: '#/components/examples/BehaviorRuleRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorRule'
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.behaviors.manage
      tags:
        - Behavior
  /api/v1/behaviors/{behaviorId}:
    parameters:
      - $ref: '#/components/parameters/pathBehaviorId'
    get:
      summary: Retrieve a Behavior Detection Rule
      description: Retrieves a Behavior Detection Rule by `behaviorId`
      operationId: getBehaviorDetectionRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.behaviors.read
      tags:
        - Behavior
    put:
      summary: Replace a Behavior Detection Rule
      description: Replaces a Behavior Detection Rule by `behaviorId`
      operationId: replaceBehaviorDetectionRule
      x-codegen-request-body-name: rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BehaviorRule'
            examples:
              BehaviorRuleRequest:
                $ref: '#/components/examples/BehaviorRuleRequest'
        required: true
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorRule'
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.behaviors.manage
      tags:
        - Behavior
    delete:
      summary: Delete a Behavior Detection Rule
      description: Deletes a Behavior Detection Rule by `behaviorId`
      operationId: deleteBehaviorDetectionRule
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.behaviors.manage
      tags:
        - Behavior
  /api/v1/behaviors/{behaviorId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathBehaviorId'
    post:
      summary: Activate a Behavior Detection Rule
      description: Activates a behavior detection rule
      operationId: activateBehaviorDetectionRule
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorRule'
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.behaviors.manage
      tags:
        - Behavior
  /api/v1/behaviors/{behaviorId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathBehaviorId'
    post:
      summary: Deactivate a Behavior Detection Rule
      description: Deactivates a behavior detection rule
      operationId: deactivateBehaviorDetectionRule
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorRule'
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.behaviors.manage
      tags:
        - Behavior
  /api/v1/brands:
    parameters:
      - $ref: '#/components/parameters/queryExpandBrand'
      - $ref: '#/components/parameters/queryAfter'
      - $ref: '#/components/parameters/queryLimit'
      - $ref: '#/components/parameters/queryFilter'
    get:
      summary: List all Brands
      description: Lists all the brands in your org
      operationId: listBrands
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BrandWithEmbedded'
              examples:
                Get brands response:
                  $ref: '#/components/examples/ListBrandsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
    post:
      summary: Create a Brand
      description: Creates a new brand in your org
      operationId: createBrand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBrandRequest'
            examples:
              Create brand request:
                $ref: '#/components/examples/CreateBrandRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
              examples:
                Create brand response:
                  $ref: '#/components/examples/CreateBrandResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/queryExpandBrand'
    get:
      summary: Retrieve a Brand
      description: Retrieves a brand by `brandId`
      operationId: getBrand
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandWithEmbedded'
              examples:
                Get brand response:
                  $ref: '#/components/examples/GetBrandResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
    put:
      summary: Replace a Brand
      description: Replaces a brand by `brandId`
      operationId: replaceBrand
      x-codegen-request-body-name: brand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandRequest'
            examples:
              Update brand request:
                $ref: '#/components/examples/UpdateBrandRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
              examples:
                Update brand response:
                  $ref: '#/components/examples/UpdateBrandResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Delete a brand
      description: Deletes a brand by `brandId`
      operationId: deleteBrand
      responses:
        '204':
          description: Successfully deleted the brand.
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Cannot delete default brand:
                  $ref: '#/components/examples/ErrorDeleteDefaultBrand'
                Cannot delete brand associated with a domain:
                  $ref: '#/components/examples/ErrorDeleteBrandAssociatedWithDomain'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/domains:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: List all Domains associated with a Brand
      description: Lists all domains associated with a brand by `brandId`
      operationId: listBrandDomains
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandDomains'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/error:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/queryExpandPageRoot'
    get:
      summary: Retrieve the Error Page Sub-Resources
      description: Retrieves the error page sub-resources. The `expand` query parameter specifies which sub-resources to include in the response.
      operationId: getErrorPage
      responses:
        '200':
          description: Successfully retrieved the error page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageRoot'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/error/customized:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: Retrieve the Customized Error Page
      description: Retrieves the customized error page. The customized error page appears in your live environment.
      operationId: getCustomizedErrorPage
      responses:
        '200':
          description: Successfully retrieved the customized error page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
    put:
      summary: Replace the Customized Error Page
      description: Replaces the customized error page. The customized error page appears in your live environment.
      operationId: replaceCustomizedErrorPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorPage'
        required: true
      responses:
        '200':
          description: Successfully replaced the customized error page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Delete the Customized Error Page
      description: Deletes the customized error page. As a result, the default error page appears in your live environment.
      operationId: deleteCustomizedErrorPage
      responses:
        '204':
          description: Successfully deleted the customized error page.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/error/default:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: Retrieve the Default Error Page
      description: Retrieves the default error page. The default error page appears when no customized error page exists.
      operationId: getDefaultErrorPage
      responses:
        '200':
          description: Successfully retrieved the default error page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/error/preview:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: Retrieve the Preview Error Page Preview
      description: Retrieves the preview error page. The preview error page contains unpublished changes and isn't shown in your live environment. Preview it at `${yourOktaDomain}/error/preview`.
      operationId: getPreviewErrorPage
      responses:
        '200':
          description: Successfully retrieved the preview error page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
    put:
      summary: Replace the Preview Error Page
      description: Replaces the preview error page. The preview error page contains unpublished changes and isn't shown in your live environment. Preview it at `${yourOktaDomain}/error/preview`.
      operationId: replacePreviewErrorPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorPage'
        required: true
      responses:
        '200':
          description: Successfully replaced the preview error page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Delete the Preview Error Page
      description: Deletes the preview error page. The preview error page contains unpublished changes and isn't shown in your live environment. Preview it at `${yourOktaDomain}/error/preview`.
      operationId: deletePreviewErrorPage
      responses:
        '204':
          description: Successfully deleted the preview error page.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/sign-in:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/queryExpandPageRoot'
    get:
      summary: Retrieve the Sign-in Page Sub-Resources
      description: Retrieves the sign-in page sub-resources. The `expand` query parameter specifies which sub-resources to include in the response.
      operationId: getSignInPage
      responses:
        '200':
          description: Successfully retrieved the sign-in page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageRoot'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/sign-in/customized:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: Retrieve the Customized Sign-in Page
      description: Retrieves the customized sign-in page. The customized sign-in page appears in your live environment.
      operationId: getCustomizedSignInPage
      responses:
        '200':
          description: Successfully retrieved the customized sign-in page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
    put:
      summary: Replace the Customized Sign-in Page
      description: Replaces the customized sign-in page. The customized sign-in page appears in your live environment.
      operationId: replaceCustomizedSignInPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInPage'
        required: true
      responses:
        '200':
          description: Successfully replaced the customized sign-in page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Delete the Customized Sign-in Page
      description: Deletes the customized sign-in page. As a result, the default sign-in page appears in your live environment.
      operationId: deleteCustomizedSignInPage
      responses:
        '204':
          description: Successfully deleted the sign-in page.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/sign-in/default:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: Retrieve the Default Sign-in Page
      description: Retrieves the default sign-in page. The default sign-in page appears when no customized sign-in page exists.
      operationId: getDefaultSignInPage
      responses:
        '200':
          description: Successfully retrieved the default sign-in page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/sign-in/preview:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: Retrieve the Preview Sign-in Page Preview
      description: Retrieves the preview sign-in page. The preview sign-in page contains unpublished changes and isn't shown in your live environment. Preview it at `${yourOktaDomain}/login/preview`.
      operationId: getPreviewSignInPage
      responses:
        '200':
          description: Successfully retrieved the preview sign-in page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
    put:
      summary: Replace the Preview Sign-in Page
      description: Replaces the preview sign-in page. The preview sign-in page contains unpublished changes and isn't shown in your live environment. Preview it at `${yourOktaDomain}/login/preview`.
      operationId: replacePreviewSignInPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInPage'
        required: true
      responses:
        '200':
          description: Successfully replaced the preview sign-in page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Delete the Preview Sign-in Page
      description: Deletes the preview sign-in page. The preview sign-in page contains unpublished changes and isn't shown in your live environment. Preview it at `${yourOktaDomain}/login/preview`.
      operationId: deletePreviewSignInPage
      responses:
        '204':
          description: Successfully deleted the preview sign-in page.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/sign-in/widget-versions:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: List all Sign-in Widget Versions
      description: Lists all sign-in widget versions supported by the current org
      operationId: listAllSignInWidgetVersions
      responses:
        '200':
          description: Successfully listed the sign-in widget versions.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  pattern: ^\d+\.\d+$
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/sign-out/customized:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: Retrieve the Sign-out Page Settings
      description: Retrieves the sign-out page settings
      operationId: getSignOutPageSettings
      responses:
        '200':
          description: Successfully retrieved the sign-out page settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
    put:
      summary: Replace the Sign-out Page Settings
      description: Replaces the sign-out page settings
      operationId: replaceSignOutPageSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostedPage'
        required: true
      responses:
        '200':
          description: Successfully replaced the sign-out page settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPage'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: List all Email Templates
      description: Lists all email templates
      operationId: listEmailTemplates
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
        - $ref: '#/components/parameters/queryExpandEmailTemplate'
      responses:
        '200':
          description: Successfully returned the list of email templates.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailTemplate'
              examples:
                List email templates response:
                  $ref: '#/components/examples/ListEmailTemplateResponse'
          headers:
            Link:
              schema:
                type: string
              description: The pagination header containing links to the current and next page of results. See [Pagination](/#pagination) for more information.
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
    get:
      summary: Retrieve an Email Template
      description: Retrieves the details of an email template by name
      operationId: getEmailTemplate
      parameters:
        - $ref: '#/components/parameters/queryExpandEmailTemplate'
      responses:
        '200':
          description: Successfully retrieved the email template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
              examples:
                Get email template response:
                  $ref: '#/components/examples/GetEmailTemplateResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
    get:
      summary: List all Email Customizations
      description: Lists all customizations of an email template
      operationId: listEmailCustomizations
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
      responses:
        '200':
          description: Successfully retrieved all email customizations for the specified email template.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailCustomization'
              examples:
                List Email customizations response:
                  $ref: '#/components/examples/ListEmailCustomizationResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - Customization
    post:
      summary: Create an Email Customization
      description: Creates a new email customization
      operationId: createEmailCustomization
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCustomization'
            examples:
              Create email customization request:
                $ref: '#/components/examples/CreateUpdateEmailCustomizationRequest'
      responses:
        '201':
          description: Successfully created the email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCustomization'
              examples:
                Create email customization response:
                  $ref: '#/components/examples/CreateUpdateEmailCustomizationResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Could not create the email customization because it conflicts with an existing email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Default email customization already exists:
                  $ref: '#/components/examples/ErrorEmailCustomizationDefaultAlreadyExists'
                Email customization already exists for the specified language:
                  $ref: '#/components/examples/ErrorEmailCustomizationLanguageAlreadyExists'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - Customization
    delete:
      summary: Delete all Email Customizations
      description: Deletes all customizations for an email template
      operationId: deleteAllCustomizations
      responses:
        '204':
          description: Successfully deleted all customizations for the email template.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
      - $ref: '#/components/parameters/pathCustomizationId'
    get:
      summary: Retrieve an Email Customization
      description: Retrieves an email customization by its unique identifier
      operationId: getEmailCustomization
      responses:
        '200':
          description: Successfully retrieved the email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCustomization'
              examples:
                Get email customization response:
                  $ref: '#/components/examples/EmailCustomizationResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - Customization
    put:
      summary: Replace an Email Customization
      description: Replaces an existing email customization using the property values provided
      operationId: replaceEmailCustomization
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCustomization'
            examples:
              Update email customization request:
                $ref: '#/components/examples/CreateUpdateEmailCustomizationRequest'
        description: Request
      responses:
        '200':
          description: Successfully updated the email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCustomization'
              examples:
                Update email customization response:
                  $ref: '#/components/examples/CreateUpdateEmailCustomizationResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Could not update the email customization because the update would cause a conflict with an existing email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Default email customization already exists:
                  $ref: '#/components/examples/ErrorEmailCustomizationDefaultAlreadyExists'
                Email customization already exists for the specified language:
                  $ref: '#/components/examples/ErrorEmailCustomizationLanguageAlreadyExists'
                Cannot set the default email customization's isDefault to false:
                  $ref: '#/components/examples/ErrorEmailCustomizationCannotClearDefault'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - Customization
    delete:
      summary: Delete an Email Customization
      description: Deletes an email customization by its unique identifier
      operationId: deleteEmailCustomization
      responses:
        '204':
          description: Successfully deleted the email customization.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Could not delete the email customization deleted because it is the default email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Cannot delete default email customization:
                  $ref: '#/components/examples/ErrorEmailCustomizationCannotDeleteDefault'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}/preview:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
      - $ref: '#/components/parameters/pathCustomizationId'
    get:
      summary: Retrieve a Preview of an Email Customization
      description: Retrieves a preview of an email customization. All variable references (e.g., `${user.profile.firstName}`) are populated using the current user's context.
      operationId: getCustomizationPreview
      responses:
        '200':
          description: Successfully generated a preview of the email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailPreview'
              examples:
                Preview email customization response:
                  $ref: '#/components/examples/PreviewEmailCustomizationResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
    get:
      summary: Retrieve an Email Template Default Content
      description: Retrieves an email template's default content
      operationId: getEmailDefaultContent
      parameters:
        - $ref: '#/components/parameters/queryLanguage'
      responses:
        '200':
          description: Successfully retrieved the email template's default content.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDefaultContent'
              examples:
                Get email template default content response:
                  $ref: '#/components/examples/EmailTemplateDefaultContentResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content/preview:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
    get:
      summary: Retrieve a Preview of the Email Template Default Content
      description: Retrieves a preview of an email template's default content. All variable references (e.g., `${user.profile.firstName}`) are populated using the current user's context.
      operationId: getEmailDefaultPreview
      parameters:
        - $ref: '#/components/parameters/queryLanguage'
      responses:
        '200':
          description: Successfully generated a preview of the email template's default content.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailPreview'
              examples:
                Preview email template default content response:
                  $ref: '#/components/examples/PreviewEmailTemplateDefaultContentResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/settings:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
    get:
      summary: Retrieve the Email Template Settings
      description: Retrieves an email template's settings
      operationId: getEmailSettings
      responses:
        '200':
          description: Successfully retrieved the email template's settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSettings'
              examples:
                Get email template settings response:
                  $ref: '#/components/examples/EmailSettingsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - Customization
    put:
      summary: Replace the Email Template Settings
      description: Replaces an email template's settings
      operationId: replaceEmailSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSettings'
      responses:
        '204':
          description: Successfully updated the email template's settings.
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '422':
          description: Could not update the email template's settings due to an invalid setting value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Invalid email template recipients:
                  $ref: '#/components/examples/ErrorInvalidEmailTemplateRecipients'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/test:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
    post:
      summary: Send a Test Email
      description: |-
        Sends a test email to the current user’s primary and secondary email addresses. The email content is selected based on the following priority:
        1. The email customization for the language specified in the `language` query parameter.
        2. The email template's default customization.
        3. The email template’s default content, translated to the current user's language.
      operationId: sendTestEmail
      parameters:
        - $ref: '#/components/parameters/queryLanguage'
      responses:
        '204':
          description: Successfully sent a test email.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/themes:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: List all Themes
      description: Lists all the themes in your brand
      operationId: listBrandThemes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThemeResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/themes/{themeId}:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathThemeId'
    get:
      summary: Retrieve a Theme
      description: Retrieves a theme for a brand
      operationId: getBrandTheme
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Customization
    put:
      summary: Replace a Theme
      description: Replaces a theme for a brand
      operationId: replaceBrandTheme
      x-codegen-request-body-name: theme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theme'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/themes/{themeId}/background-image:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathThemeId'
    post:
      summary: Upload the Background Image
      description: Uploads and replaces the background image for the theme. The file must be in PNG, JPG, or GIF format and less than 2 MB in size.
      operationId: uploadBrandThemeBackgroundImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: The file must be in PNG, JPG, or GIF format and less than 2 MB in size.
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
        description: background image file
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Delete the Background Image
      description: Deletes a Theme background image
      operationId: deleteBrandThemeBackgroundImage
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/themes/{themeId}/favicon:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathThemeId'
    post:
      summary: Upload the Favicon
      description: Uploads and replaces the favicon for the theme
      operationId: uploadBrandThemeFavicon
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: The file must be in PNG, or ico format and less than ?? in size and 128 x 128 dimensions
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
        description: favicon file
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Delete the Favicon
      description: Deletes a Theme favicon. The theme will use the default Okta favicon.
      operationId: deleteBrandThemeFavicon
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/themes/{themeId}/logo:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathThemeId'
    post:
      summary: Upload the Logo
      description: Uploads and replaces the logo for the theme. The file must be in PNG, JPG, or GIF format and less than 100kB in size. For best results use landscape orientation, a transparent background, and a minimum size of 300px by 50px to prevent upscaling.
      operationId: uploadBrandThemeLogo
      requestBody:
        content:
          multipart/form-data:
            schema:
              description: The file must be in PNG, JPG, or GIF format and less than 100kB in size. For best results use landscape orientation, a transparent background, and a minimum size of 300px by 50px to prevent upscaling.
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
        description: logo file
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Delete the Logo
      description: Deletes a Theme logo. The theme will use the default Okta logo.
      operationId: deleteBrandThemeLogo
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/captchas:
    get:
      summary: List all CAPTCHA Instances
      description: Lists all CAPTCHA instances with pagination support. A subset of CAPTCHA instances can be returned that match a supported filter expression or query.
      operationId: listCaptchaInstances
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CAPTCHAInstance'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.captchas.read
      tags:
        - CAPTCHA
    post:
      summary: Create a CAPTCHA instance
      description: Creates a new CAPTCHA instance. Currently, an org can only configure a single CAPTCHA instance.
      operationId: createCaptchaInstance
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
                Error Limit of One CAPTCHA instance per org:
                  $ref: '#/components/examples/ErrorCAPTCHALimitOfOne'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.captchas.manage
      tags:
        - CAPTCHA
  /api/v1/captchas/{captchaId}:
    parameters:
      - $ref: '#/components/parameters/pathCaptchaId'
    get:
      summary: Retrieve a CAPTCHA Instance
      description: Retrieves the properties of a specified CAPTCHA instance
      operationId: getCaptchaInstance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.captchas.read
      tags:
        - CAPTCHA
    post:
      summary: Update a CAPTCHA Instance
      description: Partially updates the properties of a specified CAPTCHA instance
      operationId: updateCaptchaInstance
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.captchas.manage
      tags:
        - CAPTCHA
    put:
      summary: Replace a CAPTCHA Instance
      description: Replaces the properties for a specified CAPTCHA instance
      operationId: replaceCaptchaInstance
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.captchas.manage
      tags:
        - CAPTCHA
    delete:
      summary: Delete a CAPTCHA Instance
      description: |-
        Deletes a specified CAPTCHA instance
        > **Note:** If your CAPTCHA instance is still associated with your org, the request fails. You must first update your Org-wide CAPTCHA settings to remove the CAPTCHA instance.
      operationId: deleteCaptchaInstance
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
                Cannot remove CAPTCHA in use:
                  $ref: '#/components/examples/ErrorCAPTCHAOrgWideSetting'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.captchas.manage
      tags:
        - CAPTCHA
  /api/v1/device-assurances:
    get:
      summary: List all Device Assurance Policies
      description: Lists all device assurance policies
      operationId: listDeviceAssurancePolicies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceAssurance'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.deviceAssurance.read
      tags:
        - DeviceAssurance
    post:
      summary: Create a Device Assurance Policy
      description: Creates a new Device Assurance Policy
      operationId: createDeviceAssurancePolicy
      x-codegen-request-body-name: deviceAssurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAssurance'
            examples:
              Android:
                $ref: '#/components/examples/DeviceAssuranceAndroidRequest'
              iOS:
                $ref: '#/components/examples/DeviceAssuranceIosRequest'
              MacOS:
                $ref: '#/components/examples/DeviceAssuranceMacOSRequest'
              Windows:
                $ref: '#/components/examples/DeviceAssuranceWindowsRequest'
              ChromeOSWithThirdPartySignalProviders:
                $ref: '#/components/examples/DeviceAssuranceChromeOSWithThirdPartySignalProvidersRequest'
              MacOSWithThirdPartySignalProviders:
                $ref: '#/components/examples/DeviceAssuranceMacOSWithThirdPartySignalProvidersRequest'
              WindowsWithThirdPartySignalProviders:
                $ref: '#/components/examples/DeviceAssuranceWindowsWithThirdPartySignalProvidersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAssurance'
              examples:
                Android:
                  $ref: '#/components/examples/DeviceAssuranceAndroidResponse'
                iOS:
                  $ref: '#/components/examples/DeviceAssuranceIosResponse'
                MacOS:
                  $ref: '#/components/examples/DeviceAssuranceMacOSResponse'
                Windows:
                  $ref: '#/components/examples/DeviceAssuranceWindowsResponse'
                ChromeOSWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceChromeOSWithThirdPartySignalProvidersResponse'
                MacOSWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceMacOSWithThirdPartySignalProvidersResponse'
                WindowsWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithThirdPartySignalProvidersResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.deviceAssurance.manage
      tags:
        - DeviceAssurance
  /api/v1/device-assurances/{deviceAssuranceId}:
    parameters:
      - $ref: '#/components/parameters/pathDeviceAssuranceId'
    get:
      summary: Retrieve a Device Assurance Policy
      description: Retrieves a Device Assurance Policy by `deviceAssuranceId`
      operationId: getDeviceAssurancePolicy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAssurance'
              examples:
                Android:
                  $ref: '#/components/examples/DeviceAssuranceAndroidResponse'
                iOS:
                  $ref: '#/components/examples/DeviceAssuranceIosResponse'
                MacOS:
                  $ref: '#/components/examples/DeviceAssuranceMacOSResponse'
                Windows:
                  $ref: '#/components/examples/DeviceAssuranceWindowsResponse'
                ChromeOSWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceChromeOSWithThirdPartySignalProvidersResponse'
                MacOSWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceMacOSWithThirdPartySignalProvidersResponse'
                WindowsWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithThirdPartySignalProvidersResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.deviceAssurance.read
      tags:
        - DeviceAssurance
    put:
      summary: Replace a Device Assurance Policy
      description: Replaces a Device Assurance Policy by `deviceAssuranceId`
      operationId: replaceDeviceAssurancePolicy
      x-codegen-request-body-name: deviceAssurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAssurance'
            examples:
              Android:
                $ref: '#/components/examples/DeviceAssuranceAndroidRequest'
              iOS:
                $ref: '#/components/examples/DeviceAssuranceIosRequest'
              MacOS:
                $ref: '#/components/examples/DeviceAssuranceMacOSRequest'
              Windows:
                $ref: '#/components/examples/DeviceAssuranceWindowsRequest'
              ChromeOSWithThirdPartySignalProviders:
                $ref: '#/components/examples/DeviceAssuranceChromeOSWithThirdPartySignalProvidersRequest'
              MacOSWithThirdPartySignalProviders:
                $ref: '#/components/examples/DeviceAssuranceMacOSWithThirdPartySignalProvidersRequest'
              WindowsWithThirdPartySignalProviders:
                $ref: '#/components/examples/DeviceAssuranceWindowsWithThirdPartySignalProvidersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAssurance'
              examples:
                Android:
                  $ref: '#/components/examples/DeviceAssuranceAndroidResponse'
                iOS:
                  $ref: '#/components/examples/DeviceAssuranceIosResponse'
                MacOS:
                  $ref: '#/components/examples/DeviceAssuranceMacOSResponse'
                Windows:
                  $ref: '#/components/examples/DeviceAssuranceWindowsResponse'
                ChromeOSWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceChromeOSWithThirdPartySignalProvidersResponse'
                MacOSWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceMacOSWithThirdPartySignalProvidersResponse'
                WindowsWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithThirdPartySignalProvidersResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.deviceAssurance.manage
      tags:
        - DeviceAssurance
    delete:
      summary: Delete a Device Assurance Policy
      description: Deletes a Device Assurance Policy by `deviceAssuranceId`. If the Device Assurance Policy is currently being used in the org Authentication Policies, the delete will not be allowed.
      operationId: deleteDeviceAssurancePolicy
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                ErrorDeviceAssuranceInUse:
                  $ref: '#/components/examples/ErrorDeviceAssuranceInUse'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.deviceAssurance.manage
      tags:
        - DeviceAssurance
  /api/v1/devices:
    get:
      summary: List all Devices
      description: |-
        Lists all devices with pagination support.
        You can return a subset of Devices that match a supported search criteria using the `search` query parameter.
        Searches for devices based on the properties specified in the `search` parameter conforming SCIM filter specifications (case-insensitive). This data is eventually consistent. The API returns different results depending on specified queries in the request. Empty list is returned if no objects match `search` request.
        > **Note:** Listing devices with `search` should not be used as a part of any critical flows—such as authentication or updates—to prevent potential data loss. `search` results may not reflect the latest information, as this endpoint uses a search index which may not be up-to-date with recent updates to the object. <br> Don't use search results directly for record updates, as the data might be stale and therefore overwrite newer data, resulting in data loss. <br> Use an `id` lookup for records that you update to ensure your results contain the latest data.
        This operation requires [URL encoding](https://www.w3.org/TR/html4/interact/forms.html#h-17.13.4.1). For example, `search=profile.displayName eq "Bob"` is encoded as `search=profile.displayName%20eq%20%22Bob%22`.
      operationId: listDevices
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 200
          description: A limit on the number of objects to return (recommend `20`)
        - name: search
          in: query
          description: A SCIM filter expression that filters the results. Searches include all Device `profile` properties and the Device `id`, `status`, and `lastUpdated` properties.
          schema:
            type: string
          examples:
            Devices that have a `status` of `ACTIVE`:
              value: status eq "ACTIVE"
            Devices last updated after a specific timestamp:
              value: lastUpdated gt "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
            Devices with a specified `id`:
              value: id eq "guo4a5u7JHHhjXrMK0g4"
            Devices that have a `displayName` of `Bob`:
              value: profile.displayName eq "Bob"
            Devices that have an `platform` of `WINDOWS`:
              value: profile.platform eq "WINDOWS"
            Devices whose `sid` starts with `S-1`:
              value: profile.sid sw "S-1"
        - in: query
          name: expand
          schema:
            type: string
            enum:
              - user
          description: Lists associated users for the device in `_embedded` element
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
              examples:
                APIDevicesResponseExample:
                  type: array
                  $ref: '#/components/examples/APIDevicesListAllResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.read
      tags:
        - Device
  /api/v1/devices/{deviceId}:
    parameters:
      - $ref: '#/components/parameters/pathDeviceId'
    get:
      summary: Retrieve a Device
      description: Retrieves a device by `deviceId`
      operationId: getDevice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
              examples:
                APIDevicesResponseExample:
                  $ref: '#/components/examples/DeviceResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.read
      tags:
        - Device
    delete:
      summary: Delete a Device
      description: |-
        Deletes (permanently) a device by `deviceId` if it has a status of `DEACTIVATED`. You can transition the device to `DEACTIVATED` status using the [Deactivate a Device](#tag/Device/operation/deactivateDevice) endpoint.
        This request is destructive and deletes all of the profile data related to the device. Once deleted, device data can't be recovered. However, reenrollment creates a new device record.
        > **Note:** Attempts to delete a device that isn't in a `DEACTIVATED` state raise an error.
      operationId: deleteDevice
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.manage
      tags:
        - Device
  /api/v1/devices/{deviceId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathDeviceId'
    post:
      summary: Activate a Device
      description: |-
        Activates a Device by setting its status to ACTIVE by `deviceId`.
        Activated devices are used to create and delete Device user links.
      operationId: activateDevice
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.manage
      tags:
        - Device
  /api/v1/devices/{deviceId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathDeviceId'
    post:
      summary: Deactivate a Device
      description: |-
        Deactivates a Device by setting its status to DEACTIVATED by `deviceId`.
        Deactivation causes a Device to lose all device user links.
        Set the Device status to DEACTIVATED before deleting it.
        > **Note:** When deactivating a Device, keep in mind the following:
          - Device deactivation is a destructive operation for device factors and client certificates. Device reenrollment using Okta Verify allows end users to set up new factors on the device.
          - Device deletion removes the device record from Okta. Reenrollment creates a new device record.
      operationId: deactivateDevice
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.manage
      tags:
        - Device
  /api/v1/devices/{deviceId}/lifecycle/suspend:
    parameters:
      - $ref: '#/components/parameters/pathDeviceId'
    post:
      summary: Suspend a Device
      description: |-
        Suspends a Device by setting its status to ACTIVE.
        Use suspended devices to create and delete device user links.
        You can only unsuspend or deactivate suspended devices.
        > **Note:** SUSPENDED status is meant to be temporary, so it isn't destructive.
      operationId: suspendDevice
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.manage
      tags:
        - Device
  /api/v1/devices/{deviceId}/lifecycle/unsuspend:
    parameters:
      - $ref: '#/components/parameters/pathDeviceId'
    post:
      summary: Unsuspend a Device
      description: |-
        Unsuspends a Device by returning its `status` to ACTIVE.
        >**Note:** Only devices with a SUSPENDED status can be unsuspended.
      operationId: unsuspendDevice
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.manage
      tags:
        - Device
  /api/v1/devices/{deviceId}/users:
    parameters:
      - $ref: '#/components/parameters/pathDeviceId'
    get:
      summary: List all Users for a Device
      description: Lists all Users for a Device by `deviceId`
      operationId: listDeviceUsers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceUser'
              examples:
                APIDevicesListAllUsersResponseExample:
                  summary: List all users for a specific device
                  $ref: '#/components/examples/APIDevicesListAllUsersResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.read
      tags:
        - Device
  /api/v1/domains:
    get:
      summary: List all Custom Domains
      description: Lists all verified custom domains for the org
      operationId: listCustomDomains
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainListResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.domains.read
      tags:
        - CustomDomain
    post:
      summary: Create a Custom Domain
      description: Creates your custom domain
      operationId: createCustomDomain
      x-codegen-request-body-name: domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.domains.manage
      tags:
        - CustomDomain
  /api/v1/domains/{domainId}:
    parameters:
      - $ref: '#/components/parameters/pathDomainId'
    get:
      summary: Retrieve a Custom Domain
      description: Retrieves a custom domain by `domainId`
      operationId: getCustomDomain
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.domains.read
      tags:
        - CustomDomain
    put:
      summary: Replace a Custom Domain's Brand
      description: Replaces a custom domain's brand
      operationId: replaceCustomDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomain'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.domains.manage
      tags:
        - CustomDomain
    delete:
      summary: Delete a Custom Domain
      description: Deletes a custom domain by `domainId`
      operationId: deleteCustomDomain
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.domains.manage
      tags:
        - CustomDomain
  /api/v1/domains/{domainId}/certificate:
    parameters:
      - $ref: '#/components/parameters/pathDomainId'
    put:
      summary: Upsert the Custom Domain's Certificate
      description: Upserts (creates or renews) the `MANUAL` certificate for the custom domain. If the `certificateSourceType` in the domain is `OKTA_MANAGED`, it becomes `MANUAL` and Okta no longer manages and renews certificates for this domain since a user-managed certificate has been provided.
      operationId: upsertCertificate
      x-codegen-request-body-name: certificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertificate'
        required: true
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.domains.manage
      tags:
        - CustomDomain
  /api/v1/domains/{domainId}/verify:
    parameters:
      - $ref: '#/components/parameters/pathDomainId'
    post:
      summary: Verify a Custom Domain
      description: Verifies the custom domain and validity of DNS records by `domainId`. Furthermore, if the `certificateSourceType` in the domain is `OKTA_MANAGED`, then an attempt is made to obtain and install a certificate. After a certificate is obtained and installed by Okta, Okta manages the certificate including certificate renewal.
      operationId: verifyDomain
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.domains.manage
      tags:
        - CustomDomain
  /api/v1/email-domains:
    parameters:
      - $ref: '#/components/parameters/queryExpandEmailDomain'
    get:
      summary: List all Email Domains
      description: Lists all the Email Domains in your org
      operationId: listEmailDomains
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailDomainResponseWithEmbedded'
              examples:
                List email domain response:
                  $ref: '#/components/examples/EmailDomainResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailDomains.read
      tags:
        - EmailDomain
    post:
      summary: Create an Email Domain
      description: Creates an Email Domain in your org
      operationId: createEmailDomain
      x-codegen-request-body-name: emailDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailDomain'
            examples:
              Create email domain request:
                $ref: '#/components/examples/CreateEmailDomainRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
              examples:
                Create email domain response:
                  $ref: '#/components/examples/EmailDomainResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Email domain already exists:
                  $ref: '#/components/examples/ErrorEmailDomainAlreadyExists'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailDomains.manage
      tags:
        - EmailDomain
  /api/v1/email-domains/{emailDomainId}:
    parameters:
      - $ref: '#/components/parameters/pathEmailDomainId'
      - $ref: '#/components/parameters/queryExpandEmailDomain'
    get:
      summary: Retrieve an Email Domain
      description: Retrieves an Email Domain by `emailDomainId`
      operationId: getEmailDomain
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponseWithEmbedded'
              examples:
                Retrieve email domain response:
                  $ref: '#/components/examples/EmailDomainResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailDomains.read
      tags:
        - EmailDomain
    put:
      summary: Replace an Email Domain
      description: Replaces associated username and sender display name by `emailDomainId`
      operationId: replaceEmailDomain
      x-codegen-request-body-name: updateEmailDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailDomain'
            examples:
              Update email domain request:
                $ref: '#/components/examples/UpdateEmailDomainRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
              examples:
                Update email domain response:
                  $ref: '#/components/examples/UpdatedEmailDomainResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailDomains.manage
      tags:
        - EmailDomain
    delete:
      summary: Delete an Email Domain
      description: Deletes an Email Domain by `emailDomainId`
      operationId: deleteEmailDomain
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          description: Unable to delete custom email domain due to mail provider specific restrictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Email domain in use:
                  $ref: '#/components/examples/ErrorEmailDomainInUse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailDomains.manage
      tags:
        - EmailDomain
  /api/v1/email-domains/{emailDomainId}/verify:
    parameters:
      - $ref: '#/components/parameters/pathEmailDomainId'
    post:
      summary: Verify an Email Domain
      description: Verifies an Email Domain by `emailDomainId`
      operationId: verifyEmailDomain
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
              examples:
                Verified email domain response:
                  $ref: '#/components/examples/VerifiedEmailDomainResponse'
        '400':
          description: Email domain could not be verified by mail provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Email domain could not be verified:
                  $ref: '#/components/examples/ErrorEmailDomainNotVerified'
                Email domain invalid status:
                  $ref: '#/components/examples/ErrorEmailDomainInvalidStatus'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailDomains.manage
      tags:
        - EmailDomain
  /api/v1/email-servers:
    get:
      summary: List all enrolled SMTP servers
      description: Lists all the enrolled custom email SMTP servers
      operationId: listEmailServers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServerListResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailServers.read
      tags:
        - EmailServer
    post:
      summary: Create a custom SMTP server
      description: Creates a custom email SMTP server configuration for your organization
      operationId: createEmailServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailServerPost'
      responses:
        '201':
          description: Successfully enrolled server credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServerResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailServers.manage
      tags:
        - EmailServer
  /api/v1/email-servers/{emailServerId}:
    parameters:
      - $ref: '#/components/parameters/pathEmailServerId'
    get:
      summary: Retrieve an SMTP Server configuration
      description: Retrieves a configuration of your organization's custom SMTP server with the given ID
      operationId: getEmailServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServerListResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailServers.read
      tags:
        - EmailServer
    patch:
      summary: Update an SMTP Server configuration
      description: Updates one or more fields of your organization's custom SMTP Server configuration
      operationId: updateEmailServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailServerRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServerResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailServers.manage
      tags:
        - EmailServer
    delete:
      summary: Delete an SMTP Server configuration
      description: Deletes your organization's custom SMTP server with the given ID
      operationId: deleteEmailServer
      responses:
        '204':
          description: No content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailServers.manage
      tags:
        - EmailServer
  /api/v1/email-servers/{emailServerId}/test:
    parameters:
      - $ref: '#/components/parameters/pathEmailServerId'
    post:
      summary: Test an SMTP Server configuration
      description: Tests your organization's custom SMTP Server with the given ID
      operationId: testEmailServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTestAddresses'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailServers.manage
      tags:
        - EmailServer
  /api/v1/eventHooks:
    get:
      summary: List all Event Hooks
      description: Lists all event hooks
      operationId: listEventHooks
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.read
      tags:
        - EventHook
    post:
      summary: Create an Event Hook
      description: Creates an event hook
      operationId: createEventHook
      x-codegen-request-body-name: eventHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.manage
      tags:
        - EventHook
  /api/v1/eventHooks/{eventHookId}:
    parameters:
      - $ref: '#/components/parameters/pathEventHookId'
    get:
      summary: Retrieve an Event Hook
      description: Retrieves an event hook
      operationId: getEventHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.read
      tags:
        - EventHook
    put:
      summary: Replace an Event Hook
      description: Replaces an event hook
      operationId: replaceEventHook
      x-codegen-request-body-name: eventHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.manage
      tags:
        - EventHook
    delete:
      summary: Delete an Event Hook
      description: Deletes an event hook
      operationId: deleteEventHook
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.manage
      tags:
        - EventHook
  /api/v1/eventHooks/{eventHookId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathEventHookId'
    post:
      summary: Activate an Event Hook
      description: Activates an event hook
      operationId: activateEventHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.manage
      tags:
        - EventHook
  /api/v1/eventHooks/{eventHookId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathEventHookId'
    post:
      summary: Deactivate an Event Hook
      description: Deactivates an event hook
      operationId: deactivateEventHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.manage
      tags:
        - EventHook
  /api/v1/eventHooks/{eventHookId}/lifecycle/verify:
    parameters:
      - $ref: '#/components/parameters/pathEventHookId'
    post:
      summary: Verify an Event Hook
      description: Verifies an event hook
      operationId: verifyEventHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.manage
      tags:
        - EventHook
  /api/v1/features:
    get:
      summary: List all Features
      description: Lists all features
      operationId: listFeatures
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.features.read
      tags:
        - Feature
  /api/v1/features/{featureId}:
    parameters:
      - $ref: '#/components/parameters/pathFeatureId'
    get:
      summary: Retrieve a Feature
      description: Retrieves a feature
      operationId: getFeature
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.features.read
      tags:
        - Feature
  /api/v1/features/{featureId}/dependencies:
    parameters:
      - $ref: '#/components/parameters/pathFeatureId'
    get:
      summary: List all Dependencies
      description: Lists all dependencies
      operationId: listFeatureDependencies
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.features.read
      tags:
        - Feature
  /api/v1/features/{featureId}/dependents:
    parameters:
      - $ref: '#/components/parameters/pathFeatureId'
    get:
      summary: List all Dependents
      description: Lists all dependents
      operationId: listFeatureDependents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.features.read
      tags:
        - Feature
  /api/v1/features/{featureId}/{lifecycle}:
    parameters:
      - $ref: '#/components/parameters/pathFeatureId'
      - $ref: '#/components/parameters/pathLifecycle'
    post:
      summary: Update a Feature Lifecycle
      description: Updates a feature lifecycle
      operationId: updateFeatureLifecycle
      parameters:
        - name: mode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.features.manage
      tags:
        - Feature
  /api/v1/groups:
    get:
      summary: List all Groups
      description: Lists all groups with pagination support. A subset of groups can be returned that match a supported filter expression or query.
      operationId: listGroups
      parameters:
        - name: q
          in: query
          description: Searches the name property of groups for matching value
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression for groups
          schema:
            type: string
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of groups
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of group results in a page
          schema:
            type: integer
            format: int32
            default: 10000
        - name: expand
          in: query
          description: If specified, it causes additional metadata to be included in the response.
          schema:
            type: string
        - name: search
          in: query
          description: Searches for groups with a supported filtering expression for all attributes except for _embedded, _links, and objectClass
          schema:
            type: string
        - name: sortBy
          in: query
          description: Specifies field to sort by and can be any single property (for search queries only).
          schema:
            type: string
            example: lastUpdated
        - name: sortOrder
          in: query
          description: |-
            Specifies sort order `asc` or `desc` (for search queries only). This parameter is ignored if `sortBy` is not present.
            Groups with the same value for the `sortBy` parameter are ordered by `id`.
          schema:
            type: string
            default: asc
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - Group
    post:
      summary: Create a Group
      description: Creates a new group with `OKTA_GROUP` type
      operationId: createGroup
      x-codegen-request-body-name: group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/rules:
    get:
      summary: List all Group Rules
      description: Lists all group rules
      operationId: listGroupRules
      parameters:
        - name: limit
          in: query
          description: Specifies the number of rule results in a page
          schema:
            type: integer
            format: int32
            default: 50
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of rules
          schema:
            type: string
        - name: search
          in: query
          description: Specifies the keyword to search fules for
          schema:
            type: string
        - name: expand
          in: query
          description: If specified as `groupIdToGroupNameMap`, then show group names
          schema:
            type: string
          x-okta-added-version: 1.3.0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - Group
    post:
      summary: Create a Group Rule
      description: Creates a group rule to dynamically add users to the specified group if they match the condition
      operationId: createGroupRule
      x-codegen-request-body-name: groupRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/rules/{groupRuleId}:
    parameters:
      - $ref: '#/components/parameters/pathGroupRuleId'
    get:
      summary: Retrieve a Group Rule
      description: Retrieves a specific group rule by `groupRuleId`
      operationId: getGroupRule
      parameters:
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - Group
    put:
      summary: Replace a Group Rule
      description: Replaces a group rule. Only `INACTIVE` rules can be updated.
      operationId: replaceGroupRule
      x-codegen-request-body-name: groupRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
    delete:
      summary: Delete a group Rule
      description: Deletes a specific group rule by `groupRuleId`
      operationId: deleteGroupRule
      parameters:
        - name: removeUsers
          in: query
          description: Indicates whether to keep or remove users from groups assigned by this rule.
          schema:
            type: boolean
      responses:
        '202':
          description: Accepted
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/rules/{groupRuleId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathGroupRuleId'
    post:
      summary: Activate a Group Rule
      description: Activates a specific group rule by `groupRuleId`
      operationId: activateGroupRule
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/rules/{groupRuleId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathGroupRuleId'
    post:
      summary: Deactivate a Group Rule
      description: Deactivates a specific group rule by `groupRuleId`
      operationId: deactivateGroupRule
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/{groupId}:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
    get:
      summary: Retrieve a Group
      description: Retrieves a group by `groupId`
      operationId: getGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - Group
    put:
      summary: Replace a Group
      description: Replaces the profile for a group with `OKTA_GROUP` type
      operationId: replaceGroup
      x-codegen-request-body-name: group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
    delete:
      summary: Delete a Group
      description: Deletes a group with `OKTA_GROUP` type
      operationId: deleteGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/{groupId}/apps:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
    get:
      summary: List all Assigned Applications
      description: Lists all applications that are assigned to a group
      operationId: listAssignedApplicationsForGroup
      parameters:
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of apps
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of app results for a page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - Group
  /api/v1/groups/{groupId}/owners:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
    get:
      summary: List all Group Owners
      description: Lists all owners for a specific group
      operationId: listGroupOwners
      parameters:
        - name: filter
          in: query
          description: SCIM Filter expression for group owners. Allows to filter owners by type.
          schema:
            type: string
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of owners
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of owner results in a page
          schema:
            type: integer
            format: int32
            default: 1000
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupOwner'
              examples:
                ListsOneOwnerOfaGroup:
                  $ref: '#/components/examples/ListsOwnerOneResponse'
                ListsMultipleOwnersOfaGroup:
                  $ref: '#/components/examples/ListsOwnersMultipleResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - Group
    post:
      summary: Assign a Group Owner
      description: Assigns a group owner
      operationId: assignGroupOwner
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignGroupOwnerRequestBody'
            examples:
              AssignAGroupOwner:
                $ref: '#/components/examples/AssignGroupOwnerRequest'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupOwner'
              examples:
                AssignAGroupOwner:
                  $ref: '#/components/examples/AssignGroupOwnerResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/{groupId}/owners/{ownerId}:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathOwnerId'
    delete:
      summary: Delete a Group Owner
      description: Deletes a group owner from a specific group
      operationId: deleteGroupOwner
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/{groupId}/roles:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
    get:
      summary: List all Assigned Roles of Group
      description: Lists all assigned roles of group identified by `groupId`
      operationId: listGroupAssignedRoles
      parameters:
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignment
    post:
      summary: Assign a Role to a Group
      description: Assigns a role to a group
      operationId: assignRoleToGroup
      parameters:
        - name: disableNotifications
          in: query
          description: Setting this to `true` grants the group third-party admin status
          schema:
            type: boolean
      x-codegen-request-body-name: assignRoleRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '201':
          description: Success
          content: {}
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleAssignment
  /api/v1/groups/{groupId}/roles/{roleId}:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathRoleId'
    get:
      summary: Retrieve a Role assigned to Group
      description: Retrieves a role identified by `roleId` assigned to group identified by `groupId`
      operationId: getGroupAssignedRole
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignment
    delete:
      summary: Unassign a Role from a Group
      description: Unassigns a role identified by `roleId` assigned to group identified by `groupId`
      operationId: unassignRoleFromGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleAssignment
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathRoleId'
    get:
      summary: List all Application Targets for an Application Administrator Role
      description: Lists all App targets for an `APP_ADMIN` Role assigned to a Group. This methods return list may include full Applications or Instances. The response for an instance will have an `ID` value, while Application will not have an ID.
      operationId: listApplicationTargetsForApplicationAdministratorRoleForGroup
      parameters:
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogApplication'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleTarget
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathRoleId'
      - $ref: '#/components/parameters/pathAppName'
    put:
      summary: Assign an Application Target to Administrator Role
      description: Assigns an application target to administrator role
      operationId: assignAppTargetToAdminRoleForGroup
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
    delete:
      summary: Unassign an Application Target from Application Administrator Role
      description: Unassigns an application target from application administrator role
      operationId: unassignAppTargetToAdminRoleForGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{appId}:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathRoleId'
      - $ref: '#/components/parameters/pathAppName'
      - $ref: '#/components/parameters/pathAppId'
    put:
      summary: Assign an Application Instance Target to Application Administrator Role
      description: Assigns App Instance Target to App Administrator Role given to a Group
      operationId: assignAppInstanceTargetToAppAdminRoleForGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
    delete:
      summary: Unassign an Application Instance Target from an Application Administrator Role
      description: Unassigns an application instance target from application administrator role
      operationId: unassignAppInstanceTargetToAppAdminRoleForGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathRoleId'
    get:
      summary: List all Group Targets for a Group Role
      description: Lists all group targets for a group role
      operationId: listGroupTargetsForGroupRole
      parameters:
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleTarget
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathRoleId'
      - $ref: '#/components/parameters/pathTargetGroupId'
    put:
      summary: Assign a Group Target to a Group Role
      description: Assigns a group target to a group role
      operationId: assignGroupTargetToGroupAdminRole
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
    delete:
      summary: Unassign a Group Target from a Group Role
      description: Unassigns a group target from a group role
      operationId: unassignGroupTargetFromGroupAdminRole
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
  /api/v1/groups/{groupId}/users:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
    get:
      summary: List all Member Users
      description: Lists all users that are a member of a group
      operationId: listGroupUsers
      parameters:
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of users
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of user results in a page
          schema:
            type: integer
            format: int32
            default: 1000
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - Group
  /api/v1/groups/{groupId}/users/{userId}:
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathUserId'
    put:
      summary: Assign a User
      description: Assigns a user to a group with 'OKTA_GROUP' type
      operationId: assignUserToGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
    delete:
      summary: Unassign a User
      description: Unassigns a user from a group with 'OKTA_GROUP' type
      operationId: unassignUserFromGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/hook-keys:
    get:
      summary: List all keys
      description: Lists all keys
      operationId: listHookKeys
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HookKey'
              examples:
                ResponseExample:
                  $ref: '#/components/examples/ListAllKeysResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.read
      tags:
        - HookKey
    post:
      summary: Create a key
      description: |
        Creates a key for use with other parts of the application, such as inline hooks

        Use the key name to access this key for inline hook operations.

        The total number of keys that you can create in an Okta org is limited to 50.
      operationId: createHookKey
      x-codegen-request-body-name: keyRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HookKey'
              examples:
                ResponseExample:
                  $ref: '#/components/examples/CreateHookKeyResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - HookKey
  /api/v1/hook-keys/public/{publicKeyId}:
    parameters:
      - $ref: '#/components/parameters/pathPublicKeyId'
    get:
      summary: Retrieve a public key
      description: Retrieves a public key by `keyId`
      operationId: getPublicKey
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
              examples:
                ResponseExample:
                  $ref: '#/components/examples/RetrievePublicKeyResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.read
      tags:
        - HookKey
  /api/v1/hook-keys/{hookKeyId}:
    parameters:
      - $ref: '#/components/parameters/pathHookKeyId'
    get:
      summary: Retrieve a key
      description: Retrieves a key by `hookKeyId`
      operationId: getHookKey
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HookKey'
                examples:
                  ResponseExample:
                    $ref: '#/components/examples/RetrieveKeyResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.read
      tags:
        - HookKey
    put:
      summary: Replace a key
      description: |
        Replaces a key by `hookKeyId`

        This request replaces existing properties after passing validation.

        Note: The only parameter that you can update is the name of the key, which must be unique at all times.
      operationId: replaceHookKey
      x-codegen-request-body-name: keyRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HookKey'
                examples:
                  ResponseExample:
                    $ref: '#/components/examples/ReplaceKeyResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - HookKey
    delete:
      summary: Delete a key
      description: |
        Deletes a key by `hookKeyId`. After being deleted, the key is unrecoverable.

        As a safety precaution, only keys that aren't being used are eligible for deletion.
      operationId: deleteHookKey
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - HookKey
  /api/v1/iam/assignees/users:
    get:
      summary: List all Users with Role Assignments
      description: Lists all users with Role Assignments
      operationId: listUsersWithRoleAssignments
      parameters:
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of results returned. Defaults to `100`.
          schema:
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignedUsers'
              examples:
                User List:
                  $ref: '#/components/examples/RoleAssignedUsersResponseExample'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignment
  /api/v1/iam/resource-sets:
    get:
      summary: List all Resource Sets
      description: Lists all Resource Sets with pagination support
      operationId: listResourceSets
      parameters:
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSets'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - ResourceSet
    post:
      summary: Create a Resource Set
      description: Creates a new Resource Set
      operationId: createResourceSet
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceSetRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSet'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - ResourceSet
  /api/v1/iam/resource-sets/{resourceSetId}:
    parameters:
      - $ref: '#/components/parameters/pathResourceSetId'
    get:
      summary: Retrieve a Resource Set
      description: Retrieves a Resource Set by `resourceSetId`
      operationId: getResourceSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSet'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - ResourceSet
    put:
      summary: Replace a Resource Set
      description: Replaces a Resource Set by `resourceSetId`
      operationId: replaceResourceSet
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceSet'
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSet'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - ResourceSet
    delete:
      summary: Delete a Resource Set
      description: Deletes a role by `resourceSetId`
      operationId: deleteResourceSet
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - ResourceSet
  /api/v1/iam/resource-sets/{resourceSetId}/bindings:
    parameters:
      - $ref: '#/components/parameters/pathResourceSetId'
    get:
      summary: List all Bindings
      description: Lists all Resource Set bindings with pagination support
      operationId: listBindings
      parameters:
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetBindings'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - ResourceSet
    post:
      summary: Create a Resource Set Binding
      description: Creates a new Resource Set binding
      operationId: createResourceSetBinding
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceSetBindingCreateRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetBindingCreateRequestExample'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetBindingResponse'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingResponseExample'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - ResourceSet
  /api/v1/iam/resource-sets/{resourceSetId}/bindings/{roleIdOrLabel}:
    parameters:
      - $ref: '#/components/parameters/pathResourceSetId'
      - $ref: '#/components/parameters/pathRoleIdOrLabel'
    get:
      summary: Retrieve a Binding
      description: Retrieves a Resource Set binding by `resourceSetId` and `roleIdOrLabel`
      operationId: getBinding
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetBindingResponse'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingResponseWithIdExample'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - ResourceSet
    delete:
      summary: Delete a Binding
      description: Deletes a Resource Set binding by `resourceSetId` and `roleIdOrLabel`
      operationId: deleteBinding
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - ResourceSet
  /api/v1/iam/resource-sets/{resourceSetId}/bindings/{roleIdOrLabel}/members:
    parameters:
      - $ref: '#/components/parameters/pathResourceSetId'
      - $ref: '#/components/parameters/pathRoleIdOrLabel'
    get:
      summary: List all Members of a binding
      description: Lists all members of a Resource Set binding with pagination support
      operationId: listMembersOfBinding
      parameters:
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetBindingMembers'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingMembersResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - ResourceSet
    patch:
      summary: Add more Members to a binding
      description: Adds more members to a Resource Set binding
      operationId: addMembersToBinding
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceSetBindingAddMembersRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetBindingAddMembersRequestExample'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetBindingResponse'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingResponseExample'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - ResourceSet
  /api/v1/iam/resource-sets/{resourceSetId}/bindings/{roleIdOrLabel}/members/{memberId}:
    parameters:
      - $ref: '#/components/parameters/pathResourceSetId'
      - $ref: '#/components/parameters/pathRoleIdOrLabel'
      - $ref: '#/components/parameters/pathMemberId'
    get:
      summary: Retrieve a Member of a binding
      description: Retrieves a member identified by `memberId` for a binding
      operationId: getMemberOfBinding
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetBindingMember'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingMemberResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - ResourceSet
    delete:
      summary: Unassign a Member from a binding
      description: Unassigns a member identified by `memberId` from a binding
      operationId: unassignMemberFromBinding
      x-codegen-request-body-name: instance
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - ResourceSet
  /api/v1/iam/resource-sets/{resourceSetId}/resources:
    parameters:
      - $ref: '#/components/parameters/pathResourceSetId'
    get:
      summary: List all Resources of a Resource Set
      description: Lists all resources that make up the Resource Set
      operationId: listResourceSetResources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetResources'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResourcesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - ResourceSet
    patch:
      summary: Add more Resource to a Resource Set
      description: Adds more resources to a Resource Set
      operationId: addResourceSetResource
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceSetResourcePatchRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetResourcePatchRequestExample'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSet'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - ResourceSet
  /api/v1/iam/resource-sets/{resourceSetId}/resources/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/pathResourceSetId'
      - $ref: '#/components/parameters/pathResourceId'
    delete:
      summary: Delete a Resource from a Resource Set
      description: Deletes a resource identified by `resourceId` from a Resource Set
      operationId: deleteResourceSetResource
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - ResourceSet
  /api/v1/iam/roles:
    get:
      summary: List all Roles
      description: Lists all roles with pagination support
      operationId: listRoles
      parameters:
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IamRoles'
              examples:
                Example Response:
                  $ref: '#/components/examples/RolesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - Role
    post:
      summary: Create a Role
      description: Creates a new role
      operationId: createRole
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIamRoleRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/RoleRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IamRole'
              examples:
                Example Response:
                  $ref: '#/components/examples/RoleResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - Role
  /api/v1/iam/roles/{roleIdOrLabel}:
    parameters:
      - $ref: '#/components/parameters/pathRoleIdOrLabel'
    get:
      summary: Retrieve a Role
      description: Retrieves a role by `roleIdOrLabel`
      operationId: getRole
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IamRole'
              examples:
                Example Response:
                  $ref: '#/components/examples/RoleResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - Role
    put:
      summary: Replace a Role
      description: Replaces a role by `roleIdOrLabel`
      operationId: replaceRole
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIamRoleRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/RoleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IamRole'
              examples:
                Example Response:
                  $ref: '#/components/examples/RoleResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - Role
    delete:
      summary: Delete a Role
      description: Deletes a role by `roleIdOrLabel`
      operationId: deleteRole
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - Role
  /api/v1/iam/roles/{roleIdOrLabel}/permissions:
    parameters:
      - $ref: '#/components/parameters/pathRoleIdOrLabel'
    get:
      summary: List all Permissions
      description: Lists all permissions of the role by `roleIdOrLabel`
      operationId: listRolePermissions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permissions'
              examples:
                Example Response:
                  $ref: '#/components/examples/PermissionsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - Role
  /api/v1/iam/roles/{roleIdOrLabel}/permissions/{permissionType}:
    parameters:
      - $ref: '#/components/parameters/pathRoleIdOrLabel'
      - $ref: '#/components/parameters/pathPermissionType'
    get:
      summary: Retrieve a Permission
      description: Retrieves a permission by `permissionType`
      operationId: getRolePermission
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
              examples:
                Example Response:
                  $ref: '#/components/examples/PermissionResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - Role
    post:
      summary: Create a Permission
      description: Creates a permission specified by `permissionType` to the role
      operationId: createRolePermission
      x-codegen-request-body-name: instance
      requestBody:
        x-okta-lifecycle:
          features:
            - CUSTOM_ADMIN_ROLES_CONDITIONS
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateIamRolePermissionRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/CreateUpdateIamRolePermissionRequestExample'
        required: false
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - Role
    put:
      x-okta-lifecycle:
        features:
          - CUSTOM_ADMIN_ROLES_CONDITIONS
      summary: Replace a Permission
      description: Replaces a permission specified by `permissionType` in the role
      operationId: replaceRolePermission
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateIamRolePermissionRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/CreateUpdateIamRolePermissionRequestExample'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
              examples:
                Example Response:
                  $ref: '#/components/examples/PermissionResponseWithConditions'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - Role
    delete:
      summary: Delete a Permission
      description: Deletes a permission from a role by `permissionType`
      operationId: deleteRolePermission
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - Role
  /api/v1/identity-sources/{identitySourceId}/sessions:
    parameters:
      - $ref: '#/components/parameters/pathIdentitySourceId'
    get:
      summary: List all Identity Source Sessions
      description: Lists all identity source sessions for the given identity source instance
      operationId: listIdentitySourceSessions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentitySourceSession'
              examples:
                Sessions List:
                  $ref: '#/components/examples/ListSessionsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.read
      tags:
        - IdentitySource
    post:
      summary: Create an Identity Source Session
      description: Creates an identity source session for the given identity source instance
      operationId: createIdentitySourceSession
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/IdentitySourceSession'
              examples:
                sessionsList:
                  $ref: '#/components/examples/ListSessionsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.manage
      tags:
        - IdentitySource
  /api/v1/identity-sources/{identitySourceId}/sessions/{sessionId}:
    parameters:
      - $ref: '#/components/parameters/pathIdentitySourceId'
      - $ref: '#/components/parameters/pathIdentitySourceSessionId'
    get:
      summary: Retrieve an Identity Source Session
      description: Retrieves an identity source session for a given identity source id and session id
      operationId: getIdentitySourceSession
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySourceSession'
              examples:
                Session:
                  $ref: '#/components/examples/ListSessionsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.read
      tags:
        - IdentitySource
    delete:
      summary: Delete an Identity Source Session
      description: Deletes an identity source session for a given `identitySourceId` and `sessionId`
      operationId: deleteIdentitySourceSession
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.manage
      tags:
        - IdentitySource
  /api/v1/identity-sources/{identitySourceId}/sessions/{sessionId}/bulk-delete:
    parameters:
      - $ref: '#/components/parameters/pathIdentitySourceId'
      - $ref: '#/components/parameters/pathIdentitySourceSessionId'
    post:
      summary: Upload the data to be deleted in Okta
      description: Uploads entities that need to be deleted in Okta from the identity source for the given session
      operationId: uploadIdentitySourceDataForDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteRequestBody'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.manage
      tags:
        - IdentitySource
  /api/v1/identity-sources/{identitySourceId}/sessions/{sessionId}/bulk-upsert:
    parameters:
      - $ref: '#/components/parameters/pathIdentitySourceId'
      - $ref: '#/components/parameters/pathIdentitySourceSessionId'
    post:
      summary: Upload the data to be upserted in Okta
      description: Uploads entities that need to be upserted in Okta from the identity source for the given session
      operationId: uploadIdentitySourceDataForUpsert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpsertRequestBody'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.manage
      tags:
        - IdentitySource
  /api/v1/identity-sources/{identitySourceId}/sessions/{sessionId}/start-import:
    parameters:
      - $ref: '#/components/parameters/pathIdentitySourceId'
      - $ref: '#/components/parameters/pathIdentitySourceSessionId'
    post:
      summary: Start the import from the Identity Source
      description: Starts the import from the identity source described by the uploaded bulk operations
      operationId: startImportFromIdentitySource
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/IdentitySourceSession'
              examples:
                sessionsList:
                  $ref: '#/components/examples/TriggerSessionResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.manage
      tags:
        - IdentitySource
  /api/v1/idps:
    get:
      summary: List all Identity Providers
      description: Lists all identity provider integrations with pagination. A subset of IdPs can be returned that match a supported filter expression or query.
      operationId: listIdentityProviders
      parameters:
        - name: q
          in: query
          description: Searches the name property of IdPs for matching value
          schema:
            type: string
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of IdPs
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of IdP results in a page
          schema:
            type: integer
            format: int32
            default: 20
        - name: type
          in: query
          description: Filters IdPs by type
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProvider'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
    post:
      summary: Create an Identity Provider
      description: Creates a new identity provider integration
      operationId: createIdentityProvider
      x-codegen-request-body-name: identityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/credentials/keys:
    get:
      summary: List all Credential Keys
      description: Lists all IdP key credentials
      operationId: listIdentityProviderKeys
      parameters:
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of keys
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of key results in a page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
    post:
      summary: Create an X.509 Certificate Public Key
      description: Creates a new X.509 certificate credential to the IdP key store.
      operationId: createIdentityProviderKey
      x-codegen-request-body-name: jsonWebKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonWebKey'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/credentials/keys/{idpKeyId}:
    parameters:
      - $ref: '#/components/parameters/pathIdpKeyId'
    get:
      summary: Retrieve an Credential Key
      description: Retrieves a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderKey
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
    delete:
      summary: Delete a Signing Credential Key
      description: Deletes a specific IdP Key Credential by `kid` if it is not currently being used by an Active or Inactive IdP
      operationId: deleteIdentityProviderKey
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
    get:
      summary: Retrieve an Identity Provider
      description: Retrieves an identity provider integration by `idpId`
      operationId: getIdentityProvider
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
    put:
      summary: Replace an Identity Provider
      description: Replaces an identity provider integration by `idpId`
      operationId: replaceIdentityProvider
      x-codegen-request-body-name: identityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
    delete:
      summary: Delete an Identity Provider
      description: Deletes an identity provider integration by `idpId`
      operationId: deleteIdentityProvider
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/csrs:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
    get:
      summary: List all Certificate Signing Requests
      description: Lists all Certificate Signing Requests for an IdP
      operationId: listCsrsForIdentityProvider
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Csr'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
    post:
      summary: Generate a Certificate Signing Request
      description: Generates a new key pair and returns a Certificate Signing Request for it
      operationId: generateCsrForIdentityProvider
      x-codegen-request-body-name: metadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/csrs/{idpCsrId}:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
      - $ref: '#/components/parameters/pathIdpCsrId'
    get:
      summary: Retrieve a Certificate Signing Request
      description: Retrieves a specific Certificate Signing Request model by id
      operationId: getCsrForIdentityProvider
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
    delete:
      summary: Revoke a Certificate Signing Request
      description: Revokes a certificate signing request and deletes the key pair from the IdP
      operationId: revokeCsrForIdentityProvider
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/csrs/{idpCsrId}/lifecycle/publish:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
      - $ref: '#/components/parameters/pathIdpCsrId'
    post:
      summary: Publish a Certificate Signing Request
      description: Publishes a certificate signing request with a signed X.509 certificate and adds it into the signing key credentials for the IdP
      operationId: publishCsrForIdentityProvider
      requestBody:
        required: true
        content:
          application/x-x509-ca-cert:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryCerCertForIdentityProvider
          application/pkix-cert:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryDerCertForIdentityProvider
          application/x-pem-file:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryPemCertForIdentityProvider
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
    get:
      summary: List all Signing Credential Keys
      description: Lists all signing key credentials for an IdP
      operationId: listIdentityProviderSigningKeys
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys/generate:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
    post:
      summary: Generate a new Signing Credential Key
      description: Generates a new X.509 certificate for an IdP signing key credential to be used for signing assertions sent to the IdP
      operationId: generateIdentityProviderSigningKey
      parameters:
        - name: validityYears
          in: query
          description: expiry of the IdP Key Credential
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys/{idpKeyId}:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
      - $ref: '#/components/parameters/pathIdpKeyId'
    get:
      summary: Retrieve a Signing Credential Key
      description: Retrieves a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderSigningKey
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys/{idpKeyId}/clone:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
      - $ref: '#/components/parameters/pathIdpKeyId'
    post:
      summary: Clone a Signing Credential Key
      description: Clones a X.509 certificate for an IdP signing key credential from a source IdP to target IdP
      operationId: cloneIdentityProviderKey
      parameters:
        - name: targetIdpId
          in: query
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
    post:
      summary: Activate an Identity Provider
      description: Activates an inactive IdP
      operationId: activateIdentityProvider
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
    post:
      summary: Deactivate an Identity Provider
      description: Deactivates an active IdP
      operationId: deactivateIdentityProvider
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/users:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
    get:
      summary: List all Users
      description: Lists all users linked to the identity provider
      operationId: listIdentityProviderApplicationUsers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderApplicationUser'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/users/{userId}:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: Retrieve a User
      description: Retrieves a linked IdP user by ID
      operationId: getIdentityProviderApplicationUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
    post:
      summary: Link a User to a Social IdP
      description: Links an Okta user to an existing Social Identity Provider. This does not support the SAML2 Identity Provider Type
      operationId: linkUserToIdentityProvider
      x-codegen-request-body-name: userIdentityProviderLinkRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentityProviderLinkRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - IdentityProvider
    delete:
      summary: Unlink a User from IdP
      description: Unlinks the link between the Okta user and the IdP user
      operationId: unlinkUserFromIdentityProvider
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/users/{userId}/credentials/tokens:
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: List all Tokens from a OIDC Identity Provider
      description: Lists the tokens minted by the Social Authentication Provider when the user authenticates with Okta via Social Auth
      operationId: listSocialAuthTokens
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SocialAuthToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
  /api/v1/inlineHooks:
    get:
      summary: List all Inline Hooks
      description: Lists all inline hooks
      operationId: listInlineHooks
      parameters:
        - name: type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InlineHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.read
      tags:
        - InlineHook
    post:
      summary: Create an Inline Hook
      description: Creates an inline hook
      operationId: createInlineHook
      x-codegen-request-body-name: inlineHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHook'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
  /api/v1/inlineHooks/{inlineHookId}:
    parameters:
      - $ref: '#/components/parameters/pathInlineHookId'
    get:
      summary: Retrieve an Inline Hook
      description: Retrieves an inline hook by `inlineHookId`
      operationId: getInlineHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.read
      tags:
        - InlineHook
    put:
      summary: Replace an Inline Hook
      description: Replaces an inline hook by `inlineHookId`
      operationId: replaceInlineHook
      x-codegen-request-body-name: inlineHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHook'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
    delete:
      summary: Delete an Inline Hook
      description: Deletes an inline hook by `inlineHookId`. Once deleted, the Inline Hook is unrecoverable. As a safety precaution, only Inline Hooks with a status of INACTIVE are eligible for deletion.
      operationId: deleteInlineHook
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
  /api/v1/inlineHooks/{inlineHookId}/execute:
    parameters:
      - $ref: '#/components/parameters/pathInlineHookId'
    post:
      summary: Execute an Inline Hook
      description: Executes the inline hook by `inlineHookId` using the request body as the input. This will send the provided data through the Channel and return a response if it matches the correct data contract. This execution endpoint should only be used for testing purposes.
      operationId: executeInlineHook
      x-codegen-request-body-name: payloadData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHookPayload'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHookResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathInlineHookId'
    post:
      summary: Activate an Inline Hook
      description: Activates the inline hook by `inlineHookId`
      operationId: activateInlineHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathInlineHookId'
    post:
      summary: Deactivate an Inline Hook
      description: Deactivates the inline hook by `inlineHookId`
      operationId: deactivateInlineHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
  /api/v1/logStreams:
    get:
      summary: List all Log Streams
      description: Lists all Log Stream objects in your org. You can request a paginated list or a subset of Log Streams that match a supported filter expression.
      operationId: listLogStreams
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
        - name: filter
          in: query
          description: An expression that [filters](/#filter) the returned objects. You can only use the `eq` operator on either the `status` or `type` properties in the filter expression.
          schema:
            type: string
            example: type eq "aws_eventbridge"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogStream'
              examples:
                ExampleGetAllResponse:
                  $ref: '#/components/examples/LogStreamGetAllResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.read
      tags:
        - LogStream
    post:
      summary: Create a Log Stream
      description: Creates a new Log Stream object
      operationId: createLogStream
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogStream'
            examples:
              LogStreamPostRequestExample:
                $ref: '#/components/examples/LogStreamPostRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogStream'
              examples:
                LogStreamPostResponseExample:
                  $ref: '#/components/examples/LogStreamPostResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.manage
      tags:
        - LogStream
  /api/v1/logStreams/{logStreamId}:
    parameters:
      - $ref: '#/components/parameters/pathLogStreamId'
    get:
      summary: Retrieve a Log Stream
      description: Retrieves a Log Stream object by ID
      operationId: getLogStream
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogStream'
              examples:
                LogStreamGetRequestExample:
                  $ref: '#/components/examples/LogStreamPostResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.read
      tags:
        - LogStream
    put:
      summary: Replace a Log Stream
      description: |-
        Replaces the Log Stream object properties for a given ID.

        This operation is typically used to update the configuration of a Log Stream.
        Depending on the type of Log Stream you want to update, certain properties can't be modified after the Log Stream is initially created.
        Use the [Retrieve the Log Stream Schema for the schema type](/openapi/okta-management/management/tag/Schema/#tag/Schema/operation/getLogStreamSchema) request to determine which properties you can update for the specific Log Stream type.
        Log Stream properties with the `"writeOnce" : true` attribute can't be updated after creation.
        You must still specify these `writeOnce` properties in the request body with the original values in the PUT request.

        > **Note:** You don't have to specify properties that have both the `"writeOnce": true` and the `"writeOnly": true` attributes in the PUT request body. These property values are ignored even if you add them in the PUT request body.
      operationId: replaceLogStream
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogStreamPutSchema'
            examples:
              LogStreamPutRequestExample:
                $ref: '#/components/examples/LogStreamPutRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogStream'
              examples:
                LogStreamPostResponseExample:
                  $ref: '#/components/examples/LogStreamPutResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.manage
      tags:
        - LogStream
    delete:
      summary: Delete a Log Stream
      description: Deletes a Log Stream object from your org by ID
      operationId: deleteLogStream
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.manage
      tags:
        - LogStream
  /api/v1/logStreams/{logStreamId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathLogStreamId'
    post:
      summary: Activate a Log Stream
      description: Activates a log stream by `logStreamId`
      operationId: activateLogStream
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogStream'
              examples:
                LogStreamActivateResponseExample:
                  $ref: '#/components/examples/LogStreamActivateResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.manage
      tags:
        - LogStream
  /api/v1/logStreams/{logStreamId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathLogStreamId'
    post:
      summary: Deactivate a Log Stream
      description: Deactivates a log stream by `logStreamId`
      operationId: deactivateLogStream
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogStream'
              examples:
                LogStreamDeactivateResponseExample:
                  $ref: '#/components/examples/LogStreamDeactivateResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.manage
      tags:
        - LogStream
  /api/v1/logs:
    get:
      summary: List all System Log Events
      description: Lists all system log events. The Okta System Log API provides read access to your organization’s system log. This API provides more functionality than the Events API
      operationId: listLogEvents
      parameters:
        - name: since
          in: query
          schema:
            type: string
            format: date-time
        - name: until
          in: query
          schema:
            type: string
            format: date-time
        - name: filter
          in: query
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
        - name: sortOrder
          in: query
          schema:
            type: string
            default: ASCENDING
        - name: after
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogEvent'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logs.read
      tags:
        - SystemLog
  /api/v1/mappings:
    get:
      summary: List all Profile Mappings
      description: |-
        Lists all profile mappings in your organization with [pagination](https://developer.okta.com/docs/api/#pagination). You can return a subset of profile mappings that match a supported `sourceId` and/or `targetId`.
        The results are [paginated](/#pagination) according to the limit parameter. If there are multiple pages of results, the Link header contains a `next` link that should be treated as an opaque value (follow it, don't parse it).

        The response is a collection of profile mappings that include a subset of the profile mapping object's parameters. The profile mapping object describes
        the properties mapping between an Okta User and an App User Profile using [JSON Schema Draft 4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04).
      operationId: listProfileMappings
      parameters:
        - name: after
          in: query
          description: Mapping `id` that specifies the pagination cursor for the next page of mappings
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of results per page (maximum 200)
          schema:
            type: integer
            format: int32
            default: 20
        - name: sourceId
          in: query
          description: The UserType or App Instance `id` that acts as the source of expressions in a mapping. If this parameter is included, all returned mappings have this as their `source.id`.
          schema:
            type: string
        - name: targetId
          in: query
          description: The UserType or App Instance `id` that acts as the target of expressions in a mapping. If this parameter is included, all returned mappings have this as their `target.id`.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListProfileMappings'
              examples:
                MappingList:
                  summary: List all Profile Mappings response
                  $ref: '#/components/examples/ListMappingsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.profileMappings.read
      tags:
        - ProfileMapping
  /api/v1/mappings/{mappingId}:
    parameters:
      - $ref: '#/components/parameters/pathMappingId'
    get:
      summary: Retrieve a Profile Mapping
      description: Retrieves a single Profile Mapping referenced by its ID
      operationId: getProfileMapping
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
              examples:
                MappingRetrieve:
                  summary: Retrieve a single Profile Mapping
                  $ref: '#/components/examples/RetrieveMappingsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.profileMappings.read
      tags:
        - ProfileMapping
    post:
      summary: Update a Profile Mapping
      description: Updates an existing profile mapping by adding, updating, or removing one or many property mappings
      operationId: updateProfileMapping
      x-codegen-request-body-name: profileMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileMappingRequest'
            examples:
              Addpropertymapping:
                $ref: '#/components/examples/AddMappingBody'
              Updatepropertymapping:
                $ref: '#/components/examples/UpdateMappingBody'
              Removepropertymapping:
                $ref: '#/components/examples/RemoveMappingBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
              examples:
                Addpropertymapping:
                  summary: Update an existing profile mapping by adding one or more properties
                  $ref: '#/components/examples/AddMappingResponse'
                Updatepropertymapping:
                  summary: Update an existing profile mapping by updating one or more properties
                  $ref: '#/components/examples/UpdateMappingResponse'
                Removepropertymapping:
                  summary: Update an existing profile mapping by removing one or more properties
                  $ref: '#/components/examples/RemoveMappingResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.profileMappings.manage
      tags:
        - ProfileMapping
  /api/v1/meta/layouts/apps/{appName}:
    parameters:
      - $ref: '#/components/parameters/pathAppName'
    get:
      summary: Retrieve the links for UI schemas for an Application
      description: Retrieves the links for UI schemas for an Application given `appName`
      operationId: getAppUISchemaLinks
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationLayouts'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.schemas.read
      tags:
        - Schema
  /api/v1/meta/layouts/apps/{appName}/sections/{section}/{operation}:
    parameters:
      - $ref: '#/components/parameters/pathAppName'
      - $ref: '#/components/parameters/pathSection'
      - $ref: '#/components/parameters/pathOperation'
    get:
      summary: Retrieve the UI schema for a section
      description: Retrieves the UI schema for an Application given `appName`, `section` and `operation`
      operationId: getAppUISchema
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationLayout'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.schemas.read
      tags:
        - Schema
  /api/v1/meta/schemas/apps/{appId}/default:
    parameters:
      - $ref: '#/components/parameters/pathAppId'
    get:
      summary: Retrieve the default Application User Schema for an Application
      description: Retrieves the Schema for an App User
      operationId: getApplicationUserSchema
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.schemas.read
      tags:
        - Schema
    post:
      summary: Update the default Application User Schema for an Application
      description: Partially updates on the User Profile properties of the Application User Schema
      operationId: updateApplicationUserProfile
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
            examples:
              Add a custom property to the app user schema:
                $ref: '#/components/examples/AppUserSchemaAddRequest'
        required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
              examples:
                Response with a subset of properties for brevity:
                  $ref: '#/components/examples/AppUserSchemaResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.schemas.manage
      tags:
        - Schema
  /api/v1/meta/schemas/group/default:
    get:
      summary: Retrieve the default Group Schema
      description: Retrieves the group schema
      operationId: getGroupSchema
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSchema'
              examples:
                Response with a subset of properties for brevity:
                  $ref: '#/components/examples/GroupSchemaResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.schemas.read
      tags:
        - Schema
    post:
      summary: Update the default Group Schema
      description: Updates the default group schema. This updates, adds, or removes one or more custom Group Profile properties in the schema.
      operationId: updateGroupSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupSchema'
            examples:
              Add a custom property to the group schema:
                $ref: '#/components/examples/GroupSchemaAddRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSchema'
              example:
                Response with a subset of properties for brevity:
                  $ref: '#/components/examples/GroupSchemaResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.schemas.manage
      tags:
        - Schema
  /api/v1/meta/schemas/logStream:
    get:
      summary: List the Log Stream Schemas
      description: Lists the schema for all log stream types visible for this org
      operationId: listLogStreamSchemas
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogStreamSchema'
              examples:
                All log stream schemas for your org:
                  $ref: '#/components/examples/LogStreamSchemaList'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.read
      tags:
        - Schema
  /api/v1/meta/schemas/logStream/{logStreamType}:
    parameters:
      - $ref: '#/components/parameters/pathLogStreamType'
    get:
      summary: Retrieve the Log Stream Schema for the schema type
      description: Retrieves the schema for a Log Stream type. The `logStreamType` element in the URL specifies the Log Stream type, which is either `aws_eventbridge` or `splunk_cloud_logstreaming`. Use the `aws_eventbridge` literal to retrieve the AWS EventBridge type schema, and use the `splunk_cloud_logstreaming` literal retrieve the Splunk Cloud type schema.
      operationId: getLogStreamSchema
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogStreamSchema'
              examples:
                Schema for type `aws_eventbridge`:
                  $ref: '#/components/examples/LogStreamSchemaAws'
                Schema for type `splunk_cloud_logstreaming`:
                  $ref: '#/components/examples/LogStreamSchemaSplunk'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.read
      tags:
        - Schema
  /api/v1/meta/schemas/user/linkedObjects:
    get:
      summary: List all Linked Object Definitions
      description: Lists all linked object definitions
      operationId: listLinkedObjectDefinitions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LinkedObject'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.linkedObjects.read
      tags:
        - LinkedObject
    post:
      summary: Create a Linked Object Definition
      description: Creates a linked object definition
      operationId: createLinkedObjectDefinition
      x-codegen-request-body-name: linkedObject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedObject'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObject'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.linkedObjects.manage
      tags:
        - LinkedObject
  /api/v1/meta/schemas/user/linkedObjects/{linkedObjectName}:
    parameters:
      - $ref: '#/components/parameters/pathLinkedObjectName'
    get:
      summary: Retrieve a Linked Object Definition
      description: Retrieves a linked object definition
      operationId: getLinkedObjectDefinition
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObject'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.linkedObjects.read
      tags:
        - LinkedObject
    delete:
      summary: Delete a Linked Object Definition
      description: Deletes a linked object definition
      operationId: deleteLinkedObjectDefinition
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.linkedObjects.manage
      tags:
        - LinkedObject
  /api/v1/meta/schemas/user/{schemaId}:
    parameters:
      - $ref: '#/components/parameters/pathSchemaId'
    get:
      summary: Retrieve a User Schema
      description: Retrieves the schema for a Schema Id
      operationId: getUserSchema
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
              examples:
                Response with a subset of properties for brevity:
                  $ref: '#/components/examples/UserSchemaResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.schemas.read
      tags:
        - Schema
    post:
      summary: Update a User Schema
      description: Partially updates on the User Profile properties of the user schema
      operationId: updateUserProfile
      x-codegen-request-body-name: userSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
            examples:
              Add a custom property to the user schema:
                $ref: '#/components/examples/UserSchemaAddRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
              examples:
                Response with a subset of properties for brevity:
                  $ref: '#/components/examples/UserSchemaResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.schemas.manage
      tags:
        - Schema
  /api/v1/meta/types/user:
    get:
      summary: List all User Types
      description: Lists all User Types in your org
      operationId: listUserTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserType'
              examples:
                ListsAllUserTypes:
                  $ref: '#/components/examples/ListsAllUserTypes'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.userTypes.read
      tags:
        - UserType
    post:
      summary: Create a User Type
      description: |-
        Creates a new User Type. Okta automatically creates a `default` User Type for your org. You may add up to nine additional User Types.
        > **Note**: New User Types are based on the current default schema template. Modifications to this schema do not automatically propagate to previously created User Types.
      operationId: createUserType
      x-codegen-request-body-name: userType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
            examples:
              CreateUserRequest:
                $ref: '#/components/examples/CreateUserRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
              examples:
                CreateUserResponse:
                  $ref: '#/components/examples/CreateUserResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.userTypes.manage
      tags:
        - UserType
  /api/v1/meta/types/user/{typeId}:
    parameters:
      - $ref: '#/components/parameters/pathTypeId'
    get:
      summary: Retrieve a User Type
      description: Retrieves a User Type by ID. Use `default` to fetch the default User Type.
      operationId: getUserType
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
              examples:
                GetUserResponse:
                  $ref: '#/components/examples/GetUserResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.userTypes.read
      tags:
        - UserType
    post:
      summary: Update a User Type
      description: |-
        Updates an existing User Type.
        > **Note**: You can only update the `displayName` and `description` elements. The `name` of an existing User Type can't be changed.
      operationId: updateUserType
      x-codegen-request-body-name: userType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTypePostRequest'
            examples:
              UpdateUserTypePostRequest:
                $ref: '#/components/examples/UpdateUserTypePostRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
              examples:
                UpdateUserTypePutRequest:
                  $ref: '#/components/examples/UpdateUserTypePostResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.userTypes.manage
      tags:
        - UserType
    put:
      summary: Replace a User Type
      description: |-
        Replaces an existing User Type.
        > **Note**: The `name` of an existing User Type can't be changed, but must be part of the request body. You can only replace the `displayName` and `description` elements.
      operationId: replaceUserType
      x-codegen-request-body-name: userType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTypePutRequest'
            examples:
              ReplaceUserTypePutRequest:
                $ref: '#/components/examples/ReplaceUserTypePutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
              examples:
                ReplaceUserTypePutResponse:
                  $ref: '#/components/examples/ReplaceUserTypePutResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.userTypes.manage
      tags:
        - UserType
    delete:
      summary: Delete a User Type
      description: |-
        Deletes a User Type permanently.
        > **Note**: You can't delete the default User Type or a User Type that is currently assigned to users.
      operationId: deleteUserType
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.userTypes.manage
      tags:
        - UserType
  /api/v1/meta/uischemas:
    get:
      summary: List all UI Schemas
      description: Lists all UI Schemas in your org
      operationId: listUISchemas
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UISchemasResponseObject'
              examples:
                UIISchemaList:
                  summary: Lists all UI Schemas response
                  $ref: '#/components/examples/ListUISchemaResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.uischemas.read
      tags:
        - UISchema
    post:
      summary: Create a UI Schema
      description: Creates an input for an enrollment form
      operationId: createUISchema
      x-codegen-request-body-name: uischemabody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUISchema'
            examples:
              UISchemaCreate:
                $ref: '#/components/examples/CreateUISchemaBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UISchemasResponseObject'
              examples:
                UISchemaCreate:
                  $ref: '#/components/examples/CreateUISchemaResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.uischemas.manage
      tags:
        - UISchema
  /api/v1/meta/uischemas/{id}:
    parameters:
      - $ref: '#/components/parameters/UISchemaId'
    get:
      summary: Retrieve a UI Schema
      description: Retrieves a UI Schema by `id`
      operationId: getUISchema
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UISchemasResponseObject'
              examples:
                UISchemaRetrieve:
                  summary: Retrieves a UI Schema response
                  $ref: '#/components/examples/RetrieveUISchemaResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.uischemas.read
      tags:
        - UISchema
    put:
      summary: Replace a UI Schema
      description: Replaces a UI Schema by `id`
      operationId: replaceUISchemas
      x-codegen-request-body-name: updateUISchemaBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUISchema'
            examples:
              UISchemaPUT:
                $ref: '#/components/examples/CreateUISchemaBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UISchemasResponseObject'
              examples:
                UISchemaUpdate:
                  $ref: '#/components/examples/CreateUISchemaResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.uischemas.manage
      tags:
        - UISchema
    delete:
      summary: Delete a UI Schema
      description: Deletes a UI Schema by `id`
      operationId: deleteUISchemas
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.uischemas.manage
      tags:
        - UISchema
  /api/v1/org:
    get:
      summary: Retrieve the Org Settings
      description: Retrieves the org settings
      operationId: getOrgSettings
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.read
      tags:
        - OrgSetting
    post:
      summary: Update the Org Settings
      description: Partially updates the org settings depending on provided fields
      operationId: updateOrgSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSetting'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - OrgSetting
    put:
      summary: Replace the Org Settings
      description: Replaces the settings of your organization
      operationId: replaceOrgSettings
      x-codegen-request-body-name: orgSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSetting'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/captcha:
    get:
      summary: Retrieve the Org-wide CAPTCHA Settings
      description: |-
        Retrieves the CAPTCHA settings object for your organization.
        > **Note**: If the current organization hasn't configured CAPTCHA Settings, the request returns an empty object.
      operationId: getOrgCaptchaSettings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgCAPTCHASettings'
              examples:
                configured:
                  $ref: '#/components/examples/OrgCAPTCHASettingsConfigured'
                empty:
                  $ref: '#/components/examples/OrgCAPTCHASettingsEmpty'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.captchas.read
      tags:
        - CAPTCHA
    put:
      summary: Replace the Org-wide CAPTCHA Settings
      description: |-
        Replaces the CAPTCHA settings object for your organization.
        > **Note**: You can disable CAPTCHA for your organization by setting `captchaId` and `enabledPages` to `null`.
      operationId: replacesOrgCaptchaSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgCAPTCHASettings'
            examples:
              Update:
                $ref: '#/components/examples/OrgCAPTCHASettingsUpdate'
              Disable:
                $ref: '#/components/examples/OrgCAPTCHASettingsDisable'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgCAPTCHASettings'
              examples:
                Update:
                  $ref: '#/components/examples/OrgCAPTCHASettingsUpdated'
                Disable:
                  $ref: '#/components/examples/OrgCAPTCHASettingsDisabled'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                NoDisable:
                  $ref: '#/components/examples/ErrorCAPTCHAOrgWideSettingNull'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.captchas.manage
      tags:
        - CAPTCHA
    delete:
      summary: Delete the Org-wide CAPTCHA Settings
      description: Deletes the CAPTCHA settings object for your organization
      operationId: deleteOrgCaptchaSettings
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.captchas.manage
      tags:
        - CAPTCHA
  /api/v1/org/contacts:
    get:
      summary: Retrieve the Org Contact Types
      description: Retrieves Contact Types of your organization
      operationId: getOrgContactTypes
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrgContactTypeObj'
                type: array
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.read
      tags:
        - OrgSetting
  /api/v1/org/contacts/{contactType}:
    parameters:
      - $ref: '#/components/parameters/pathContactType'
    get:
      summary: Retrieve the User of the Contact Type
      description: Retrieves the URL of the User associated with the specified Contact Type
      operationId: getOrgContactUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContactUser'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.read
      tags:
        - OrgSetting
    put:
      summary: Replace the User of the Contact Type
      description: Replaces the User associated with the specified Contact Type
      operationId: replaceOrgContactUser
      x-codegen-request-body-name: orgContactUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgContactUser'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContactUser'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/email/bounces/remove-list:
    post:
      summary: Remove Emails from Email Provider Bounce List
      description: Removes a list of email addresses to be removed from the set of email addresses that are bounced
      operationId: bulkRemoveEmailAddressBounces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BouncesRemoveListObj'
            examples:
              example-1:
                value:
                  emailAddresses:
                    - name@company.com
                    - unknown.email@okta.com
                    - name@okta@com
      responses:
        '200':
          description: Deletes the provided list of emails from the set of email addresses that are bounced so that the provider resumes sending emails to those addresses.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BouncesRemoveListResult'
              examples:
                example-1:
                  value:
                    errors:
                      - emailAddress: unknown.email@okta.com
                        reason: This email address does not belong to any user in your organization.
                      - emailAddress: name@okta@com
                        reason: Invalid email address. The provided email address failed validation against RFC 3696.
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/logo:
    post:
      summary: Upload the Org Logo
      description: Uploads and replaces the logo for your organization. The file must be in PNG, JPG, or GIF format and less than 100kB in size. For best results use landscape orientation, a transparent background, and a minimum size of 300px by 50px to prevent upscaling.
      operationId: uploadOrgLogo
      requestBody:
        content:
          multipart/form-data:
            schema:
              description: The file must be in PNG, JPG, or GIF format and less than 100kB in size. For best results use landscape orientation, a transparent background, and a minimum size of 300px by 50px to prevent upscaling.
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
        description: logo file
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - OrgSetting
  /api/v1/org/preferences:
    get:
      summary: Retrieve the Org Preferences
      description: Retrieves preferences of your organization
      operationId: getOrgPreferences
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.read
      tags:
        - OrgSetting
  /api/v1/org/preferences/hideEndUserFooter:
    post:
      summary: Update the Preference to Hide the Okta Dashboard Footer
      description: Updates the preference hide the Okta UI footer for all end users of your organization
      operationId: updateOrgHideOktaUIFooter
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/preferences/showEndUserFooter:
    post:
      summary: Update the Preference to Show the Okta Dashboard Footer
      description: Updates the preference to show the Okta UI footer for all end users of your organization
      operationId: updateOrgShowOktaUIFooter
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaCommunication:
    get:
      summary: Retrieve the Okta Communication Settings
      description: Retrieves Okta Communication Settings of your organization
      operationId: getOktaCommunicationSettings
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.read
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaCommunication/optIn:
    post:
      summary: Opt in all Users to Okta Communication emails
      description: Opts in all users of this org to Okta Communication emails
      operationId: optInUsersToOktaCommunicationEmails
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaCommunication/optOut:
    post:
      summary: Opt out all Users from Okta Communication emails
      description: Opts out all users of this org from Okta Communication emails
      operationId: optOutUsersFromOktaCommunicationEmails
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaSupport:
    get:
      summary: Retrieve the Okta Support Settings
      description: Retrieves Okta Support Settings of your organization
      operationId: getOrgOktaSupportSettings
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.read
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaSupport/extend:
    post:
      summary: Extend Okta Support Access
      description: Extends the length of time that Okta Support can access your org by 24 hours. This means that 24 hours are added to the remaining access time.
      operationId: extendOktaSupport
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaSupport/grant:
    post:
      summary: Grant Okta Support Access to your Org
      description: Grants Okta Support temporary access your org as an administrator for eight hours
      operationId: grantOktaSupport
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaSupport/revoke:
    post:
      summary: Revoke Okta Support Access
      description: Revokes Okta Support access to your organization
      operationId: revokeOktaSupport
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/policies:
    get:
      summary: List all Policies
      description: Lists all policies with the specified type
      operationId: listPolicies
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Policy'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.read
      tags:
        - Policy
    post:
      summary: Create a Policy
      description: Creates a policy
      operationId: createPolicy
      parameters:
        - name: activate
          in: query
          schema:
            type: boolean
            default: true
      x-codegen-request-body-name: policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/simulate:
    parameters:
      - $ref: '#/components/parameters/simulateParameter'
    post:
      summary: Create a Policy Simulation
      description: |-
        Creates a policy or policy rule simulation. The access simulation evaluates policy and policy rules based on the existing policy rule configuration.
        The evaluation result simulates what the real-world authentication flow is and what policy rules have been applied or matched to the authentication flow.
      operationId: createPolicySimulation
      x-codegen-request-body-name: simulatePolicy
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SimulatePolicyBody'
            examples:
              SimulatePolicy:
                $ref: '#/components/examples/SimulatePolicyBody'
        required: true
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulatePolicyResponse'
              examples:
                SimulatePolicy:
                  $ref: '#/components/examples/SimulatePolicyResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.read
      tags:
        - Policy
  /api/v1/policies/{policyId}:
    parameters:
      - $ref: '#/components/parameters/pathPolicyId'
    get:
      summary: Retrieve a Policy
      description: Retrieves a policy
      operationId: getPolicy
      parameters:
        - name: expand
          in: query
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.read
      tags:
        - Policy
    put:
      summary: Replace a Policy
      description: Replaces the properties of a Policy identified by `policyId`
      operationId: replacePolicy
      x-codegen-request-body-name: policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
    delete:
      summary: Delete a Policy
      description: Deletes a policy
      operationId: deletePolicy
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/app:
    parameters:
      - $ref: '#/components/parameters/pathPolicyId'
    get:
      deprecated: true
      summary: List all Applications mapped to a Policy
      description: Lists all applications mapped to a policy identified by `policyId`
      operationId: listPolicyApps
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.read
      tags:
        - Policy
  /api/v1/policies/{policyId}/clone:
    parameters:
      - $ref: '#/components/parameters/pathPolicyId'
    post:
      summary: Clone an existing Policy
      description: Clones an existing policy
      operationId: clonePolicy
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathPolicyId'
    post:
      summary: Activate a Policy
      description: Activates a policy
      operationId: activatePolicy
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathPolicyId'
    post:
      summary: Deactivate a Policy
      description: Deactivates a policy
      operationId: deactivatePolicy
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/mappings:
    parameters:
      - $ref: '#/components/parameters/pathPolicyId'
    get:
      summary: List all resources mapped to a Policy
      description: Lists all resources mapped to a Policy identified by `policyId`
      operationId: listPolicyMappings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyMapping'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.read
      tags:
        - Policy
    post:
      summary: Map a resource to a Policy
      description: Maps a resource to a Policy identified by `policyId`
      operationId: mapResourceToPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyMappingRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyMapping'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/mappings/{mappingId}:
    parameters:
      - $ref: '#/components/parameters/pathPolicyId'
      - $ref: '#/components/parameters/pathPolicyMappingId'
    get:
      summary: Retrieve a policy resource Mapping
      description: Retrieves a resource Mapping for a Policy identified by `policyId` and `mappingId`
      operationId: getPolicyMapping
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyMapping'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.read
      tags:
        - Policy
    delete:
      summary: Delete a policy resource Mapping
      description: Deletes the resource Mapping for a Policy identified by  `policyId` and `mappingId`
      operationId: deletePolicyResourceMapping
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/rules:
    parameters:
      - $ref: '#/components/parameters/pathPolicyId'
    get:
      summary: List all Policy Rules
      description: Lists all policy rules
      operationId: listPolicyRules
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.read
      tags:
        - Policy
    post:
      summary: Create a Policy Rule
      description: Creates a policy rule
      operationId: createPolicyRule
      x-codegen-request-body-name: policyRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRule'
            examples:
              EnableSsprSecurityQuestionStepUp:
                $ref: '#/components/examples/sspr-enabled-sq-step-up'
              EnableSsprSSOStepUp:
                $ref: '#/components/examples/sspr-enabled-sso-step-up'
              EnableSsprNoStepUp:
                $ref: '#/components/examples/sspr-enabled-no-step-up'
            x-okta-feature-flag-amends:
              IDX_SSPR_EXTENDED_PRIMARY_FACTORS:
                examples:
                  EnableSsprWithConstraints:
                    $ref: '#/components/examples/sspr-enabled-sso-step-up-with-constraints'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
              examples:
                EnableSsprSecurityQuestionStepUp:
                  $ref: '#/components/examples/sspr-enabled-sq-step-up-response'
                EnableSsprSSOStepUp:
                  $ref: '#/components/examples/sspr-enabled-sso-step-up-response'
                EnableSsprNoStepUp:
                  $ref: '#/components/examples/sspr-enabled-no-step-up-response'
              x-okta-feature-flag-amends:
                IDX_SSPR_EXTENDED_PRIMARY_FACTORS:
                  examples:
                    EnableSsprWithConstraints:
                      $ref: '#/components/examples/sspr-enabled-sso-step-up-with-constraints-response'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/rules/{ruleId}:
    parameters:
      - $ref: '#/components/parameters/pathPolicyId'
      - $ref: '#/components/parameters/pathRuleId'
    get:
      summary: Retrieve a Policy Rule
      description: Retrieves a policy rule
      operationId: getPolicyRule
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
              examples:
                EnableSsprSecurityQuestionStepUp:
                  $ref: '#/components/examples/sspr-enabled-sq-step-up-update'
                EnableSsprSSOStepUp:
                  $ref: '#/components/examples/sspr-enabled-sso-step-up-update'
                EnableSsprNoStepUp:
                  $ref: '#/components/examples/sspr-enabled-no-step-up-update'
              x-okta-feature-flag-amends:
                IDX_SSPR_EXTENDED_PRIMARY_FACTORS:
                  examples:
                    EnableSsprWithConstraints:
                      $ref: '#/components/examples/sspr-enabled-sso-step-up-with-constraints-update'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.read
      tags:
        - Policy
    put:
      summary: Replace a Policy Rule
      description: Replaces the properties for a Policy Rule identified by `policyId` and `ruleId`
      operationId: replacePolicyRule
      x-codegen-request-body-name: policyRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRule'
            examples:
              EnableSsprSecurityQuestionStepUp:
                $ref: '#/components/examples/sspr-enabled-sq-step-up-update'
              EnableSsprSSOStepUp:
                $ref: '#/components/examples/sspr-enabled-sso-step-up-update'
              EnableSsprNoStepUp:
                $ref: '#/components/examples/sspr-enabled-no-step-up-update'
            x-okta-feature-flag-amends:
              IDX_SSPR_EXTENDED_PRIMARY_FACTORS:
                examples:
                  EnableSsprWithConstraints:
                    $ref: '#/components/examples/sspr-enabled-sso-step-up-with-constraints-update'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
              examples:
                EnableSsprSecurityQuestionStepUp:
                  $ref: '#/components/examples/sspr-enabled-sq-step-up-response'
                EnableSsprSSOStepUp:
                  $ref: '#/components/examples/sspr-enabled-sso-step-up-response'
                EnableSsprNoStepUp:
                  $ref: '#/components/examples/sspr-enabled-no-step-up-response'
              x-okta-feature-flag-amends:
                IDX_SSPR_EXTENDED_PRIMARY_FACTORS:
                  examples:
                    EnableSsprWithConstraints:
                      $ref: '#/components/examples/sspr-enabled-sso-step-up-with-constraints-response'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
    delete:
      summary: Delete a Policy Rule
      description: Deletes a Policy Rule identified by `policyId` and `ruleId`
      operationId: deletePolicyRule
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathPolicyId'
      - $ref: '#/components/parameters/pathRuleId'
    post:
      summary: Activate a Policy Rule
      description: Activates a Policy Rule identified by `policyId` and `ruleId`
      operationId: activatePolicyRule
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathPolicyId'
      - $ref: '#/components/parameters/pathRuleId'
    post:
      summary: Deactivate a Policy Rule
      description: Deactivates a Policy Rule identified by `policyId` and `ruleId`
      operationId: deactivatePolicyRule
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/principal-rate-limits:
    get:
      summary: List all Principal Rate Limits
      description: Lists all Principal Rate Limit entities considering the provided parameters
      operationId: listPrincipalRateLimitEntities
      parameters:
        - name: filter
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
            maximum: 50
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrincipalRateLimitEntity'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.principalRateLimits.read
      tags:
        - PrincipalRateLimit
    post:
      summary: Create a Principal Rate Limit
      description: Creates a new Principal Rate Limit entity. In the current release, we only allow one Principal Rate Limit entity per org and principal.
      operationId: createPrincipalRateLimitEntity
      x-codegen-request-body-name: entity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalRateLimitEntity'
            examples:
              SSWSToken:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestSSWSToken'
              EmptyPercentages:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestEmptyPercentages'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalRateLimitEntity'
              examples:
                SSWSToken:
                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.principalRateLimits.manage
      tags:
        - PrincipalRateLimit
  /api/v1/principal-rate-limits/{principalRateLimitId}:
    parameters:
      - $ref: '#/components/parameters/pathPrincipalRateLimitId'
    get:
      summary: Retrieve a Principal Rate Limit
      description: Retrieves a Principal Rate Limit entity by `principalRateLimitId`
      operationId: getPrincipalRateLimitEntity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalRateLimitEntity'
              examples:
                SSWSToken:
                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.principalRateLimits.read
      tags:
        - PrincipalRateLimit
    put:
      summary: Replace a Principal Rate Limit
      description: Replaces a principal rate limit entity by `principalRateLimitId`
      operationId: replacePrincipalRateLimitEntity
      x-codegen-request-body-name: entity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalRateLimitEntity'
            examples:
              SSWSToken:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestSSWSToken'
              EmptyPercentages:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestEmptyPercentages'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalRateLimitEntity'
              examples:
                SSWSToken:
                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.principalRateLimits.manage
      tags:
        - PrincipalRateLimit
  /api/v1/push-providers:
    get:
      summary: List all Push Providers
      description: Lists all push providers
      operationId: listPushProviders
      parameters:
        - name: type
          in: query
          description: Filters push providers by `providerType`
          schema:
            $ref: '#/components/schemas/ProviderType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PushProvider'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.pushProviders.read
      tags:
        - PushProvider
    post:
      summary: Create a Push Provider
      description: Creates a new push provider
      operationId: createPushProvider
      x-codegen-request-body-name: pushProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushProvider'
            examples:
              APNs:
                $ref: '#/components/examples/PushProviderAPNsRequest'
              FCM:
                $ref: '#/components/examples/PushProviderFCMRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushProvider'
              examples:
                APNs:
                  $ref: '#/components/examples/PushProviderAPNsResponse'
                FCM:
                  $ref: '#/components/examples/PushProviderFCMResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.pushProviders.manage
      tags:
        - PushProvider
  /api/v1/push-providers/{pushProviderId}:
    parameters:
      - $ref: '#/components/parameters/pathPushProviderId'
    get:
      summary: Retrieve a Push Provider
      description: Retrieves a push provider by `pushProviderId`
      operationId: getPushProvider
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushProvider'
              examples:
                APNs:
                  $ref: '#/components/examples/PushProviderAPNsResponse'
                FCM:
                  $ref: '#/components/examples/PushProviderFCMResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.pushProviders.read
      tags:
        - PushProvider
    put:
      summary: Replace a Push Provider
      description: Replaces a push provider by `pushProviderId`
      operationId: replacePushProvider
      x-codegen-request-body-name: pushProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushProvider'
            examples:
              APNs:
                $ref: '#/components/examples/PushProviderAPNsRequest'
              FCM:
                $ref: '#/components/examples/PushProviderFCMRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushProvider'
              examples:
                APNs:
                  $ref: '#/components/examples/PushProviderAPNsResponse'
                FCM:
                  $ref: '#/components/examples/PushProviderFCMResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.pushProviders.manage
      tags:
        - PushProvider
    delete:
      summary: Delete a Push Provider
      description: Deletes a push provider by `pushProviderId`. If the push provider is currently being used in the org by a custom authenticator, the delete will not be allowed.
      operationId: deletePushProvider
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Cannot remove push provider in use by a custom app authenticator:
                  $ref: '#/components/examples/ErrorPushProviderUsedByCustomAppAuthenticator'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.pushProviders.manage
      tags:
        - PushProvider
  /api/v1/rate-limit-settings/admin-notifications:
    get:
      summary: Retrieve the Rate Limit Admin Notification Settings
      description: Retrieves the currently configured Rate Limit Admin Notification Settings
      operationId: getRateLimitSettingsAdminNotifications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitAdminNotifications'
              examples:
                Enabled:
                  $ref: '#/components/examples/RateLimitAdminNotificationsEnabled'
                Disabled:
                  $ref: '#/components/examples/RateLimitAdminNotificationsDisabled'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.rateLimits.read
      tags:
        - RateLimitSettings
    put:
      summary: Replace the Rate Limit Admin Notification Settings
      description: Replaces the Rate Limit Admin Notification Settings and returns the configured properties
      operationId: replaceRateLimitSettingsAdminNotifications
      x-codegen-request-body-name: RateLimitAdminNotifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateLimitAdminNotifications'
            examples:
              Enabled:
                $ref: '#/components/examples/RateLimitAdminNotificationsEnabled'
              Disabled:
                $ref: '#/components/examples/RateLimitAdminNotificationsDisabled'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitAdminNotifications'
              examples:
                Enabled:
                  $ref: '#/components/examples/RateLimitAdminNotificationsEnabled'
                Disabled:
                  $ref: '#/components/examples/RateLimitAdminNotificationsDisabled'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.rateLimits.manage
      tags:
        - RateLimitSettings
  /api/v1/rate-limit-settings/per-client:
    get:
      summary: Retrieve the Per-Client Rate Limit Settings
      description: Retrieves the currently configured Per-Client Rate Limit Settings
      operationId: getRateLimitSettingsPerClient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerClientRateLimitSettings'
              examples:
                EnforceDefault:
                  $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefault'
                EnforceDefaultWithOverrides:
                  $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefaultWithOverrides'
                PreviewDefaultWithOverrides:
                  $ref: '#/components/examples/PerClientRateLimitSettingsPreviewDefaultWithOverrides'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.rateLimits.read
      tags:
        - RateLimitSettings
    put:
      summary: Replace the Per-Client Rate Limit Settings
      description: Replaces the Per-Client Rate Limit Settings and returns the configured properties
      operationId: replaceRateLimitSettingsPerClient
      x-codegen-request-body-name: perClientRateLimitSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerClientRateLimitSettings'
            examples:
              EnforceDefault:
                $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefault'
              EnforceDefaultWithOverrides:
                $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefaultWithOverrides'
              PreviewDefaultWithOverrides:
                $ref: '#/components/examples/PerClientRateLimitSettingsPreviewDefaultWithOverrides'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerClientRateLimitSettings'
              examples:
                EnforceDefault:
                  $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefault'
                EnforceDefaultWithOverrides:
                  $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefaultWithOverrides'
                PreviewDefaultWithOverrides:
                  $ref: '#/components/examples/PerClientRateLimitSettingsPreviewDefaultWithOverrides'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.rateLimits.manage
      tags:
        - RateLimitSettings
  /api/v1/rate-limit-settings/warning-threshold:
    get:
      summary: Retrieve the Rate Limit Warning Threshold Percentage
      description: Retrieves the currently configured threshold for warning notifications when the API's rate limit is exceeded
      operationId: getRateLimitSettingsWarningThreshold
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitWarningThresholdResponse'
              examples:
                ExampleThreshold:
                  $ref: '#/components/examples/RateLimitWarningThresholdValidExample'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.rateLimits.read
      tags:
        - RateLimitSettings
    put:
      summary: Replace the Rate Limit Warning Threshold Percentage
      description: Replaces the Rate Limit Warning Threshold Percentage and returns the configured property
      operationId: replaceRateLimitSettingsWarningThreshold
      x-codegen-request-body-name: RateLimitWarningThreshold
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateLimitWarningThresholdRequest'
            examples:
              ExampleThreshold:
                $ref: '#/components/examples/RateLimitWarningThresholdValidExample'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitWarningThresholdResponse'
              examples:
                ExampleThreshold:
                  $ref: '#/components/examples/RateLimitWarningThresholdValidExample'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.rateLimits.manage
      tags:
        - RateLimitSettings
  /api/v1/realms:
    get:
      summary: List all Realms
      description: Lists all Realms
      operationId: listRealms
      parameters:
        - name: limit
          in: query
          description: Specifies the number of results returned. Defaults to 10 if `search` is provided.
          schema:
            type: integer
            format: int32
            default: 200
        - $ref: '#/components/parameters/queryAfter'
        - name: search
          in: query
          description: Searches for Realms with a supported filtering expression for most properties
          schema:
            type: string
        - name: sortBy
          in: query
          description: Specifies field to sort by and can be any single property (for search queries only).
          schema:
            type: string
            example: profile.name
        - name: sortOrder
          in: query
          description: Specifies sort order `asc` or `desc` (for search queries only). This parameter is ignored if `sortBy` isn't present.
          schema:
            type: string
            default: asc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Realm'
              examples:
                Realm Lists:
                  $ref: '#/components/examples/ListRealmsResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realms.read
      tags:
        - Realm
    post:
      summary: Create a Realm
      description: Creates a new Realm
      operationId: createRealm
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Realm'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realm'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realms.manage
      tags:
        - Realm
  /api/v1/realms/{realmId}:
    parameters:
      - $ref: '#/components/parameters/pathRealmId'
    get:
      summary: Retrieve a Realm
      description: Retrieves a Realm
      operationId: getRealm
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realm'
              examples:
                DefaultRealm:
                  $ref: '#/components/examples/DefaultRealmResponse'
                NonDefaultRealm:
                  $ref: '#/components/examples/RealmResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realms.read
      tags:
        - Realm
    post:
      summary: Update a Realm
      description: Updates a Realm
      operationId: updateRealm
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Realm'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realm'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realms.manage
      tags:
        - Realm
    delete:
      summary: Delete a Realm
      description: Deletes a Realm permanently. This operation can only be performed after disassociating other entities like Users and Identity Providers from a Realm.
      operationId: deleteRealm
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realms.manage
      tags:
        - Realm
  /api/v1/risk/events/ip:
    post:
      summary: Send multiple Risk Events
      description: |-
        Sends multiple IP risk events to Okta.
        This request is used by a third-party risk provider to send IP risk events to Okta. The third-party risk provider needs to be registered with Okta before they can send events to Okta. See [Risk Providers](/openapi/okta-management/management/tag/RiskProvider/).
        This API has a rate limit of 30 requests per minute. You can include multiple risk events (up to a maximum of 20 events) in a single payload to reduce the number of API calls. Prioritize sending high risk signals if you have a burst of signals to send that would exceed the maximum request limits.
      operationId: sendRiskEvents
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RiskEvent'
            examples:
              RiskEventsRequestExample:
                $ref: '#/components/examples/RiskEventsRequestExample'
        required: true
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.riskEvents.manage
      tags:
        - RiskEvent
  /api/v1/risk/providers:
    get:
      summary: List all Risk Providers
      description: Lists all Risk Provider objects
      operationId: listRiskProviders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RiskProvider'
              examples:
                RiskProviderList:
                  $ref: '#/components/examples/ListRiskProviderResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.riskProviders.read
      tags:
        - RiskProvider
    post:
      summary: Create a Risk Provider
      description: Creates a Risk Provider object. A maximum of three Risk Provider objects can be created.
      operationId: createRiskProvider
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskProvider'
            examples:
              RiskProviderRequestExample:
                $ref: '#/components/examples/RiskProviderRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskProvider'
              examples:
                RiskProviderPostResponseExample:
                  $ref: '#/components/examples/RiskProviderResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.riskProviders.manage
      tags:
        - RiskProvider
  /api/v1/risk/providers/{riskProviderId}:
    parameters:
      - $ref: '#/components/parameters/pathRiskProviderId'
    get:
      summary: Retrieve a Risk Provider
      description: Retrieves a Risk Provider object by ID
      operationId: getRiskProvider
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskProvider'
              examples:
                RiskProviderGetResponseExample:
                  $ref: '#/components/examples/RiskProviderResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.riskProviders.read
      tags:
        - RiskProvider
    put:
      summary: Replace a Risk Provider
      description: Replaces the properties for a given Risk Provider object ID
      operationId: replaceRiskProvider
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskProvider'
            examples:
              RiskProviderPutRequestExample:
                $ref: '#/components/examples/RiskProviderPutRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskProvider'
              examples:
                RiskProviderPutResponseExample:
                  $ref: '#/components/examples/RiskProviderPutResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.riskProviders.manage
      tags:
        - RiskProvider
    delete:
      summary: Delete a Risk Provider
      description: Deletes a Risk Provider object by its ID
      operationId: deleteRiskProvider
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.riskProviders.manage
      tags:
        - RiskProvider
  /api/v1/roles/{roleRef}/subscriptions:
    parameters:
      - $ref: '#/components/parameters/pathRoleRef'
    get:
      summary: List all Subscriptions for a Role
      description: Lists all subscriptions available to a specified Role
      operationId: listSubscriptionsRole
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - Subscription
  /api/v1/roles/{roleRef}/subscriptions/{notificationType}:
    parameters:
      - $ref: '#/components/parameters/pathRoleRef'
      - $ref: '#/components/parameters/pathNotificationType'
    get:
      summary: Retrieve a Subscription for a Role
      description: Retrieves a subscription by `notificationType` for a specified Role
      operationId: getSubscriptionsNotificationTypeRole
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - Subscription
  /api/v1/roles/{roleRef}/subscriptions/{notificationType}/subscribe:
    parameters:
      - $ref: '#/components/parameters/pathRoleRef'
      - $ref: '#/components/parameters/pathNotificationType'
    post:
      summary: Subscribe a Role to a Specific Notification Type
      description: Subscribes a Role to a specified notification type. Changes to Role subscriptions override the subscription status of any individual users with the Role.
      operationId: subscribeByNotificationTypeRole
      responses:
        '200':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - Subscription
  /api/v1/roles/{roleRef}/subscriptions/{notificationType}/unsubscribe:
    parameters:
      - $ref: '#/components/parameters/pathRoleRef'
      - $ref: '#/components/parameters/pathNotificationType'
    post:
      summary: Unsubscribe a Role from a Specific Notification Type
      description: Unsubscribes a Role from a specified notification type. Changes to Role subscriptions override the subscription status of any individual users with the Role.
      operationId: unsubscribeByNotificationTypeRole
      responses:
        '200':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - Subscription
  /api/v1/sessions:
    post:
      summary: Create a Session with session token
      description: Creates a new Session for a user with a valid session token. Use this API if, for example, you want to set the session cookie yourself instead of allowing Okta to set it, or want to hold the session ID to delete a session through the API instead of visiting the logout URL.
      operationId: createSession
      x-codegen-request-body-name: createSessionRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          description: Bad Request
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
      tags:
        - Session
  /api/v1/sessions/{sessionId}:
    parameters:
      - $ref: '#/components/parameters/pathSessionId'
    get:
      summary: Retrieve a Session
      description: Retrieves information about the Session specified by the given session ID
      operationId: getSession
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          description: Bad Request
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.sessions.read
      tags:
        - Session
    delete:
      summary: Revoke a Session
      description: Revokes the specified Session
      operationId: revokeSession
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.sessions.manage
      tags:
        - Session
  /api/v1/sessions/{sessionId}/lifecycle/refresh:
    parameters:
      - $ref: '#/components/parameters/pathSessionId'
    post:
      summary: Refresh a Session
      description: Refreshes an existing Session using the `id` for that Session. A successful response contains the refreshed Session with an updated `expiresAt` timestamp.
      operationId: refreshSession
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.sessions.manage
      tags:
        - Session
  /api/v1/templates/sms:
    get:
      summary: List all SMS Templates
      description: Lists all custom SMS templates. A subset of templates can be returned that match a template type.
      operationId: listSmsTemplates
      parameters:
        - name: templateType
          in: query
          schema:
            $ref: '#/components/schemas/SmsTemplateType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmsTemplate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - Template
    post:
      summary: Create an SMS Template
      description: Creates a new custom SMS template
      operationId: createSmsTemplate
      x-codegen-request-body-name: smsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - Template
  /api/v1/templates/sms/{templateId}:
    parameters:
      - $ref: '#/components/parameters/pathTemplateId'
    get:
      summary: Retrieve an SMS Template
      description: Retrieves a specific template by `id`
      operationId: getSmsTemplate
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - Template
    post:
      summary: Update an SMS Template
      description: Updates an SMS template
      operationId: updateSmsTemplate
      x-codegen-request-body-name: smsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - Template
    put:
      summary: Replace an SMS Template
      description: Replaces the SMS template
      operationId: replaceSmsTemplate
      x-codegen-request-body-name: smsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - Template
    delete:
      summary: Delete an SMS Template
      description: Deletes an SMS template
      operationId: deleteSmsTemplate
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - Template
  /api/v1/threats/configuration:
    get:
      summary: Retrieve the ThreatInsight Configuration
      description: Retrieves the ThreatInsight configuration for the org
      operationId: getCurrentConfiguration
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
              examples:
                ThreatInsightResponseEx:
                  $ref: '#/components/examples/ThreatInsightResponseExample'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.threatInsights.read
      tags:
        - ThreatInsight
    post:
      summary: Update the ThreatInsight Configuration
      description: Updates the ThreatInsight configuration for the org
      operationId: updateConfiguration
      x-codegen-request-body-name: threatInsightConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreatInsightConfiguration'
            examples:
              ThreatInsightUpdateEx:
                $ref: '#/components/examples/ThreatInsightUpdateRequestExample'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
              examples:
                ThreatInsightUpdateEx:
                  $ref: '#/components/examples/ThreatInsightUpdateResponseExample'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.threatInsights.manage
      tags:
        - ThreatInsight
  /api/v1/trustedOrigins:
    get:
      summary: List all Trusted Origins
      description: Lists all trusted origins
      operationId: listTrustedOrigins
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: -1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustedOrigin'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.trustedOrigins.read
      tags:
        - TrustedOrigin
    post:
      summary: Create a Trusted Origin
      description: Creates a trusted origin
      operationId: createTrustedOrigin
      x-codegen-request-body-name: trustedOrigin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedOrigin'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.trustedOrigins.manage
      tags:
        - TrustedOrigin
  /api/v1/trustedOrigins/{trustedOriginId}:
    parameters:
      - $ref: '#/components/parameters/pathTrustedOriginId'
    get:
      summary: Retrieve a Trusted Origin
      description: Retrieves a trusted origin
      operationId: getTrustedOrigin
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.trustedOrigins.read
      tags:
        - TrustedOrigin
    put:
      summary: Replace a Trusted Origin
      description: Replaces a trusted origin
      operationId: replaceTrustedOrigin
      x-codegen-request-body-name: trustedOrigin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedOrigin'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.trustedOrigins.manage
      tags:
        - TrustedOrigin
    delete:
      summary: Delete a Trusted Origin
      description: Deletes a trusted origin
      operationId: deleteTrustedOrigin
      responses:
        '204':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.trustedOrigins.manage
      tags:
        - TrustedOrigin
  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathTrustedOriginId'
    post:
      summary: Activate a Trusted Origin
      description: Activates a trusted origin
      operationId: activateTrustedOrigin
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.trustedOrigins.manage
      tags:
        - TrustedOrigin
  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathTrustedOriginId'
    post:
      summary: Deactivate a Trusted Origin
      description: Deactivates a trusted origin
      operationId: deactivateTrustedOrigin
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.trustedOrigins.manage
      tags:
        - TrustedOrigin
  /api/v1/users:
    get:
      summary: List all Users
      description: Lists all users that do not have a status of 'DEPROVISIONED' (by default), up to the maximum (200 for most orgs), with pagination.  A subset of users can be returned that match a supported filter expression or search criteria.
      operationId: listUsers
      parameters:
        - name: q
          in: query
          description: Finds a user that matches firstName, lastName, and email properties
          schema:
            type: string
        - $ref: '#/components/parameters/queryAfter'
        - name: limit
          in: query
          description: Specifies the number of results returned. Defaults to 10 if `q` is provided.
          schema:
            type: integer
            format: int32
            default: 200
        - name: filter
          in: query
          description: Filters users with a supported expression for a subset of properties
          schema:
            type: string
        - name: search
          in: query
          description: Searches for users with a supported filtering expression for most properties. Okta recommends using this parameter for search for best performance.
          schema:
            type: string
        - name: sortBy
          in: query
          schema:
            type: string
        - name: sortOrder
          in: query
          description: Sorting is done in ASCII sort order (that is, by ASCII character value), but isn't case sensitive.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              examples:
                UserList:
                  $ref: '#/components/examples/ListUsersResponse'
              x-okta-feature-flag-amends:
                UD_REALMS:
                  examples:
                    UserList:
                      $ref: '#/components/examples/ListRealmAwareUsersResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
    post:
      summary: Create a User
      description: |-
        Creates a new user in your Okta organization with or without credentials<br>
        > **Legal Disclaimer**<br>
        After a user is added to the Okta directory, they receive an activation email. As part of signing up for this service,
        you agreed not to use Okta's service/product to spam and/or send unsolicited messages.
        Please refrain from adding unrelated accounts to the directory as Okta is not responsible for, and disclaims any and all
        liability associated with, the activation email's content. You, and you alone, bear responsibility for the emails sent to any recipients.
      operationId: createUser
      parameters:
        - name: activate
          in: query
          description: Executes activation lifecycle operation when creating the user
          schema:
            type: boolean
            default: true
        - name: provider
          in: query
          description: Indicates whether to create a user with a specified authentication provider
          schema:
            type: boolean
            default: false
        - name: nextLogin
          in: query
          description: With activate=true, set nextLogin to "changePassword" to have the password be EXPIRED, so user must change it the next time they log in.
          schema:
            $ref: '#/components/schemas/UserNextLogin'
          x-okta-added-version: 0.14.0
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Create user with too many groups specified:
                  $ref: '#/components/examples/ErrorCreateUserWithTooManyManyGroupsResponse'
                Create user with expired password and activate set to `false`:
                  $ref: '#/components/examples/ErrorCreateUserWithExpiredPasswordWithoutActivation'
                Create user with expired password and `null` password:
                  $ref: '#/components/examples/ErrorCreateUserWithExpiredPasswordWithNullPassword'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: Retrieve a User
      description: Retrieves a user from your Okta organization
      operationId: getUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
    post:
      summary: Update a User
      description: Updates a user partially determined by the request parameters
      operationId: updateUser
      parameters:
        - name: strict
          in: query
          schema:
            type: boolean
      x-codegen-request-body-name: user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
    put:
      summary: Replace a User
      description: Replaces a user's profile and/or credentials using strict-update semantics
      operationId: replaceUser
      parameters:
        - name: strict
          in: query
          schema:
            type: boolean
          x-okta-added-version: 1.10.0
      x-codegen-request-body-name: user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
    delete:
      summary: Delete a User
      description: Deletes a user permanently. This operation can only be performed on users that have a `DEPROVISIONED` status.  **This action cannot be recovered!**. Calling this on an `ACTIVE` user will transition the user to `DEPROVISIONED`.
      operationId: deleteUser
      parameters:
        - name: sendEmail
          in: query
          schema:
            type: boolean
            default: false
          x-okta-added-version: 1.5.0
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/appLinks:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: List all Assigned Application Links
      description: Lists all appLinks for all direct or indirect (via group membership) assigned applications
      operationId: listAppLinks
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppLink'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
  /api/v1/users/{userId}/blocks:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: List all User Blocks
      description: Lists information about how the user is blocked from accessing their account
      operationId: listUserBlocks
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserBlock'
              examples:
                BlocksUnknownDevices:
                  $ref: '#/components/examples/ListUserBlocksUnknownDevicesResponse'
                BlocksAnyDevices:
                  $ref: '#/components/examples/ListUserBlocksAnyDevicesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
  /api/v1/users/{userId}/clients:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: List all Clients
      description: Lists all client resources for which the specified user has grants or tokens
      operationId: listUserClients
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Client'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
  /api/v1/users/{userId}/clients/{clientId}/grants:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathClientId'
    get:
      summary: List all Grants for a Client
      description: Lists all grants for a specified user and client
      operationId: listGrantsForUserAndClient
      parameters:
        - name: expand
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
    delete:
      summary: Revoke all Grants for a Client
      description: Revokes all grants for the specified user and client
      operationId: revokeGrantsForUserAndClient
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/clients/{clientId}/tokens:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathClientId'
    get:
      summary: List all Refresh Tokens for a Client
      description: Lists all refresh tokens issued for the specified User and Client
      operationId: listRefreshTokensForUserAndClient
      parameters:
        - name: expand
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
    delete:
      summary: Revoke all Refresh Tokens for a Client
      description: Revokes all refresh tokens issued for the specified User and Client
      operationId: revokeTokensForUserAndClient
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/clients/{clientId}/tokens/{tokenId}:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathClientId'
      - $ref: '#/components/parameters/pathTokenId'
    get:
      summary: Retrieve a Refresh Token for a Client
      description: Retrieves a refresh token issued for the specified User and Client
      operationId: getRefreshTokenForUserAndClient
      parameters:
        - name: expand
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: after
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
    delete:
      summary: Revoke a Token for a Client
      description: Revokes the specified refresh token
      operationId: revokeTokenForUserAndClient
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/credentials/change_password:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Change Password
      description: Changes a user's password by validating the user's current password. This operation can only be performed on users in `STAGED`, `ACTIVE`, `PASSWORD_EXPIRED`, or `RECOVERY` status that have a valid password credential
      operationId: changePassword
      parameters:
        - name: strict
          in: query
          schema:
            type: boolean
          x-okta-added-version: 1.10.0
      x-codegen-request-body-name: changePasswordRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/credentials/change_recovery_question:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Change Recovery Question
      description: Changes a user's recovery question & answer credential by validating the user's current password.  This operation can only be performed on users in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid password credential
      operationId: changeRecoveryQuestion
      x-codegen-request-body-name: userCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/credentials/forgot_password:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Initiate Forgot Password
      description: Initiates the forgot password flow. Generates a one-time token (OTT) that can be used to reset a user's password.
      operationId: forgotPassword
      parameters:
        - name: sendEmail
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Reset url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/credentials/forgot_password_recovery_question:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Reset Password with Recovery Question
      description: Resets the user's password to the specified password if the provided answer to the recovery question is correct
      operationId: forgotPasswordSetNewPassword
      parameters:
        - name: sendEmail
          in: query
          required: false
          schema:
            type: boolean
            default: true
      x-codegen-request-body-name: userCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        '200':
          description: Credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/factors:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: List all Factors
      description: Lists all the enrolled factors for the specified user
      operationId: listFactors
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserFactor'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserFactor
    post:
      summary: Enroll a Factor
      description: Enrolls a user with a supported factor
      operationId: enrollFactor
      parameters:
        - name: updatePhone
          in: query
          schema:
            type: boolean
            default: false
        - name: templateId
          in: query
          description: id of SMS template (only for SMS factor)
          schema:
            type: string
        - name: tokenLifetimeSeconds
          in: query
          schema:
            type: integer
            format: int32
            default: 300
          x-okta-added-version: 1.3.0
        - name: activate
          in: query
          schema:
            type: boolean
            default: false
          x-okta-added-version: 1.3.0
      x-codegen-request-body-name: body
      requestBody:
        description: Factor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFactor'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/catalog:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: List all Supported Factors
      description: Lists all the supported factors that can be enrolled for the specified user
      operationId: listSupportedFactors
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserFactor'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/questions:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: List all Supported Security Questions
      description: Lists all available security questions for a user's `question` factor
      operationId: listSupportedSecurityQuestions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecurityQuestion'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/{factorId}:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathFactorId'
    get:
      summary: Retrieve a Factor
      description: Retrieves a factor for the specified user
      operationId: getFactor
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserFactor
    delete:
      summary: Unenroll a Factor
      description: Unenrolls an existing factor for the specified user, allowing the user to enroll a new factor
      operationId: unenrollFactor
      parameters:
        - name: removeRecoveryEnrollment
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/{factorId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathFactorId'
    post:
      summary: Activate a Factor
      description: Activates a factor. The `sms` and `token:software:totp` factor types require activation to complete the enrollment process.
      operationId: activateFactor
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateFactorRequest'
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/{factorId}/resend:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathFactorId'
    post:
      summary: Resend a factor enrollment
      description: Resends a factor challenge (SMS/call/email OTP) as part of an enrollment flow. The current rate limit is one OTP challenge (call or SMS) per device every 30 seconds. Okta round-robins between SMS providers with every resend request to help ensure delivery of an SMS OTP across different carriers.
      operationId: resendEnrollFactor
      parameters:
        - name: templateId
          in: query
          description: ID of SMS template (only for SMS factor)
          schema:
            type: string
      requestBody:
        description: Factor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFactor'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/{factorId}/transactions/{transactionId}:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathFactorId'
      - $ref: '#/components/parameters/pathTransactionId'
    get:
      summary: Retrieve a Factor Transaction Status
      description: Retrieves the factors verification transaction status
      operationId: getFactorTransactionStatus
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserFactorResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/{factorId}/verify:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathFactorId'
    post:
      summary: Verify an MFA Factor
      description: Verifies an OTP for a `token` or `token:hardware` factor
      operationId: verifyFactor
      parameters:
        - name: templateId
          in: query
          schema:
            type: string
        - name: tokenLifetimeSeconds
          in: query
          schema:
            type: integer
            format: int32
            default: 300
          x-okta-added-version: 1.3.0
        - name: X-Forwarded-For
          in: header
          schema:
            type: string
          x-okta-added-version: 1.11.0
        - name: User-Agent
          in: header
          schema:
            type: string
          x-okta-added-version: 1.11.0
        - name: Accept-Language
          in: header
          schema:
            type: string
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyFactorRequest'
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserFactorResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserFactor
  /api/v1/users/{userId}/grants:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: List all User Grants
      description: Lists all grants for the specified user
      operationId: listUserGrants
      parameters:
        - name: scopeId
          in: query
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
    delete:
      summary: Revoke all User Grants
      description: Revokes all grants for a specified user
      operationId: revokeUserGrants
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/grants/{grantId}:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathGrantId'
    get:
      summary: Retrieve a User Grant
      description: Retrieves a grant for the specified user
      operationId: getUserGrant
      parameters:
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
    delete:
      summary: Revoke a User Grant
      description: Revokes one grant for a specified user
      operationId: revokeUserGrant
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/groups:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: List all Groups
      description: Lists all groups of which the user is a member
      operationId: listUserGroups
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
  /api/v1/users/{userId}/idps:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: List all Identity Providers
      description: Lists the IdPs associated with the user
      operationId: listUserIdentityProviders
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProvider'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Activate a User
      description: |-
        Activates a user. This operation can only be performed on users with a `STAGED` or `DEPROVISIONED` status.
        Activation of a user is an asynchronous operation. The user will have the `transitioningToStatus`
        property with a value of `ACTIVE` during activation to indicate that the user hasn't completed the asynchronous operation.
        The user will have a status of `ACTIVE` when the activation process is complete.
        > **Multibrand and User activation**<br>
        If you want to send a branded User Activation email, change the subdomain of your request to the custom domain that's associated with the brand.
        For example, change `subdomain.okta.com` to `custom.domain.one`. See [Multibrand and custom domains](https://developer.okta.com/docs/concepts/brands/#multibrand-and-custom-domains).
        <br><br>
        > **Legal disclaimer**<br>
        After a user is added to the Okta directory, they receive an activation email. As part of signing up for this service,
        you agreed not to use Okta's service/product to spam and/or send unsolicited messages.
        Please refrain from adding unrelated accounts to the directory as Okta is not responsible for, and disclaims any and all
        liability associated with, the activation email's content. You, and you alone, bear responsibility for the emails sent to any recipients.
      operationId: activateUser
      parameters:
        - name: sendEmail
          in: query
          description: Sends an activation email to the user if true
          required: true
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Deactivate a User
      description: 'Deactivates a user. This operation can only be performed on users that do not have a `DEPROVISIONED` status. While the asynchronous operation (triggered by HTTP header `Prefer: respond-async`) is proceeding the user''s `transitioningToStatus` property is `DEPROVISIONED`. The user''s status is `DEPROVISIONED` when the deactivation process is complete.'
      operationId: deactivateUser
      parameters:
        - name: sendEmail
          in: query
          schema:
            type: boolean
            default: false
          x-okta-added-version: 1.5.0
      responses:
        '200':
          description: OK
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/expire_password:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Expire Password
      description: Expires a user's password and transitions the user to the status of `PASSWORD_EXPIRED` so that the user is required to change their password at their next login
      operationId: expirePassword
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/expire_password_with_temp_password:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Expire Password and Set Temporary Password
      description: Expires a user's password and transitions the user to the status of `PASSWORD_EXPIRED` so that the user is required to change their password at their next login, and also sets the user's password to a temporary password returned in the response
      operationId: expirePasswordAndGetTemporaryPassword
      parameters:
        - name: revokeSessions
          description: When set to `true` (and the session is a user session), all user sessions are revoked except the current session.
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TempPassword'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/reactivate:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Reactivate a User
      description: Reactivates a user.  This operation can only be performed on users with a `PROVISIONED` status.  This operation restarts the activation workflow if for some reason the user activation was not completed when using the activationToken from [Activate User](#activate-user).
      operationId: reactivateUser
      parameters:
        - name: sendEmail
          in: query
          description: Sends an activation email to the user if true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/reset_factors:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Reset all Factors
      description: Resets all factors for the specified user. All MFA factor enrollments returned to the unenrolled state. The user's status remains ACTIVE. This link is present only if the user is currently enrolled in one or more MFA factors.
      operationId: resetFactors
      responses:
        '200':
          description: OK
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/reset_password:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Generate a Reset Password Token
      description: Generates a one-time token (OTT) that can be used to reset a user's password.  The OTT link can be automatically emailed to the user or returned to the API caller and distributed using a custom flow.
      operationId: generateResetPasswordToken
      parameters:
        - name: sendEmail
          in: query
          required: true
          schema:
            type: boolean
        - name: revokeSessions
          description: When set to `true` (and the session is a user session), all user sessions are revoked except the current session.
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/suspend:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Suspend a User
      description: Suspends a user.  This operation can only be performed on users with an `ACTIVE` status.  The user will have a status of `SUSPENDED` when the process is complete.
      operationId: suspendUser
      responses:
        '200':
          description: OK
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/unlock:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Unlock a User
      description: Unlocks a user with a `LOCKED_OUT` status or unlocks a user with an `ACTIVE` status that is blocked from unknown devices. Unlocked users have an `ACTIVE` status and can sign in with their current password.
      operationId: unlockUser
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/unsuspend:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    post:
      summary: Unsuspend a User
      description: Unsuspends a user and returns them to the `ACTIVE` state.  This operation can only be performed on users that have a `SUSPENDED` status.
      operationId: unsuspendUser
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/linkedObjects/{primaryRelationshipName}/{primaryUserId}:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathPrimaryRelationshipName'
      - $ref: '#/components/parameters/pathPrimaryUserId'
    put:
      summary: Create a Linked Object for two Users
      description: Creates a Linked Object for two users
      operationId: setLinkedObjectForUser
      responses:
        '204':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/linkedObjects/{relationshipName}:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRelationshipName'
    get:
      summary: List all Linked Objects
      description: Lists all linked objects for a user, relationshipName can be a primary or associated relationship name
      operationId: listLinkedObjectsForUser
      parameters:
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: -1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseLinks'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
    delete:
      summary: Delete a Linked Object
      description: Deletes linked objects for a user, relationshipName can be ONLY a primary relationship name
      operationId: deleteLinkedObjectForUser
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/roles:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: List all Roles assigned to a User
      description: Lists all roles assigned to a user identified by `userId`
      operationId: listAssignedRolesForUser
      parameters:
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignment
    post:
      summary: Assign a Role to a User
      description: Assigns a role to a user identified by `userId`
      operationId: assignRoleToUser
      parameters:
        - name: disableNotifications
          description: Setting this to `true` grants the user third-party admin status
          in: query
          schema:
            type: boolean
      x-codegen-request-body-name: assignRoleRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleAssignment
  /api/v1/users/{userId}/roles/{roleId}:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleId'
    get:
      summary: Retrieve a Role assigned to a User
      description: Retrieves a role identified by `roleId` assigned to a user identified by `userId`
      operationId: getUserAssignedRole
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignment
    delete:
      summary: Unassign a Role from a User
      description: Unassigns a role identified by `roleId` from a user identified by `userId`
      operationId: unassignRoleFromUser
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleAssignment
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleId'
    get:
      summary: List all Application Targets for Application Administrator Role
      description: Lists all App targets for an `APP_ADMIN` Role assigned to a User. This methods return list may include full Applications or Instances. The response for an instance will have an `ID` value, while Application will not have an ID.
      operationId: listApplicationTargetsForApplicationAdministratorRoleForUser
      parameters:
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogApplication'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleTarget
    put:
      summary: Assign all Apps as Target to Role
      description: Assigns all Apps as Target to Role
      operationId: assignAllAppsAsTargetToRoleForUser
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleId'
      - $ref: '#/components/parameters/pathAppName'
    put:
      summary: Assign an Application Target to Administrator Role
      description: Assigns an application target to administrator role
      operationId: assignAppTargetToAdminRoleForUser
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
    delete:
      summary: Unassign an Application Target from an Application Administrator Role
      description: Unassigns an application target from application administrator role
      operationId: unassignAppTargetFromAppAdminRoleForUser
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}/{appId}:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleId'
      - $ref: '#/components/parameters/pathAppName'
      - $ref: '#/components/parameters/pathAppId'
    put:
      summary: Assign an Application Instance Target to an Application Administrator Role
      description: Assigns anapplication instance target to appplication administrator role
      operationId: assignAppInstanceTargetToAppAdminRoleForUser
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
    delete:
      summary: Unassign an Application Instance Target from an Application Administrator Role
      description: Unassigns an application instance target from an application administrator role
      operationId: unassignAppInstanceTargetFromAdminRoleForUser
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
  /api/v1/users/{userId}/roles/{roleId}/targets/groups:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleId'
    get:
      summary: List all Group Targets for Role
      description: Lists all group targets for role
      operationId: listGroupTargetsForRole
      parameters:
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleTarget
  /api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleId'
      - $ref: '#/components/parameters/pathGroupId'
    put:
      summary: Assign a Group Target to Role
      description: Assigns a Group Target to Role
      operationId: assignGroupTargetToUserRole
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
    delete:
      summary: Unassign a Group Target from Role
      description: Unassigns a Group Target from Role
      operationId: unassignGroupTargetFromUserAdminRole
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleTarget
  /api/v1/users/{userId}/sessions:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    delete:
      summary: Revoke all User Sessions
      description: Revokes all active identity provider sessions of the user. This forces the user to authenticate on the next operation. Optionally revokes OpenID Connect and OAuth refresh and access tokens issued to the user.
      operationId: revokeUserSessions
      parameters:
        - name: oauthTokens
          in: query
          description: Revoke issued OpenID Connect and OAuth refresh and access tokens
          schema:
            type: boolean
            default: false
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/subscriptions:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
    get:
      summary: List all Subscriptions for a User
      description: Lists all subscriptions available to a specified User. Returns an `AccessDeniedException` message if requests are made for another user.
      operationId: listSubscriptionsUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            description: The unique ID of the user
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - Subscription
  /api/v1/users/{userId}/subscriptions/{notificationType}:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathNotificationType'
    get:
      summary: Retrieve a Subscription for a User
      description: Retrieves a subscription by `notificationType` for a specified User. Returns an `AccessDeniedException` message if requests are made for another user.
      operationId: getSubscriptionsNotificationTypeUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            description: The unique ID of the user
        - $ref: '#/components/parameters/pathNotificationType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - Subscription
  /api/v1/users/{userId}/subscriptions/{notificationType}/subscribe:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathNotificationType'
    post:
      summary: Subscribe a User to a Specific Notification Type
      description: Subscribes the current user to a specified notification type. Returns an `AccessDeniedException` message if requests are made for another user.
      operationId: subscribeByNotificationTypeUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            description: The unique ID of the user
        - $ref: '#/components/parameters/pathNotificationType'
      responses:
        '200':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - Subscription
  /api/v1/users/{userId}/subscriptions/{notificationType}/unsubscribe:
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathNotificationType'
    post:
      summary: Unsubscribe a User from a Specific Notification Type
      description: Unsubscribes the current user from a specified notification type. Returns an `AccessDeniedException` message if requests are made for another user.
      operationId: unsubscribeByNotificationTypeUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            description: The unique ID of the user
        - $ref: '#/components/parameters/pathNotificationType'
      responses:
        '200':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - Subscription
  /api/v1/zones:
    get:
      summary: List all Network Zones
      description: |-
        Lists all network zones with pagination. A subset of zones can be returned that match a supported filter expression or query.

        This operation requires URL encoding. For example, `filter=(id eq "nzoul0wf9jyb8xwZm0g3" or id eq "nzoul1MxmGN18NDQT0g3")` is encoded as `filter=%28id+eq+%22nzoul0wf9jyb8xwZm0g3%22+or+id+eq+%22nzoul1MxmGN18NDQT0g3%22%29`.

        Okta supports filtering on the `id` and `usage` properties. See [Filtering](https://developer.okta.com/docs/reference/core-okta-api/#filter) for more information on the expressions that are used in filtering.
      operationId: listNetworkZones
      parameters:
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of network zones
          example: 200u7yq5goxNFTiMjW1d7
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of results for a page
          example: 5
          schema:
            type: integer
            format: int32
            default: -1
        - name: filter
          in: query
          description: Filters zones by usage or ID expression
          example: filter=%28id+eq+%22nzowc1U5Jh5xuAK0o0g3%22%29
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkZone'
              examples:
                RetrieveAllZonesWithFilter:
                  $ref: '#/components/examples/RetrieveAllZonesWithFilter'
                RetrieveAllZones:
                  $ref: '#/components/examples/RetrieveAllZones'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.networkZones.read
      tags:
        - NetworkZone
    post:
      summary: Create a Network Zone
      description: |-
        Creates a new network zone.
        * At least one of either the `gateways` attribute or `proxies` attribute must be defined when creating a Network Zone.
        * At least one of the following attributes must be defined: `proxyType`, `locations`, or `asns`.
      operationId: createNetworkZone
      x-codegen-request-body-name: zone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkZone'
            examples:
              CreateIPPolicyNetworkZone:
                $ref: '#/components/examples/CreateIPPolicyNetworkZone'
              CreateIPPolicyBlocklistNetworkZone:
                $ref: '#/components/examples/CreateIPPolicyBlockListNetworkZone'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
              examples:
                CreateIPPolicyNetworkZone:
                  $ref: '#/components/examples/CreateIPPolicyNetworkZoneResponse'
                CreateIPPolicyBlocklistNetworkZone:
                  $ref: '#/components/examples/CreateIPPolicyBlockListNetworkZoneResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.networkZones.manage
      tags:
        - NetworkZone
  /api/v1/zones/{zoneId}:
    parameters:
      - $ref: '#/components/parameters/pathZoneId'
    get:
      summary: Retrieve a Network Zone
      description: Retrieves a network zone by `zoneId`
      operationId: getNetworkZone
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
              examples:
                RetrieveNetworkZoneIP:
                  $ref: '#/components/examples/RetrieveNetworkZoneIP'
                RetrieveNetworkZoneDynamic:
                  $ref: '#/components/examples/RetrieveNetworkZoneDynamic'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.networkZones.read
      tags:
        - NetworkZone
    put:
      summary: Replace a Network Zone
      description: |-
        Replaces a network zone by `zoneId`. The replaced network zone type must be the same as the existing type.
        You may replace the usage (`POLICY`, `BLOCKLIST`) of a network zone by updating the `usage` attribute.
      operationId: replaceNetworkZone
      x-codegen-request-body-name: zone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkZone'
            examples:
              ReplaceNetworkZone:
                $ref: '#/components/examples/ReplaceNetworkZone'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
              examples:
                ReplaceNetworkZone:
                  $ref: '#/components/examples/ReplaceNetworkZoneResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.networkZones.manage
      tags:
        - NetworkZone
    delete:
      summary: Delete a Network Zone
      description: Deletes network zone by `zoneId`
      operationId: deleteNetworkZone
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.networkZones.manage
      tags:
        - NetworkZone
  /api/v1/zones/{zoneId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathZoneId'
    post:
      summary: Activate a Network Zone
      description: Activates a network zone by `zoneId`
      operationId: activateNetworkZone
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
              examples:
                ActivateNetworkZone:
                  $ref: '#/components/examples/ActivateNetworkZone'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.networkZones.manage
      tags:
        - NetworkZone
  /api/v1/zones/{zoneId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathZoneId'
    post:
      summary: Deactivate a Network Zone
      description: Deactivates a network zone by `zoneId`
      operationId: deactivateNetworkZone
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
              examples:
                DeactivateNetworkZone:
                  $ref: '#/components/examples/DeactivateNetworkZone'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.networkZones.manage
      tags:
        - NetworkZone
  /attack-protection/api/v1/user-lockout-settings:
    get:
      summary: Retrieve the User Lockout Settings
      description: Retrieves the User Lockout Settings for an org
      operationId: getUserLockoutSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserLockoutSettings'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.read
      tags:
        - AttackProtection
    put:
      summary: Replace the User Lockout Settings
      description: Replaces the User Lockout Settings for an org
      operationId: replaceUserLockoutSettings
      x-codegen-request-body-name: lockoutSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLockoutSettings'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLockoutSettings'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - AttackProtection
  /integrations/api/v1/api-services:
    get:
      summary: List all API Service Integration instances
      description: Lists all API Service Integration instances with a pagination option
      operationId: listApiServiceIntegrationInstances
      parameters:
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIServiceIntegrationInstance'
              examples:
                APIServiceIntegrationResponseExample:
                  $ref: '#/components/examples/APIServiceIntegrationListResponse'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.oauthIntegrations.read
      tags:
        - ApiServiceIntegrations
    post:
      summary: Create an API Service Integration instance
      description: Creates and authorizes an API Service Integration instance
      operationId: createApiServiceIntegrationInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postAPIServiceIntegrationInstanceRequest'
            examples:
              postAPIServiceIntegrationRequestExample:
                $ref: '#/components/examples/postAPIServiceIntegrationRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postAPIServiceIntegrationInstance'
              examples:
                APIServiceIntegrationResponseExample:
                  $ref: '#/components/examples/postAPIServiceIntegrationResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
      tags:
        - ApiServiceIntegrations
  /integrations/api/v1/api-services/{apiServiceId}:
    parameters:
      - $ref: '#/components/parameters/pathApiServiceId'
    get:
      summary: Retrieve an API Service Integration instance
      description: Retrieves an API Service Integration instance by `id`
      operationId: getApiServiceIntegrationInstance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIServiceIntegrationInstance'
              examples:
                APIServiceIntegrationResponseExample:
                  $ref: '#/components/examples/APIServiceIntegrationResponse'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.oauthIntegrations.read
      tags:
        - ApiServiceIntegrations
    delete:
      summary: Delete an API Service Integration instance
      description: Deletes an API Service Integration instance by `id`. This operation also revokes access to scopes that were previously granted to this API Service Integration instance.
      operationId: deleteApiServiceIntegrationInstance
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.oauthIntegrations.manage
      tags:
        - ApiServiceIntegrations
  /integrations/api/v1/api-services/{apiServiceId}/credentials/secrets:
    parameters:
      - $ref: '#/components/parameters/pathApiServiceId'
    get:
      summary: List all API Service Integration instance Secrets
      description: Lists all client secrets for an API Service Integration instance by `apiServiceId`
      operationId: listApiServiceIntegrationInstanceSecrets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIServiceIntegrationInstanceSecret'
              examples:
                APIServiceIntegrationResponseExample:
                  $ref: '#/components/examples/APIServiceIntegrationInstanceSecretListResponse'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.oauthIntegrations.read
      tags:
        - ApiServiceIntegrations
    post:
      summary: Create an API Service Integration instance Secret
      description: Creates an API Service Integration instance Secret object with a new active client secret. You can create up to two Secret objects. An error is returned if you attempt to create more than two Secret objects.
      operationId: createApiServiceIntegrationInstanceSecret
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIServiceIntegrationInstanceSecret'
              examples:
                newAPIServiceIntegrationInstanceSecretResponse:
                  $ref: '#/components/examples/newAPIServiceIntegrationInstanceSecretResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.oauthIntegrations.manage
      tags:
        - ApiServiceIntegrations
  /integrations/api/v1/api-services/{apiServiceId}/credentials/secrets/{secretId}:
    parameters:
      - $ref: '#/components/parameters/pathApiServiceId'
      - $ref: '#/components/parameters/pathSecretId'
    delete:
      summary: Delete an API Service Integration instance Secret
      description: Deletes an API Service Integration instance Secret by `secretId`. You can only delete an inactive Secret.
      operationId: deleteApiServiceIntegrationInstanceSecret
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.oauthIntegrations.manage
      tags:
        - ApiServiceIntegrations
  /integrations/api/v1/api-services/{apiServiceId}/credentials/secrets/{secretId}/lifecycle/activate:
    parameters:
      - $ref: '#/components/parameters/pathApiServiceId'
      - $ref: '#/components/parameters/pathSecretId'
    post:
      summary: Activate an API Service Integration instance Secret
      description: Activates an API Service Integration instance Secret by `secretId`
      operationId: activateApiServiceIntegrationInstanceSecret
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIServiceIntegrationInstanceSecret'
              examples:
                activeAPIServiceIntegrationInstanceSecretResponse:
                  $ref: '#/components/examples/activeAPIServiceIntegrationInstanceSecretResponse'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.oauthIntegrations.manage
      tags:
        - ApiServiceIntegrations
  /integrations/api/v1/api-services/{apiServiceId}/credentials/secrets/{secretId}/lifecycle/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathApiServiceId'
      - $ref: '#/components/parameters/pathSecretId'
    post:
      summary: Deactivate an API Service Integration instance Secret
      description: Deactivates an API Service Integration instance Secret by `secretId`
      operationId: deactivateApiServiceIntegrationInstanceSecret
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIServiceIntegrationInstanceSecret'
              examples:
                inactiveAPIServiceIntegrationInstanceSecretResponse:
                  $ref: '#/components/examples/inactiveAPIServiceIntegrationInstanceSecretResponse'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.oauthIntegrations.manage
      tags:
        - ApiServiceIntegrations
components:
  examples:
    APIDevicesListAllResponse:
      summary: Response example
      value:
        - id: guo4a5u7YAHhjXrMK0g4
          status: CREATED
          created: '2019-10-02T18:03:07.000Z'
          lastUpdated: '2019-10-02T18:03:07.000Z'
          profile:
            displayName: Example Device name 1
            platform: WINDOWS
            serialNumber: XXDDRFCFRGF3M8MD6D
            sid: S-1-11-111
            registered: true
            secureHardwarePresent: false
            diskEncryptionType: ALL_INTERNAL_VOLUMES
          resourceType: UDDevice
          resourceDisplayName:
            value: Example Device name 1
            sensitive: false
          resourceAlternateId: null
          resourceId: guo4a5u7YAHhjXrMK0g4
          _links:
            activate:
              href: https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4/lifecycle/activate
              hints:
                allow:
                  - POST
            self:
              href: https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4
              hints:
                allow:
                  - GET
                  - PATCH
                  - PUT
            users:
              href: https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4/users
              hints:
                allow:
                  - GET
        - id: guo4a5u7YAHhjXrMK0g5
          status: ACTIVE
          created: '2023-06-21T23:24:02.000Z'
          lastUpdated: '2023-06-21T23:24:02.000Z'
          profile:
            displayName: Example Device name 2
            platform: ANDROID
            manufacturer: Google
            model: Pixel 6
            osVersion: 13:2023-05-05
            registered: true
            secureHardwarePresent: true
            diskEncryptionType: USER
          resourceType: UDDevice
          resourceDisplayName:
            value: Example Device name 2
            sensitive: false
          resourceAlternateId: null
          resourceId: guo4a5u7YAHhjXrMK0g5
          _links:
            activate:
              href: https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5/lifecycle/activate
              hints:
                allow:
                  - POST
            self:
              href: https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5
              hints:
                allow:
                  - GET
                  - PATCH
                  - PUT
            users:
              href: https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5/users
              hints:
                allow:
                  - GET
    APIDevicesListAllUsersResponse:
      summary: Response example
      value:
        created: '2021-08-20T17:13:35.000Z'
        managementStatus: NOT_MANAGED
        screenLockType: BIOMETRIC
        user:
          id: 00u17vh0q8ov8IU881d7
          status: ACTIVE
          created: '2021-08-20T16:08:25.000Z'
          activated: null
          statusChanged: '2021-08-20T16:39:41.000Z'
          lastLogin: '2023-04-18T17:54:12.000Z'
          lastUpdated: '2021-12-20T18:27:30.000Z'
          passwordChanged: '2021-12-20T18:27:30.000Z'
          type:
            id: oty17vh0n2EHVnbYF1d7
          profile:
            firstName: Bunk
            lastName: Moreland
            mobilePhone: null
            secondEmail: null
            login: bunk.moreland@example.com
            email: bunk.moreland@example.com
          credentials:
            password: null
            provider:
              type: OKTA
              name: OKTA
          _links:
            suspend:
              href: https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/suspend
              method: POST
            schema:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/user/osc17vh0n2EHVnbYF1d7
            resetPassword:
              href: https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/reset_password
              method: POST
            forgotPassword:
              href: https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/forgot_password
              method: POST
            expirePassword:
              href: https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/expire_password
              method: POST
            changeRecoveryQuestion:
              href: https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/change_recovery_question
              method: POST
            self:
              href: https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7
            resetFactors:
              href: https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/reset_factors
              method: POST
            type:
              href: https://{yourOktaDomain}/api/v1/meta/types/user/oty17vh0n2EHVnbYF1d7
            changePassword:
              href: https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/change_password
              method: POST
            deactivate:
              href: https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/deactivate
              method: POST
    APIServiceIntegrationInstanceSecretListResponse:
      summary: Secrets list response example
      value:
        - id: ocs2f4zrZbs8nUa7p0g4
          status: INACTIVE
          client_secret: '***DhOW'
          secret_hash: yk4SVx4sUWVJVbHt6M-UPA
          created: '2023-02-21T20:08:24.000Z'
          lastUpdated: '2023-02-21T20:08:24.000Z'
          _links:
            activate:
              href: https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f4zrZbs8nUa7p0g4/lifecycle/activate
              hints:
                allow:
                  - POST
            delete:
              href: https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f4zrZbs8nUa7p0g4
              hints:
                allow:
                  - DELETE
        - id: ocs2f50kZB0cITmYU0g4
          status: ACTIVE
          client_secret: '***MQGQ'
          secret_hash: 0WOOvBSzV9clc4Nr7Rbaug
          created: '2023-04-06T21:32:33.000Z'
          lastUpdated: '2023-04-06T21:32:33.000Z'
          _links:
            deactivate:
              href: https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f50kZB0cITmYU0g4/lifecycle/deactivate
              hints:
                allow:
                  - POST
    APIServiceIntegrationListResponse:
      summary: List response example
      value:
        - id: 0oa72lrepvp4WqEET1d9
          type: my_app_cie
          name: My App Cloud Identity Engine
          createdAt: '2023-02-21T20:08:24.000Z'
          createdBy: 00uu3u0ujW1P6AfZC2d5
          configGuideUrl: https://{docDomain}/my-app-cie/configuration-guide
          grantedScopes:
            - okta.logs.read
            - okta.groups.read
            - okta.users.read
          _links:
            self:
              href: https://{yourOktaDomain}/integrations/api/v1/api-services/0oa72lrepvp4WqEET1d9
              hints:
                allow:
                  - GET
                  - DELETE
            client:
              href: https://{yourOktaDomain}/oauth2/v1/clients/0oa72lrepvp4WqEET1d9
              hints:
                allow:
                  - GET
            logo:
              name: small
              href: https://{logoDomain}/{logoPath}/my_app_cie_small_logo
    APIServiceIntegrationResponse:
      summary: Response example
      value:
        id: 0oa72lrepvp4WqEET1d9
        type: my_app_cie
        name: My App Cloud Identity Engine
        createdAt: '2023-02-21T20:08:24.000Z'
        createdBy: 00uu3u0ujW1P6AfZC2d5
        configGuideUrl: https://{docDomain}/my-app-cie/configuration-guide
        grantedScopes:
          - okta.logs.read
          - okta.groups.read
          - okta.users.read
        _links:
          self:
            href: https://{yourOktaDomain}/integrations/api/v1/api-services/0oa72lrepvp4WqEET1d9
            hints:
              allow:
                - GET
                - DELETE
          client:
            href: https://{yourOktaDomain}/oauth2/v1/clients/0oa72lrepvp4WqEET1d9
            hints:
              allow:
                - GET
          logo:
            name: small
            href: https://{logoDomain}/{logoPath}/my_app_cie_small_logo
    ActivateNetworkZone:
      summary: Activated Network Zone response
      value:
        type: IP
        id: nzowc1U5Jh5xuAK0o0g3
        name: LegacyIpZone
        status: ACTIVE
        usage: POLICY
        created: '2019-05-17T18:44:31.000Z'
        lastUpdated: '2019-05-21T13:50:49.000Z'
        system: true
        gateways:
          - type: CIDR
            value: 1.2.3.4/24
        proxies:
          - type: RANGE
            value: 3.3.4.5-3.3.4.15
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          deactivate:
            href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate
            hints:
              allow:
                - POST
    AddMappingBody:
      summary: Update an existing profile mapping by adding one or more properties
      value:
        properties:
          additionalProperties:
            fullName:
              expression: user.firstName + user.lastName
              pushStatus: PUSH
            nickName:
              expression: user.nickName
              pushStatus: PUSH
    AddMappingResponse:
      summary: Update an existing profile mapping by adding one or more properties
      value:
        id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3
            schema:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4
            schema:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default
        properties:
          fullName:
            expression: user.firstName + user.lastName
            pushStatus: PUSH
          nickName:
            expression: user.nickName
            pushStatus: PUSH
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4
    ApiTokenListMetadataResponse:
      value:
        - name: My API Token
          userId: 00uabcdefg1234567890
          tokenWindow: P30D
          id: 00Tabcdefg1234567890
          clientName: Okta API
          expiresAt: 2021-12-11T20:38:10.000Z
          created: 2021-11-09T20:38:10.000Z
          lastUpdated: 2021-11-11T20:38:10.000Z
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/api-tokens/00Tabcdefg1234567890
              hints:
                allow:
                  - GET
                  - DELETE
            user:
              href: https://{yourOktaDomain}/api/v1/users/00uabcdefg1234567890
              hints:
                allow:
                  - GET
        - name: Another API Token
          userId: 00uabcdefg1234567890
          tokenWindow: PT5M
          id: 00T1234567890abcdefg
          clientName: Okta API
          expiresAt: 2021-11-11T20:43:10.000Z
          created: 2021-11-09T20:38:10.000Z
          lastUpdated: 2021-11-11T20:38:10.000Z
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/api-tokens/00T1234567890abcdefg
              hints:
                allow:
                  - GET
                  - DELETE
            user:
              href: https://{yourOktaDomain}/api/v1/users/00uabcdefg1234567890
              hints:
                allow:
                  - GET
    ApiTokenMetadataResponse:
      value:
        name: My API Token
        userId: 00uXXXXXXXXXXXXXXXXX
        tokenWindow: P30D
        id: 00Tabcdefg1234567890
        clientName: Okta API
        expiresAt: 2021-12-11T20:38:10.000Z
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/api-tokens/00Tabcdefg1234567890
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00uXXXXXXXXXXXXXXXXX
            hints:
              allow:
                - GET
    AppFeatureListResponseEx:
      summary: List app Feature response
      value:
        - name: USER_PROVISIONING
          status: ENABLED
          description: User provisioning settings from Okta to a downstream application
          capabilities:
            create:
              lifecycleCreate:
                status: DISABLED
            update:
              profile:
                status: DISABLED
              lifecycleDeactivate:
                status: DISABLED
              password:
                status: DISABLED
                seed: RANDOM
                change: KEEP_EXISTING
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/apps/${appId}/features/USER_PROVISIONING
              hints:
                allow:
                  - GET
                  - PUT
    AppFeatureResponseEx:
      summary: App Feature response
      value:
        name: USER_PROVISIONING
        status: ENABLED
        description: User provisioning settings from Okta to a downstream application
        capabilities:
          create:
            lifecycleCreate:
              status: DISABLED
          update:
            profile:
              status: DISABLED
            lifecycleDeactivate:
              status: DISABLED
            password:
              status: DISABLED
              seed: RANDOM
              change: KEEP_EXISTING
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/apps/${appId}/features/USER_PROVISIONING
            hints:
              allow:
                - GET
                - PUT
    AppUserSchemaAddRequest:
      value:
        definitions:
          custom:
            id: '#custom'
            type: object
            properties:
              twitterUserName:
                title: Twitter username
                description: User's username for twitter.com
                type: string
                required: false
                minLength: 1
                maxLength: 20
            required: []
    AppUserSchemaResponse:
      value:
        id: https://{yourOktaDomain}/meta/schemas/apps/0oa25gejWwdXNnFH90g4/default
        $schema: http://json-schema.org/draft-04/schema#
        name: Example App
        title: Example App User
        lastUpdated: '2017-07-18T23:18:43.000Z'
        created: '2017-07-18T22:35:30.000Z'
        definitions:
          base:
            id: '#base'
            type: object
            properties:
              userName:
                title: Username
                type: string
                required: true
                scope: NONE
                maxLength: 100
            required:
              - userName
          custom:
            id: '#custom'
            type: object
            properties:
              twitterUserName:
                title: Twitter username
                description: User's username for twitter.com
                type: string
                scope: NONE
                minLength: 1
                maxLength: 20
            required: []
        type: object
        properties:
          profile:
            allOf:
              - $ref: '#/definitions/base'
              - $ref: '#/definitions/custom'
    AssignGroupOwnerRequest:
      summary: Assign a group owner request example
      value:
        id: 00u1cmc03xjzePoWD0h8
        type: USER
    AssignGroupOwnerResponse:
      summary: Assign a group owner response example
      value:
        id: 00u1cmc03xjzePoWD0h8
        type: USER
        resolved: true
        originId: null
        originType: OKTA_DIRECTORY
        displayName: Oliver Putnam
        lastUpdated: Wed Mar 29 18:34:31 UTC 2023
    AuthenticatorRequestDuo:
      value:
        key: duo
        name: Duo Security
        provider:
          type: DUO
          configuration:
            userNameTemplate:
              template: oktaId
            integrationKey: testIntegrationKey
            secretKey: testSecretKey
            host: https://api-xxxxxxxx.duosecurity.com
    AuthenticatorResponseDuo:
      value:
        type: app
        id: aut9gnvcjUHIWb37J0g4
        key: duo
        status: ACTIVE
        name: Duo Security
        created: '2022-07-15T21:14:02.000Z'
        lastUpdated: '2022-07-15T21:14:02.000Z'
        settings: {}
        provider:
          type: DUO
          configuration:
            host: https://api-xxxxxxxx.duosecurity.com
            userNameTemplate:
              template: oktaId
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut5gnvcjUHIWb25J0g4
            hints:
              allow:
                - GET
                - PUT
          deactivate:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut5gnvcjUHIWb25J0g4/lifecycle/deactivate
            hints:
              allow:
                - POST
          methods:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut5gnvcjUHIWb25J0g4/methods
            hints:
              allow:
                - GET
    AuthenticatorResponseEmail: &ref_0
      value:
        type: email
        id: aut1nbsPHh7jNjjyP0g4
        key: okta_email
        status: ACTIVE
        name: Email
        created: '2020-07-26T21:05:23.000Z'
        lastUpdated: '2020-07-28T21:45:52.000Z'
        settings:
          allowedFor: any
          tokenLifetimeInMinutes: 5
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbsPHh7jNjjyP0g4
            hints:
              allow:
                - GET
                - PUT
          methods:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbsPHh7jNjjyP0g4/methods
            hints:
              allow:
                - GET
          deactivate:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbsPHh7jNjjyP0g4/lifecycle/deactivate
            hints:
              allow:
                - POST
    AuthenticatorResponsePassword: &ref_1
      value:
        type: password
        id: aut1nbtrJKKA9m45a0g4
        key: okta_password
        status: ACTIVE
        name: Password
        created: '2020-07-26T21:05:23.000Z'
        lastUpdated: '2020-07-26T21:05:23.000Z'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbtrJKKA9m45a0g4
            hints:
              allow:
                - GET
                - PUT
          methods:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbtrJKKA9m45a0g4/methods
            hints:
              allow:
                - GET
    AuthenticatorResponsePhone: &ref_2
      value:
        type: phone
        id: aut1nbuyD8m1ckAYc0g4
        key: phone_number
        status: INACTIVE
        name: Phone
        created: '2020-07-26T21:05:23.000Z'
        lastUpdated: '2020-07-29T00:21:29.000Z'
        settings:
          allowedFor: none
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbuyD8m1ckAYc0g4
            hints:
              allow:
                - GET
                - PUT
          methods:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbuyD8m1ckAYc0g4/methods
            hints:
              allow:
                - GET
          activate:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbuyD8m1ckAYc0g4/lifecycle/activate
            hints:
              allow:
                - POST
    AuthenticatorResponseSecurityQuestion:
      summary: Security Question
      value:
        type: security_question
        id: aut1nbvIgEenhwE6c0g4
        key: security_question
        status: ACTIVE
        name: Security Question
        created: '2020-07-26T21:05:23.000Z'
        lastUpdated: '2020-07-26T21:05:23.000Z'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbvIgEenhwE6c0g4
            hints:
              allow:
                - GET
          methods:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbvIgEenhwE6c0g4/methods
            hints:
              allow:
                - GET
          deactivate:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbvIgEenhwE6c0g4/lifecycle/deactivate
            hints:
              allow:
                - POST
    AuthenticatorResponseWebAuthn: &ref_3
      value:
        type: security_key
        id: aut1nd8PQhGcQtSxB0g4
        key: webauthn
        status: ACTIVE
        name: Security Key or Biometric
        created: '2020-07-26T21:16:37.000Z'
        lastUpdated: '2020-07-27T18:59:30.000Z'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4
            hints:
              allow:
                - GET
                - PUT
          methods:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods
            hints:
              allow:
                - GET
          deactivate:
            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/lifecycle/deactivate
            hints:
              allow:
                - POST
    AuthenticatorsResponse:
      summary: Org Authenticators
      value:
        - *ref_0
        - *ref_1
        - *ref_2
        - *ref_3
    BehaviorRuleRequest:
      value:
        name: My Behavior Rule
        type: VELOCITY
    BehaviorRuleResponse:
      value:
        id: abcd1234
        name: My Behavior Rule
        type: VELOCITY
        settings:
          velocityKph: 805
        status: ACTIVE
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _link:
          self:
            href: https://your-subdomain.okta.com/api/v1/behaviors/abcd1234
            hints:
              allow:
                - GET
                - POST
                - PUT
                - DELETE
    CAPTCHAInstanceRequestHCaptcha:
      value:
        name: myHCaptcha
        secretKey: xxxxxxxxxxx
        siteKey: xxxxxxxxxxx
        type: HCAPTCHA
    CAPTCHAInstanceRequestReCaptcha:
      value:
        name: myReCaptcha
        secretKey: xxxxxxxxxxx
        siteKey: yyyyyyyyyyyyyyy
        type: RECAPTCHA_V2
    CAPTCHAInstanceResponseHCaptcha:
      value:
        id: abcd1234
        name: myHCaptcha
        siteKey: xxxxxxxxxxx
        type: HCAPTCHA
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd1234
            hints:
              allow:
                - GET
                - POST
                - PUT
                - DELETE
    CAPTCHAInstanceResponseReCaptcha:
      value:
        id: abcd4567
        name: myReCaptcha
        siteKey: yyyyyyyyyyyyyyy
        type: RECAPTCHA_V2
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd4567
            hints:
              allow:
                - GET
                - POST
                - PUT
                - DELETE
    CreateBrandRequest:
      value:
        name: My Awesome Brand
    CreateBrandResponse:
      value:
        id: bnd114iNkrcN6aR680g5
        removePoweredByOkta: false
        customPrivacyPolicyUrl: null
        name: My Awesome Brand
        locale: en
        defaultApp:
          appInstanceId: 0oa114iNkrcN6aR680g4
          appLinkName: null
          classicApplicationUri: null
        isDefault: false
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g5
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          themes:
            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g5/themes
            hints:
              allow:
                - GET
    CreateEmailDomainRequest:
      value:
        displayName: Admin
        userName: admin
        domain: example.com
        brandId: bnd100iSrkcN6aR680g1
    CreateHookKeyResponse:
      summary: Create a key response example
      value:
        id: HKY1p7jWLndGQV9M60g4
        keyId: 7fbc27fd-e3df-4522-86bf-1930110256ad
        name: My new key
        created: '2022-08-31T18:09:58.000Z'
        lastUpdated: '2022-08-31T18:09:58.000Z'
        isUsed: 'false'
        _embedded:
          kty: RSA
          alg: RSA
          kid: 7fbc27fd-e3df-4522-86bf-1930110256ad
          use: 'null'
          e: AQAB
          'n': 2naqCnv6r4xNQs7207lRtKQvdtnlVND-8k5iYBIiqoKGY3CqUmRm1jleoOniiQoMkFX8Wj2DmVqr002efF3vOQ7_gjtTatBTVUNbNIQLybun4dkVoUtfP7pRc5SLpcP3eGPRVar734ZrpQXzmCEdpqBt3jrVjwYjNE5DqOjbYXFJtMsy8CWE9LRJ3kyHEoHPzo22dG_vMrXH0_sAQoCk_4TgNCbvyzVmGVYXI_BkUnp0hv2pR4bQVRYzGB9dKJdctOh8zULqc_EJ8tiYsS05YnF7whrWEyARK0rH-e4d4W-OmBTga_zhY4kJ4NsoQ4PyvcatZkxjPO92QHQOFDnf3w`
    CreateIPPolicyBlockListNetworkZone:
      summary: Create an IP Policy Blocklist Network Zone
      value:
        type: IP
        name: newBlockListNetworkZone
        status: ACTIVE
        usage: BLOCKLIST
        gateways:
          - type: CIDR
            value: 1.2.3.4/24
          - type: CIDR
            value: 2.3.4.5/24
        proxies: null
    CreateIPPolicyBlockListNetworkZoneResponse:
      summary: IP Policy Blocklist Network Zone Response
      value:
        type: IP
        id: nzo1qasnPb1kqEq0e0g4
        name: newBlockListNetworkzone
        status: ACTIVE
        usage: BLOCKLIST
        created: '2020-10-12T18:58:02.000Z'
        lastUpdated: '2020-10-12T18:58:02.000Z'
        system: false
        gateways:
          - type: CIDR
            value: 1.2.3.4/24
          - type: CIDR
            value: 2.3.4.5/24
        proxies: null
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/zones/nzo1qasnPb1kqEq0e0g4
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          deactivate:
            href: https://{yourOktaDomain}/api/v1/zones/nzo1qasnPb1kqEq0e0g4/lifecycle/deactivate
            hints:
              allow:
                - POST
    CreateIPPolicyNetworkZone:
      summary: Create an IP Policy Network Zone
      value:
        type: IP
        name: newNetworkZone
        gateways:
          - type: CIDR
            value: 1.2.3.4/24
          - type: CIDR
            value: 2.3.4.5/24
        proxies:
          - type: CIDR
            value: 2.2.3.4/24
          - type: CIDR
            value: 3.3.4.5/24
    CreateIPPolicyNetworkZoneResponse:
      summary: IP Policy Network Zone Response
      value:
        type: IP
        id: nzowc1U5Jh5xuAK0o0g3
        name: newNetworkZone
        status: ACTIVE
        usage: POLICY
        created: '2019-05-17T18:44:31.000Z'
        lastUpdated: '2019-05-21T13:50:49.000Z'
        system: false
        gateways:
          - type: CIDR
            value: 1.2.3.4/24'
          - type: CIDR
            value: 2.3.4.5/24
        proxies:
          - type: CIDR
            value: 2.2.3.4/24
          - type: CIDR
            value: 3.3.4.5/24
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          deactivate:
            href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate
            hints:
              allow:
                - POST
    CreateUISchemaBody:
      summary: UI Schema body request
      value:
        uiSchema:
          type: Group
          elements:
            - type: Control
              scope: '#/properties/firstName'
              label: First Name
              options:
                format: text
            - type: Control
              scope: '#/properties/lastName'
              label: Last Name
              options:
                format: text
            - type: Control
              scope: '#/properties/email'
              label: Primary email
              options:
                format: text
          buttonLabel: Submit
          label: Sign in
    CreateUISchemaResponse:
      summary: Returns full UI Schema body
      value:
        id: uis4a7liocgcRgcxZ0g7
        uiSchema:
          type: Group
          label: Sign in
          buttonLabel: Submit
          elements:
            - type: Control
              scope: '#/properties/firstName'
              label: First name
              options:
                format: text
            - type: Control
              scope: '#/properties/lastName'
              label: Last name
              options:
                format: text
            - type: Control
              scope: '#/properties/email'
              label: Primary email
              options:
                format: text
        created: '2022-07-25T12:56:31.000Z'
        lastUpdated: '2022-07-26T11:53:59.000Z'
        _links:
          self:
            href: https://exmaple.com/api/v1/meta/uischemas/uis4a7liocgcRgcxZ0g7
            hints:
              allow:
                - GET
                - PUT
                - DELETE
    CreateUpdateEmailCustomizationRequest:
      value:
        language: fr
        subject: Bienvenue dans ${org.name}!
        body: <!DOCTYPE html><html><body><p>Bonjour ${user.profile.firstName}. <a href="${activationLink}">Activer le compte</a></p></body></html>
        isDefault: false
    CreateUpdateEmailCustomizationResponse:
      value:
        language: fr
        subject: Bienvenue dans ${org.name}!
        body: <!DOCTYPE html><html><body><p>Bonjour ${user.profile.firstName}. <a href="${activationLink}">Activer le compte</a></p></body></html>
        isDefault: false
        id: oel11u6DqUiMbQkpl0g4
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          template:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          preview:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview
            hints:
              allow:
                - GET
          test:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test
            hints:
              allow:
                - POST
    CreateUpdateIamRolePermissionRequestExample:
      value:
        conditions:
          include:
            okta:ResourceAttribute/User/Profile:
              - city
              - state
              - zipCode
    CreateUserRequest:
      summary: Create a user type request
      value:
        description: A new custom user type
        displayName: New User Type
        name: newUserType
    CreateUserResponse:
      summary: Create a user type response
      value:
        id: otyfnly5cQjJT9PnR0g4
        displayName: New User Type
        name: newUserType
        description: A new custom user type
        createdBy: sprz9fj1ycBcsgopy1d6
        lastUpdatedBy: sprz9fj1ycBcsgopy1d6
        created: '2021-07-05T20:40:38.000Z'
        lastUpdated: '2021-07-05T20:40:38.000Z'
        default: false
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6
          schema:
            href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6
    DeactivateNetworkZone:
      summary: Deactivated Network Zone response
      value:
        type: IP
        id: nzowc1U5Jh5xuAK0o0g3
        name: LegacyIpZone
        status: INACTIVE
        usage: POLICY
        created: '2019-05-17T18:44:31.000Z'
        lastUpdated: '2019-05-21T13:50:49.000Z'
        system: true
        gateways:
          - type: CIDR
            value: 1.2.3.4/24
        proxies:
          - type: RANGE
            value: 3.3.4.5-3.3.4.15
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          deactivate:
            href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate
            hints:
              allow:
                - POST
    DefaultRealmResponse:
      value:
        id: guox9jQ16k9V8IQWL0g3
        created: 2022-04-04T15:56:05.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
        isDefault: true
        profile:
          name: Default Realm
        _links:
          self:
            rel: self
            href: http://your-subdomain.okta.com/api/v1/realms/guox9jQ16k9V8IQWL0g3
            method: GET
    DeviceAssuranceAndroidRequest:
      summary: Android request
      value:
        name: Device Assurance Android
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
            - USER
            - FULL
        jailbreak: false
        platform: ANDROID
        screenLockType:
          include:
            - BIOMETRIC
        secureHardwarePresent: true
    DeviceAssuranceAndroidResponse:
      summary: Android response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance Android
        lastUpdate: '2022-01-01T00:00:00.000Z'
        createdUpdate: '2022-01-01T00:00:00.000Z'
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
            - USER
            - FULL
        jailbreak: false
        platform: ANDROID
        screenLockType:
          include:
            - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
                - DELETE
                - GET
                - PUT
    DeviceAssuranceChromeOSWithThirdPartySignalProvidersRequest:
      x-okta-lifecycle:
        features:
          - GOOGLE_DEVICE_CONTEXT_CONNECTOR
      summary: ChromeOS with third-party signal providers request
      value:
        name: Device Assurance ChromeOS
        platform: CHROMEOS
        thirdPartySignalProviders:
          dtc:
            osVersion:
              minimum: 10.0.19041.1110
            diskEncrypted: true
            osFirewall: true
            screenLockSecured: true
            allowScreenLock: true
            browserVersion:
              minimum: 15393.27.0
            deviceEnrollmentDomain: testDomain
            builtInDnsClientEnabled: true
            chromeRemoteDesktopAppBlocked: true
            safeBrowsingProtectionLevel: ENHANCED_PROTECTION
            siteIsolationEnabled: true
            passwordProtectionWarningTrigger: PASSWORD_PROTECTION_OFF
            realtimeUrlCheckMode: true
            keyTrustLevel: CHROME_OS_VERIFIED_MODE
    DeviceAssuranceChromeOSWithThirdPartySignalProvidersResponse:
      x-okta-lifecycle:
        features:
          - GOOGLE_DEVICE_CONTEXT_CONNECTOR
      summary: ChromeOS with third-party signal providers response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance ChromeOS
        lastUpdate: '2022-01-01T00:00:00.000Z'
        createdUpdate: '2022-01-01T00:00:00.000Z'
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        platform: CHROMEOS
        thirdPartySignalProviders:
          dtc:
            osVersion:
              minimum: 10.0.19041.1110
            diskEncrypted: true
            osFirewall: true
            screenLockSecured: true
            allowScreenLock: true
            browserVersion:
              minimum: 15393.27.0
            deviceEnrollmentDomain: testDomain
            builtInDnsClientEnabled: true
            chromeRemoteDesktopAppBlocked: true
            safeBrowsingProtectionLevel: ENHANCED_PROTECTION
            siteIsolationEnabled: true
            passwordProtectionWarningTrigger: PASSWORD_PROTECTION_OFF
            realtimeUrlCheckMode: true
            keyTrustLevel: CHROME_OS_VERIFIED_MODE
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
                - DELETE
                - GET
                - PUT
    DeviceAssuranceIosRequest:
      summary: iOS request
      value:
        name: Device Assurance iOS
        osVersion:
          minimum: 12.4.5
        jailbreak: false
        platform: IOS
        screenLockType:
          include:
            - BIOMETRIC
    DeviceAssuranceIosResponse:
      summary: iOS response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance iOS
        lastUpdate: '2022-01-01T00:00:00.000Z'
        createdUpdate: '2022-01-01T00:00:00.000Z'
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5.9
        jailbroken: false
        platform: IOS
        screenLockType:
          include:
            - BIOMETRIC
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
                - DELETE
                - GET
                - PUT
    DeviceAssuranceMacOSRequest:
      summary: macOS request
      value:
        name: Device Assurance macOS
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
            - ALL_INTERNAL_VOLUMES
        platform: MACOS
        screenLockType:
          include:
            - PASSCODE
            - BIOMETRIC
        secureHardwarePresent: true
    DeviceAssuranceMacOSResponse:
      summary: macOS response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance macOS
        lastUpdate: '2022-01-01T00:00:00.000Z'
        createdUpdate: '2022-01-01T00:00:00.000Z'
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
            - ALL_INTERNAL_VOLUMES
        platform: MACOS
        screenLockType:
          include:
            - PASSCODE
            - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
                - DELETE
                - GET
                - PUT
    DeviceAssuranceMacOSWithThirdPartySignalProvidersRequest:
      x-okta-lifecycle:
        features:
          - GOOGLE_DEVICE_CONTEXT_CONNECTOR
      summary: macOS with third-party signal providers request
      value:
        name: Device Assurance macOS
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
            - ALL_INTERNAL_VOLUMES
        platform: MACOS
        screenLockType:
          include:
            - PASSCODE
            - BIOMETRIC
        secureHardwarePresent: true
        thirdPartySignalProviders:
          dtc:
            osVersion:
              minimum: 10.0.19041.1110
            diskEncrypted: true
            osFirewall: true
            screenLockSecured: true
            browserVersion:
              minimum: 15393.27.0
            deviceEnrollmentDomain": testDomain
            builtInDnsClientEnabled": true
            chromeRemoteDesktopAppBlocked": true
            safeBrowsingProtectionLevel": true
            siteIsolationEnabled": true
            passwordProtectionWarningTrigger": PASSWORD_PROTECTION_OFF
            realtimeUrlCheckMode": true
    DeviceAssuranceMacOSWithThirdPartySignalProvidersResponse:
      x-okta-lifecycle:
        features:
          - GOOGLE_DEVICE_CONTEXT_CONNECTOR
      summary: macOS with third-party signal providers response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance macOS
        lastUpdate: '2022-01-01T00:00:00.000Z'
        createdUpdate: '2022-01-01T00:00:00.000Z'
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
            - ALL_INTERNAL_VOLUMES
        platform: MACOS
        screenLockType:
          include:
            - PASSCODE
            - BIOMETRIC
        secureHardwarePresent: true
        thirdPartySignalProviders:
          dtc:
            osVersion:
              minimum: 10.0.19041.1110
            diskEncrypted: true
            osFirewall: true
            screenLockSecured: true
            browserVersion:
              minimum: 15393.27.0
            deviceEnrollmentDomain: testDomain
            builtInDnsClientEnabled: true
            chromeRemoteDesktopAppBlocked: true
            safeBrowsingProtectionLevel: ENHANCED_PROTECTION
            siteIsolationEnabled: true
            passwordProtectionWarningTrigger: PASSWORD_PROTECTION_OFF
            realtimeUrlCheckMode: true
            keyTrustLevel: CHROME_BROWSER_HW_KEY
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
                - DELETE
                - GET
                - PUT
    DeviceAssuranceWindowsRequest:
      summary: Windows request
      value:
        name: Device Assurance Windows
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
            - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
            - PASSCODE
            - BIOMETRIC
        secureHardwarePresent: true
    DeviceAssuranceWindowsResponse:
      summary: Windows response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance Windows
        lastUpdate: '2022-01-01T00:00:00.000Z'
        createdUpdate: '2022-01-01T00:00:00.000Z'
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
            - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
            - PASSCODE
            - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
                - DELETE
                - GET
                - PUT
    DeviceAssuranceWindowsWithThirdPartySignalProvidersRequest:
      x-okta-lifecycle:
        features:
          - GOOGLE_DEVICE_CONTEXT_CONNECTOR
      summary: Windows with third-party signal providers request
      value:
        name: Device Assurance Windows
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
            - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
            - PASSCODE
            - BIOMETRIC
        secureHardwarePresent: true
        thirdPartySignalProviders:
          dtc:
            osVersion:
              minimum: 10.0.19041.1110
            diskEncrypted: true
            osFirewall: true
            screenLockSecured: true
            browserVersion:
              minimum: 15393.27.0
            deviceEnrollmentDomain: testDomain
            builtInDnsClientEnabled: true
            chromeRemoteDesktopAppBlocked: true
            safeBrowsingProtectionLevel: ENHANCED_PROTECTION
            siteIsolationEnabled: true
            passwordProtectionWarningTrigger: PASSWORD_PROTECTION_OFF
            realtimeUrlCheckMode: true
            secureBootEnabled: true
            windowsMachineDomain: testMachineDomain
            windowsUserDomain: testUserDomain
            thirdPartyBlockingEnabled: true
            crowdStrikeCustomerId: testCustomerId
            crowdStrikeAgentId": testAgentId
            keyTrustLevel: CHROME_BROWSER_HW_KEY
    DeviceAssuranceWindowsWithThirdPartySignalProvidersResponse:
      x-okta-lifecycle:
        features:
          - GOOGLE_DEVICE_CONTEXT_CONNECTOR
      summary: Windows with third-party signal providers response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance Windows
        lastUpdate: '2022-01-01T00:00:00.000Z'
        createdUpdate: '2022-01-01T00:00:00.000Z'
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
            - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
            - PASSCODE
            - BIOMETRIC
        secureHardwarePresent: true
        thirdPartySignalProviders:
          dtc:
            osVersion:
              minimum: 10.0.19041.1110
            diskEncrypted: true
            osFirewall: true
            screenLockSecured: true
            browserVersion:
              minimum: 15393.27.0
            deviceEnrollmentDomain: testDomain
            builtInDnsClientEnabled: true
            chromeRemoteDesktopAppBlocked: true
            safeBrowsingProtectionLevel: ENHANCED_PROTECTION
            siteIsolationEnabled: true
            passwordProtectionWarningTrigger: PASSWORD_PROTECTION_OFF
            realtimeUrlCheckMode: true
            secureBootEnabled: true
            windowsMachineDomain: testMachineDomain
            windowsUserDomain: testUserDomain
            thirdPartyBlockingEnabled: true
            crowdStrikeCustomerId: testCustomerId
            crowdStrikeAgentId": testAgentId
            keyTrustLevel: CHROME_BROWSER_HW_KEY
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
                - DELETE
                - GET
                - PUT
    DeviceResponse:
      value:
        id: guo8jx5vVoxfvJeLb0w4
        status: ACTIVE
        created: '2020-11-03T21:47:01.000Z'
        lastUpdated: '2020-11-03T23:46:27.000Z'
        profile:
          displayName: DESKTOP-EHAD3IE
          platform: WINDOWS
          manufacturer: International Corp
          model: VMware7,1
          osVersion: 10.0.18362
          serialNumber: 56 4d 4f 95 74 c5 d3 e7-fc 3a 57 9c c2 f8 5d ce
          udid: 954F4D56-C574-E7D3-FC3A-579CC2F85DCE
          sid: S-1-5-21-3992267483-1860856704-2413701314-500
          registered: true
          secureHardwarePresent: false
          diskEncryptionType: NONE
        resourceId: guo8jx5vVoxfvJeLb0w4
        resourceDisplayName:
          value: DESKTOP-EHAD3IE
          sensitive: false
        resourceType: UDDevice
        resourceAlternateId: null
        _links:
          suspend:
            href: https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/lifecycle/suspend
            hints:
              allow:
                - POST
          self:
            href: https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4
            hints:
              allow:
                - GET
                - PATCH
                - PUT
          users:
            href: https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/users
            hints:
              allow:
                - GET
          deactivate:
            href: https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/lifecycle/deactivate
            hints:
              allow:
                - POST
    EmailCustomizationResponse:
      value:
        language: en
        isDefault: true
        subject: Welcome to ${org.name}!
        body: <!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click <a href="${activationLink}">here</a> to activate your account.</body></html>
        id: oel11u6DqUiMbQkpl0g4
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          template:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          preview:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview
            hints:
              allow:
                - GET
          test:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test
            hints:
              allow:
                - POST
    EmailDomainResponse:
      value:
        id: OeD114iNkrcN6aR680g4
        validationStatus: NOT_STARTED
        displayName: Admin
        userName: admin
        domain: example.com
        dnsValidationRecords:
          - recordType: TXT
            fqdn: _oktaverification.example.com
            verificationValue: 759080212bda43e3bc825a7d73b4bb64
          - recordType: CNAME
            fqdn: mail.example.com
            verificationValue: u22224444.wl024.sendgrid.net
          - recordType: CNAME
            fqdn: t02._domainkey.example.com
            verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
          - recordType: CNAME
            fqdn: t022._domainkey.example.com
            verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
    EmailSettingsResponse:
      value:
        recipients: ALL_USERS
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings
            hints:
              allow:
                - GET
                - PUT
          template:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
    EmailTemplateDefaultContentResponse:
      value:
        subject: Welcome to ${org.name}!
        body: <!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click <a href="${activationLink}">here</a> to activate your account.</body></html>
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content
            hints:
              allow:
                - GET
          template:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          preview:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content/preview
            hints:
              allow:
                - GET
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorAppFeatureAPIValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: feature'
        errorLink: E0000001
        errorId: oaeZLxeiHUUQomPkM8xOqvu1A
        errorCauses:
          - errorSummary: Provisioning is not enabled for the app instance.
    ErrorCAPTCHALimitOfOne:
      value:
        errorCode: E0000165
        errorSummary: CAPTCHA count limit reached. At most one CAPTCHA instance is allowed per Org.
        errorLink: E0000165
        errorId: oaejrB1fWL1S7mc-2KcG-SOtw
        errorCauses: []
    ErrorCAPTCHAOrgWideSetting:
      value:
        errorCode: E0000149
        errorSummary: Current CAPTCHA is associated with org-wide settings, cannot be removed.
        errorLink: E0000149
        errorId: samplezsusshPdiTWiITwqBt8
        errorCauses: []
    ErrorCAPTCHAOrgWideSettingNull:
      summary: captchaId is null, but enabledPages is defined
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: captchaId'
        errorLink: E0000001
        errorId: oae-hk3rssXQmOWDRsaFfxe8A
        errorCauses:
          errorSummary: 'captchaId: Invalid CAPTCHA ID. The value of captchaId cannot be blank when enabledPages is not empty. Please resubmit with an existing CAPTCHA ID or disable CAPTCHA support on all supported pages.'
    ErrorCreateUserWithExpiredPasswordWithNullPassword:
      value:
        errorCode: E0000124
        errorSummary: Could not create user. To create a user and expire their password immediately, a password must be specified
        errorLink: E0000124
        errorId: oaeXxuZgXBySvqi1FvtkwoYCA
        errorCauses:
          - errorSummary: Could not create user. To create a user and expire their password immediately, a password must be specified
    ErrorCreateUserWithExpiredPasswordWithoutActivation:
      value:
        errorCode: E0000125
        errorSummary: Could not create user. To create a user and expire their password immediately, "activate" must be true
        errorLink: E0000125
        errorId: oaeDd77L9R-TJaD7j_rXsQ31w
        errorCauses:
          - errorSummary: Could not create user. To create a user and expire their password immediately, "activate" must be true
    ErrorCreateUserWithTooManyManyGroupsResponse:
      value:
        errorCode: E0000093
        errorSummary: Target count limit exceeded
        errorLink: E0000093
        errorId: oaePVSLIYnIQsC0B-ptBIllVA
        errorCauses:
          - errorSummary: The number of group targets is too large.
    ErrorDeleteBrandAssociatedWithDomain:
      value:
        errorCode: E0000201
        errorSummary: A brand associated with a domain cannot be deleted
        errorLink: E0000201
        errorId: oaeAdRqprFuTyKokyYPbURJkA
        errorCauses: []
    ErrorDeleteDefaultBrand:
      value:
        errorCode: E0000200
        errorSummary: A default brand cannot be deleted
        errorLink: E0000200
        errorId: oaeAdRqprFuTyKokyYPbURJkA
        errorCauses: []
    ErrorDeviceAssuranceInUse:
      summary: Cannot delete device assurance policy in use by authentication policies
      value:
        errorSummary: Device assurance is in use and cannot be deleted.
        errorId: oaenwA1ra80S9W-pvbh4m6haA
        errorCauses: []
    ErrorEmailCustomizationCannotClearDefault:
      value:
        errorCode: E0000185
        errorSummary: The isDefault parameter of the default email template customization can't be set to false.
        errorLink: E0000185
        errorId: oaejrB1fWL1S7mc-2KcG-SOtw
        errorCauses: []
    ErrorEmailCustomizationCannotDeleteDefault:
      value:
        errorCode: E0000184
        errorSummary: A default email template customization can't be deleted.
        errorLink: E0000184
        errorId: oaeAdRqprFuTyKokyYPbURJkA
        errorCauses: []
    ErrorEmailCustomizationDefaultAlreadyExists:
      value:
        errorCode: E0000182
        errorSummary: A default email template customization already exists.
        errorLink: E0000182
        errorId: oaeXYwTiMvASsC3O4HCzjFaCA
        errorCauses: []
    ErrorEmailCustomizationLanguageAlreadyExists:
      value:
        errorCode: E0000183
        errorSummary: An email template customization for that language already exists.
        errorLink: E0000183
        errorId: oaeUcGELffqRay0u1OPdnPypw
        errorCauses: []
    ErrorEmailDomainAlreadyExists:
      value:
        errorCode: E0000197
        errorSummary: Email domain already exists.
        errorLink: E0000197
        errorId: oaeEdRqprFuTyKokyYPbURJkA
        errorCauses: []
    ErrorEmailDomainInUse:
      value:
        errorCode: E0000216
        errorSummary: Email domain can't be deleted due to mail provider restrictions.
        errorLink: E0000216
        errorId: oaeEdRqprFuTyKokyYPbURJkB
        errorCauses: []
    ErrorEmailDomainInvalidStatus:
      value:
        errorCode: E0000217
        errorSummary: Invalid status. Can't validate email domain with current status.
        errorLink: E0000217
        errorId: oaeEdRqprFuTyKokyYPbURJkD
        errorCauses: []
    ErrorEmailDomainNotVerified:
      value:
        errorCode: E0000218
        errorSummary: Email domain couldn't be verified by mail provider.
        errorLink: E0000218
        errorId: oaeEdRqprFuTyKokyYPbURJkC
        errorCauses: []
    ErrorInvalidEmailTemplateRecipients:
      value:
        errorCode: E0000189
        errorSummary: This template does not support the recipients value.
        errorLink: E0000189
        errorId: oae8L1-UkcNTeGi5xVQ28_lww
        errorCauses: []
    ErrorInvalidTokenProvided:
      summary: Invalid Token Provided
      value:
        errorCode: E0000011
        errorSummary: Invalid token provided
        errorLink: E0000011
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorMissingRequiredParameter:
      summary: Missing Required Parameter
      value:
        errorCode: E0000028
        errorSummary: The request is missing a required parameter.
        errorLink: E0000028
        errorId: sampleiCF-l7mr9XqM1NQ
        errorCauses: []
    ErrorPushProviderUsedByCustomAppAuthenticator:
      value:
        errorCode: E0000187
        errorSummary: Cannot delete push provider because it is being used by a custom app authenticator.
        errorLink: E0000187
        errorId: oaenwA1ra80S9W-pvbh4m6haA
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: You exceeded the maximum number of requests. Try again in a while.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    GetBrandResponse:
      value:
        id: bnd114iNkrcN6aR680g4
        removePoweredByOkta: false
        customPrivacyPolicyUrl: null
        name: Okta Default
        isDefault: true
        locale: en
        emailDomainId: OeD114iNkrcN6aR680g4
        defaultApp:
          appInstanceId: 0oa114iNkrcN6aR680g4
          appLinkName: null
          classicApplicationUri: null
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          themes:
            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/themes
            hints:
              allow:
                - GET
    GetEmailTemplateResponse:
      value:
        name: UserActivation
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          settings:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings
            hints:
              allow:
                - GET
                - PUT
          defaultContent:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content
            hints:
              allow:
                - GET
          customizations:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations
            hints:
              allow:
                - GET
                - POST
                - DELETE
          test:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test
            hints:
              allow:
                - POST
    GetUserResponse:
      summary: Retrieve a user type response
      value:
        id: otyfnly5cQjJT9PnR0g4
        displayName: New User Type
        name: newUserType
        description: A new custom user type
        createdBy: sprz9fj1ycBcsgopy1d6
        lastUpdatedBy: sprz9fj1ycBcsgopy1d6
        created: '2021-07-05T20:40:38.000Z'
        lastUpdated: '2021-07-05T20:40:38.000Z'
        default: false
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6
          schema:
            href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6
    GroupSchemaAddRequest:
      value:
        definitions:
          custom:
            id: '#custom'
            type: object
            properties:
              groupContact:
                title: Group administrative contact
                description: Group administrative contact
                type: string
                required: false
                minLength: 1
                maxLength: 20
                permissions:
                  - principal: SELF
                    action: READ_WRITE
            required: []
    GroupSchemaResponse:
      value:
        $schema: http://json-schema.org/draft-04/schema#
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/meta/schemas/group/default
            method: GET
            rel: self
        created: '2021-01-30T00:18:24.000Z'
        definitions:
          base:
            id: '#base'
            properties: {}
            required:
              - name
            type: object
          custom:
            id: '#custom'
            properties:
              groupContact:
                description: Group administrative contact
                master:
                  type: PROFILE_MASTER
                mutability: READ_WRITE
                permissions:
                  - action: READ_WRITE
                    principal: SELF
                scope: NONE
                title: Group administrative contact
                type: string
            required: []
            type: object
        description: Okta group profile template
        id: https://{yourOktaDomain}/meta/schemas/group/default
        lastUpdated: '2021-02-25T23:05:31.000Z'
        name: group
        properties:
          profile:
            allOf:
              - $ref: '#/definitions/custom'
              - $ref: '#/definitions/base'
        title: Okta group
        type: object
    ListAllKeysResponse:
      summary: List All Keys response example
      value:
        - id: HKY1i2htmXF5UNQhL0g4
          keyId: bb5bed7d-6e4d-488f-9c86-59b93a2bb3fb
          name: My new key
          created: '2022-08-22T16:34:33.000Z'
          lastUpdated: '2022-08-22T16:34:33.000Z'
          isUsed: 'true'
        - id: HKY1p7jWLndGQV9M60g4
          keyId: 7fbc27fd-e3df-4522-86bf-1930110256ad
          name: Test key
          created: '2022-08-31T18:09:58.000Z'
          lastUpdated: '2022-08-31T18:09:58.000Z'
          isUsed: 'false'
    ListBrandsResponse:
      value:
        - id: bnd114iNkrcN6aR680g4
          name: Okta Default
          isDefault: true
          removePoweredByOkta: false
          customPrivacyPolicyUrl: null
          locale: en
          emailDomainId: OeD114iNkrcN6aR680g4
          defaultApp:
            appInstanceId: 0oa114iNkrcN6aR680g4
            appLinkName: null
            classicApplicationUri: null
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4
              hints:
                allow:
                  - GET
                  - PUT
                  - DELETE
            themes:
              href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/themes
              hints:
                allow:
                  - GET
    ListEmailCustomizationResponse:
      value:
        - language: en
          isDefault: true
          subject: Welcome to ${org.name}!
          body: <!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click <a href="${activationLink}">here</a> to activate your account.</body></html>
          id: oel11u6DqUiMbQkpl0g4
          created: 2021-11-09T20:38:10.000Z
          lastUpdated: 2021-11-11T20:38:10.000Z
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4
              hints:
                allow:
                  - GET
                  - PUT
                  - DELETE
            template:
              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
              hints:
                allow:
                  - GET
            preview:
              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview
              hints:
                allow:
                  - GET
            test:
              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test
              hints:
                allow:
                  - POST
    ListEmailTemplateResponse:
      value:
        - name: UserActivation
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
              hints:
                allow:
                  - GET
            settings:
              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings
              hints:
                allow:
                  - GET
                  - PUT
            defaultContent:
              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content
              hints:
                allow:
                  - GET
            customizations:
              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations
              hints:
                allow:
                  - GET
                  - POST
                  - DELETE
            test:
              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test
              hints:
                allow:
                  - POST
    ListMappingsResponse:
      summary: List all Profile Mappings response
      value:
        - id: prm1k47ghydIQOTBW0g4
          source:
            id: otysbePhQ3yqt4cVv0g3
            name: user
            type: user
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3
              schema:
                href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3
          target:
            id: 0oa1qmn4LZQQEH0wZ0g4
            name: okta_org2org
            type: appuser
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4
              schema:
                href: https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4
    ListRealmAwareUsersResponse:
      summary: List all Users
      value:
        - id: 00u118oQYT4TBGuay0g4
          status: ACTIVE
          created: 2022-04-04T15:56:05.000Z
          activated: null
          statusChanged: null
          lastLogin: 2022-05-04T19:50:52.000Z
          lastUpdated: 2022-05-05T18:15:44.000Z
          passwordChanged: 2022-04-04T16:00:22.000Z
          type:
            id: oty1162QAr8hJjTaq0g4
          profile:
            firstName: Alice
            lastName: Smith
            mobilePhone: null
            secondEmail: null
            login: alice.smith@example.com
            email: alice.smith@example.com
          realmId: guo1afiNtSnZYILxO0g4
          credentials:
            password: {}
            provider:
              type: OKTA
              name: OKTA
          _links:
            self:
              href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4
    ListRealmsResponse:
      value:
        - id: guox9jQ16k9V8IFEL0g3
          created: 2022-04-04T15:56:05.000Z
          lastUpdated: 2022-05-05T18:15:44.000Z
          isDefault: false
          profile:
            name: Car Co
          _links:
            self:
              rel: self
              href: http://your-subdomain.okta.com/api/v1/realms/guox9jQ16k9V8IFEL0g3
              method: GET
    ListRiskProviderResponse:
      summary: List Risk Provider response example
      value:
        - id: 00rp12r4skkjkjgsn
          action: log_only
          name: Risk-Partner-X
          clientId: 00ckjsfgjkdkjdkkljjsd
          created: '2021-01-05 22:18:30'
          lastUpdated: '2021-01-05 22:18:30'
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/risk/providers/00rp12r4skkjkjgsn
              hints:
                allow:
                  - GET
                  - PUT
    ListSessionsResponse:
      value:
        - id: uij4ri8ZLk0ywyqxB0g4
          identitySourceId: 0oa3l6l6WK6h0R0QW0g4
          status: CREATED
          importType: INCREMENTAL
          created: 2022-04-04T15:56:05.000Z
          lastUpdated: 2022-05-05T18:15:44.000Z
    ListUISchemaResponse:
      summary: Lists all UI Schemas response
      value:
        - id: uis4a7liocgcRgcxZ0g7
          uiSchema:
            type: Group
            label: Sign in
            buttonLabel: Submit
            elements:
              - type: Control
                scope: '#/properties/firstName'
                label: First name
                options:
                  format: text
              - type: Control
                scope: '#/properties/lastName'
                label: Last name
                options:
                  format: text
              - type: Control
                scope: '#/properties/email'
                label: Email
                options:
                  format: text
              - type: Control
                scope: '#/properties/countryCode'
                label: Country code
                options:
                  format: select
              - type: Control
                scope: '#/properties/bool2'
                label: bool2
                options:
                  format: checkbox
              - type: Control
                scope: '#/properties/date'
                label: date
                options:
                  format: text
              - type: Control
                scope: '#/properties/enum'
                label: enum
                options:
                  format: radio
          created: '2022-07-25T12:56:31.000Z'
          lastUpdated: '2022-07-26T11:53:59.000Z'
          _links:
            self:
              href: https://example.com/api/v1/meta/uischemas/uis4a7liocgcRgcxZ0g7
              hints:
                allow:
                  - GET
                  - PUT
                  - DELETE
        - id: uis4abjqkkKXVPGAU0g7
          uiSchema:
            type: Group
            label: Sign in 2
            buttonLabel: Submit
            elements:
              - type: Control
                scope: '#/properties/firstName'
                label: First name
                options:
                  format: text
              - type: Control
                scope: '#/properties/lastName'
                label: Last name
                options:
                  format: text
              - type: Control
                scope: '#/properties/email'
                label: Email
                options:
                  format: text
              - type: Control
                scope: '#/properties/countryCode'
                label: Country code
                options:
                  format: select
              - type: Control
                scope: '#/properties/bool2'
                label: bool2
                options:
                  format: checkbox
              - type: Control
                scope: '#/properties/date'
                label: date
              - type: Control
                scope: '#/properties/enum'
                label: enum
                options:
                  format: radio
          created: '2022-07-25T12:56:31.000Z'
          lastUpdated: '2022-07-26T11:53:59.000Z'
          _links:
            self:
              href: https://example.com/api/v1/meta/uischemas/uis4abjqkkKXVPGAU0g7
              hints:
                allow:
                  - GET
                  - PUT
                  - DELETE
    ListUserBlocksAnyDevicesResponse:
      value:
        - type: DEVICE_BASED
          appliesTo: ANY_DEVICES
    ListUserBlocksUnknownDevicesResponse:
      value:
        - type: DEVICE_BASED
          appliesTo: UNKNOWN_DEVICES
    ListUsersResponse:
      summary: List all Users
      value:
        - id: 00u118oQYT4TBTemp0g4
          status: ACTIVE
          created: 2022-04-04T15:56:05.000Z
          activated: null
          statusChanged: null
          lastLogin: 2022-05-04T19:50:52.000Z
          lastUpdated: 2022-05-05T18:15:44.000Z
          passwordChanged: 2022-04-04T16:00:22.000Z
          type:
            id: oty1162QAr8hJjTaq0g4
          profile:
            firstName: Alice
            lastName: Smith
            mobilePhone: null
            secondEmail: null
            login: alice.smith@example.com
            email: alice.smith@example.com
          credentials:
            password: {}
            provider:
              type: OKTA
              name: OKTA
          _links:
            self:
              href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4
    ListsAllUserTypes:
      summary: Lists all user types
      value:
        - id: otyfnly5cQjJT9PnR0g4
          displayName: New User Type
          name: newUserType
          description: A new custom user type
          createdBy: sprz9fj1ycBcsgopy1d6
          lastUpdatedBy: sprz9fj1ycBcsgopy1d6
          created: '2021-07-05T20:40:38.000Z'
          lastUpdated: '2021-07-05T20:40:38.000Z'
          default: false
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6
            schema:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6
        - id: otyz9fj2jMiRBC1ZT1d6
          displayName: User
          name: user
          description: Okta user profile template with default permission settings
          createdBy: sprz9fj1ycBcsgopy1d6
          lastUpdatedBy: sprz9fj1ycBcsgopy1d6
          created: '2021-07-05T20:40:38.000Z'
          lastUpdated: '2021-07-05T20:40:38.000Z'
          default: true
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6
            schema:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6
    ListsOwnerOneResponse:
      summary: Lists a response with one owner
      value:
        - id: 00g1gae1k0znUcLuU0h8
          type: GROUP
          resolved: true
          originId: 'null'
          originType: OKTA_DIRECTORY
          displayName: Product & Engineering
          lastUpdated: '2023-03-29 18:18:37.0'
    ListsOwnersMultipleResponse:
      summary: Lists a response with multiple owners
      value:
        - id: 00u1cmbqjkkmFXeqb0h8
          type: USER
          resolved: true
          originId: 'null'
          originType: OKTA_DIRECTORY
          displayName: Mabel Mora
          lastUpdated: 2023-03-29T18:30:58.000Z
        - id: 00u1cmc52x5B86cnZ0h8
          type: USER
          resolved: true
          originId: 'null'
          originType: OKTA_DIRECTORY
          displayName: Cinda Canning
          lastUpdated: 2023-03-29T18:30:55.000Z
    LogStreamActivateResponse:
      summary: Activate Log Stream response
      value:
        id: 0oa1orqUGCIoCGNxf0g4
        type: aws_eventbridge
        name: Example AWS EventBridge
        lastUpdated: '2023-03-24T21:22:43.000Z'
        created: '2023-03-24T21:02:43.000Z'
        status: ACTIVE
        settings:
          accountId: '123456789012'
          eventSourceName: your-event-source-name
          region: us-east-2
        _links:
          self:
            href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4
            method: GET
          deactivate:
            href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate
            method: POST
    LogStreamDeactivateResponse:
      summary: Deactivate Log Stream response
      value:
        id: 0oa7agphh5FT7H521d7
        type: splunk_cloud_logstreaming
        name: Splunk Cloud Example
        lastUpdated: '2023-03-24T21:23:00.000Z'
        created: '2023-03-24T21:15:13.000Z'
        status: INACTIVE
        settings:
          edition: aws
          host: okexample.splunkcloud.com
        _links:
          self:
            href: http://{yourOktaDomain}/api/v1/logStreams/0oa7agphh5FT7H521d7
            method: GET
          activate:
            href: http://{yourOktaDomain}/api/v1/logStreams/0oa7agphh5FT7H521d7/lifecycle/activate
            method: POST
    LogStreamGetAllResponse:
      summary: Lists all Log Streams
      value:
        - id: 0oa1orqUGCIoCGNxf0g4
          type: aws_eventbridge
          name: Example AWS EventBridge
          lastUpdated: '2023-03-24T21:02:43.000Z'
          created: '2023-03-24T21:02:43.000Z'
          status: ACTIVE
          settings:
            accountId: '123456789012'
            eventSourceName: your-event-source-name
            region: us-east-2
          _links:
            self:
              href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4
              method: GET
            deactivate:
              href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate
              method: POST
    LogStreamPostRequest:
      summary: Create an AWS EventBridge Log Stream
      value:
        type: aws_eventbridge
        name: Example AWS EventBridge
        settings:
          eventSourceName: your-event-source-name
          accountId: '123456789012'
          region: us-east-2
    LogStreamPostResponse:
      summary: AWS EventBridge Log Stream response
      value:
        id: 0oa1orqUGCIoCGNxf0g4
        type: aws_eventbridge
        name: Example AWS EventBridge
        lastUpdated: '2023-03-24T21:02:43.000Z'
        created: '2023-03-24T21:02:43.000Z'
        status: ACTIVE
        settings:
          accountId: '123456789012'
          eventSourceName: your-event-source-name
          region: us-east-2
        _links:
          self:
            href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4
            method: GET
          deactivate:
            href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate
            method: POST
    LogStreamPutRequest:
      summary: Replace AWS EventBridge name
      value:
        type: aws_eventbridge
        name: Updated AWS EventBridge
        settings:
          eventSourceName: your-event-source-name
          accountId: '123456789012'
          region: us-east-2
    LogStreamPutResponse:
      summary: Replace AWS EventBridge name response
      value:
        id: 0oa1orqUGCIoCGNxf0g4
        type: aws_eventbridge
        name: Updated AWS EventBridge
        lastUpdated: '2023-03-24T21:12:43.000Z'
        created: '2023-03-24T21:02:43.000Z'
        status: ACTIVE
        settings:
          accountId: '123456789012'
          eventSourceName: your-event-source-name
          region: us-east-2
        _links:
          self:
            href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4
            method: GET
          deactivate:
            href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate
            method: POST
    LogStreamSchemaAws:
      value: &ref_4
        $schema: https://json-schema.org/draft/2020-12/schema
        $id: http://{yourOktaDomain}/api/v1/meta/schemas/logStream/aws_eventbridge
        title: AWS EventBridge
        type: object
        properties:
          settings:
            description: Configuration properties specific to AWS EventBridge
            type: object
            properties:
              accountId:
                title: AWS Account ID
                description: Your Amazon AWS Account ID.
                type: string
                writeOnce: true
                pattern: ^\d{12}$
              eventSourceName:
                title: AWS Event Source Name
                description: An alphanumeric name (no spaces) to identify this event source in AWS EventBridge.
                type: string
                writeOnce: true
                pattern: ^[\.\-_A-Za-z0-9]{1,75}$
              region:
                title: AWS Region
                description: The destination AWS region for your system log events.
                type: string
                writeOnce: true
                oneOf:
                  - title: US East (Ohio)
                    const: us-east-2
                  - title: US East (N. Virginia)
                    const: us-east-1
                  - title: US West (N. California)
                    const: us-west-1
                  - title: US West (Oregon)
                    const: us-west-2
                  - title: Canada (Central)
                    const: ca-central-1
                  - title: Europe (Frankfurt)
                    const: eu-central-1
                  - title: Europe (Ireland)
                    const: eu-west-1
                  - title: Europe (London)
                    const: eu-west-2
                  - title: Europe (Paris)
                    const: eu-west-3
                  - title: Europe (Milan)
                    const: eu-south-1
                  - title: Europe (Stockholm)
                    const: eu-north-1
            required:
              - eventSourceName
              - accountId
              - region
            errorMessage:
              properties:
                accountId: Account number must be 12 digits.
                eventSourceName: Event source name can use numbers, letters, the symbols ".", "-" or "_". It must use fewer than 76 characters.
          name:
            title: Name
            description: A name for this log stream in Okta
            type: string
            writeOnce: false
            pattern: ^.{1,100}$
        required:
          - name
          - settings
        errorMessage:
          properties:
            name: Name can't exceed 100 characters.
    LogStreamSchemaList:
      value:
        - *ref_4
        - &ref_5
          $schema: https://json-schema.org/draft/2020-12/schema
          $id: http://{yourOktaDomain}/api/v1/meta/schemas/logStream/splunk_cloud_logstreaming
          title: Splunk Cloud
          type: object
          properties:
            settings:
              description: Configuration properties specific to Splunk Cloud
              type: object
              properties:
                host:
                  title: Host
                  description: 'The domain for your Splunk Cloud instance without http or https. For example: acme.splunkcloud.com'
                  type: string
                  writeOnce: false
                  pattern: ^([a-z0-9]+(-[a-z0-9]+)*){1,100}\.splunkcloud(gc|fed)?\.com$
                token:
                  title: HEC Token
                  description: The token from your Splunk Cloud HTTP Event Collector (HEC).
                  type: string
                  writeOnce: false
                  pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
              required:
                - host
                - token
              errorMessage:
                properties:
                  host: 'Host should be a domain without http or https. For example: acme.splunkcloud.com'
            name:
              title: Name
              description: A name for this log stream in Okta
              type: string
              writeOnce: false
              pattern: ^.{1,100}$
          required:
            - name
            - settings
          errorMessage:
            properties:
              name: Name can't exceed 100 characters.
    LogStreamSchemaSplunk:
      value: *ref_5
    OrgCAPTCHASettingsConfigured:
      summary: Org-wide Captcha Settings are configured
      value:
        captchaId: abcd4567
        enabledPages:
          - SSR
          - SIGN_IN
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd4567
            hints:
              allow:
                - GET
                - POST
                - PUT
                - DELETE
    OrgCAPTCHASettingsDisable:
      summary: Disable Org-wide Captcha Settings
      value:
        captchaId: 'null'
        enabledPages: 'null'
    OrgCAPTCHASettingsDisabled:
      summary: Disabled Org-wide Captcha Settings
      value:
        captchaId: 'null'
        enabledPages: '[]'
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/
            hints:
              allow:
                - GET
                - PUT
    OrgCAPTCHASettingsEmpty:
      summary: Org-wide Captcha Settings aren't configured
      value:
        captchaId: null
        enabledPages: []
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas
            hints:
              allow:
                - GET
                - POST
                - PUT
                - DELETE
    OrgCAPTCHASettingsUpdate:
      summary: Update Org-wide Captcha Settings
      value:
        captchaId: abcd4567
        enabledPages:
          - SSR
          - SIGN_IN
    OrgCAPTCHASettingsUpdated:
      summary: Updated Org-wide Captcha Settings
      value:
        captchaId: abcd4567
        enabledPages:
          - SSR
          - SIGN_IN
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd4567
            hints:
              allow:
                - GET
                - POST
                - PUT
                - DELETE
    PerClientRateLimitSettingsEnforceDefault:
      value:
        defaultMode: ENFORCE
    PerClientRateLimitSettingsEnforceDefaultWithOverrides:
      value:
        defaultMode: ENFORCE
        useCaseModeOverrides:
          OAUTH2_AUTHORIZE: PREVIEW
          OIE_APP_INTENT: DISABLE
    PerClientRateLimitSettingsPreviewDefaultWithOverrides:
      value:
        defaultMode: PREVIEW
        useCaseModeOverrides:
          LOGIN_PAGE: ENFORCE
    PermissionResponse:
      value:
        label: okta.users.manage
        created: '2021-02-06T16:20:57.000Z'
        lastUpdated: '2021-02-06T16:20:57.000Z'
        _links:
          role:
            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
          self:
            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.manage
    PermissionResponseWithConditions:
      value:
        label: okta.users.read
        conditions:
          include:
            okta:ResourceAttribute/User/Profile:
              - city
              - state
              - zipCode
        created: '2021-02-06T16:20:57.000Z'
        lastUpdated: '2021-02-06T16:20:57.000Z'
        _links:
          role:
            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
          self:
            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.read
    PermissionsResponse:
      value:
        permissions:
          - label: okta.users.create
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              role:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
              self:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.create
          - label: okta.users.read
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              role:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
              self:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.read
          - label: okta.groups.read
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              role:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
              self:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.groups.read
          - label: okta.users.userprofile.manage
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              role:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
              self:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.userprofile.manage
    PreviewEmailCustomizationResponse:
      value:
        subject: Welcome to Okta!
        body: <!DOCTYPE html><html><body><p>Hello, John. Click <a href="https://{yourOktaDomain}/...">here</a> to activate your account.</body></html>
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel2kk1zYJBJbeaGo0g4/preview
            hints:
              allow:
                - GET
          template:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          test:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test
            hints:
              allow:
                - POST
    PreviewEmailTemplateDefaultContentResponse:
      value:
        subject: Welcome to Okta!
        body: <!DOCTYPE html><html><body><p>Hello, John. Click <a href="https://{yourOktaDomain}/...">here</a> to activate your account.</body></html>
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content/preview
            hints:
              allow:
                - GET
          template:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          defaultContent:
            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test/default-content
            hints:
              allow:
                - POST
    PrincipalRateLimitEntityRequestEmptyPercentages:
      value:
        principalId: token1234
        principalType: SSWS_TOKEN
    PrincipalRateLimitEntityRequestSSWSToken:
      value:
        principalId: token1234
        principalType: SSWS_TOKEN
        defaultPercentage: 50
        defaultConcurrencyPercentage: 75
    PrincipalRateLimitEntityResponseSSWSToken:
      value:
        id: abcd1234
        orgId: org1234
        principalId: token1234
        principalType: SSWS_TOKEN
        defaultPercentage: 50
        defaultConcurrencyPercentage: 75
        createdDate: '2022-05-19T20:05:32.720Z'
        createdBy: user1234
        lastUpdate: '2022-05-20T21:13:07.410Z'
        lastUpdatedBy: user4321
    ProvisioningConnectionOauthRequestEx:
      summary: Provisioning Connection with OAuth 2.0
      value:
        profile:
          authScheme: OAUTH2
          clientId: 0oa2h6su6bVFyJzIf1d7
    ProvisioningConnectionOauthResponseEx:
      summary: Provisioning Connection with OAuth 2.0
      value:
        authScheme: OAUTH2
        status: ENABLED
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/apps/${appId}/connections/default
            hints:
              allow:
                - GET
                - POST
          deactivate:
            href: https://{yourOktaDomain}/api/v1/apps/${appId}/connections/default/lifecycle/deactivate
            hints:
              allow:
                - POST
    ProvisioningConnectionTokenRequestEx:
      summary: Provisioning Connection with token
      value:
        profile:
          authScheme: TOKEN
          token: 00NgAPZqUVy8cX9ehNzzahEE5b-On9sImTcInvWp-x
    ProvisioningConnectionTokenResponseEx:
      summary: Provisioning Connection with token
      value:
        authScheme: TOKEN
        status: ENABLED
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/apps/${appId}/connections/default
            hints:
              allow:
                - GET
                - POST
          deactivate:
            href: https://{yourOktaDomain}/api/v1/apps/${appId}/connections/default/lifecycle/deactivate
            hints:
              allow:
                - POST
    PushProviderAPNsRequest:
      value:
        name: APNs Example
        providerType: APNS
        configuration:
          keyId: KEY_ID
          teamId: TEAM_ID
          tokenSigningKey: '-----BEGIN PRIVATE KEY-----\nPRIVATE_KEY\n-----END PRIVATE KEY-----\n'
          fileName: fileName.p8
    PushProviderAPNsResponse:
      value:
        id: ppctekcmngGaqeiBxB0g4
        name: APNs Example
        providerType: APNS
        lastUpdatedDate: 2022-01-01T00:00:00.000Z
        configuration:
          keyId: KEY_ID
          teamId: TEAM_ID
          fileName: fileName.p8
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/push-providers/ppctekcmngGaqeiBxB0g4
            hints:
              allow:
                - DELETE
                - GET
                - PUT
    PushProviderFCMRequest:
      value:
        name: FCM Example
        providerType: FCM
        configuration:
          serviceAccountJson:
            type: service_account
            project_id: PROJECT_ID
            private_key_id: KEY_ID
            private_key: '-----BEGIN PRIVATE KEY-----\nPRIVATE_KEY\n-----END PRIVATE KEY-----\n'
            client_email: SERVICE_ACCOUNT_EMAIL
            client_id: CLIENT_ID
            auth_uri: https://accounts.google.com/o/oauth2/auth
            token_uri: https://accounts.google.com/o/oauth2/token
            auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
            client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/SERVICE_ACCOUNT_EMAIL
          fileName: fileName.json
    PushProviderFCMResponse:
      value:
        id: ppctekcmngGaqeiBxB0g4
        name: FCM Example
        providerType: FCM
        lastUpdatedDate: 2022-01-01T00:00:00.000Z
        configuration:
          projectId: PROJECT_ID
          fileName: fileName.p8
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/push-providers/ppctekcmngGaqeiBxB0g4
            hints:
              allow:
                - DELETE
                - GET
                - PUT
    RateLimitAdminNotificationsDisabled:
      value:
        notificationsEnabled: false
    RateLimitAdminNotificationsEnabled:
      value:
        notificationsEnabled: true
    RateLimitWarningThresholdValidExample:
      value:
        warningThreshold: 66
    RealmResponse:
      value:
        id: guox9jQ16k9V8IFEL0g3
        created: 2022-04-04T15:56:05.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
        isDefault: false
        profile:
          name: Car Co
        _links:
          self:
            rel: self
            href: http://your-subdomain.okta.com/api/v1/realms/guox9jQ16k9V8IFEL0g3
            method: GET
    RemoveMappingBody:
      summary: Update an existing profile mapping by removing one or more properties
      value:
        properties:
          nickName:
            expression: null
            pushStatus: null
    RemoveMappingResponse:
      summary: Update an existing profile mapping by removing one or more properties
      value:
        id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3
            schema:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4
            schema:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default
        properties:
          fullName:
            expression: user.firstName + user.lastName
            pushStatus: PUSH
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4
    ReplaceKeyResponse:
      summary: Replace a key response example
      value:
        id: HKY1p7jWLndGQV9M60g4
        keyId: 7fbc27fd-e3df-4522-86bf-1930110256ad
        name: My updated new key
        created: '2022-08-31T18:09:58.000Z'
        lastUpdated: '2022-08-31T18:16:59.000Z'
        isUsed: 'false'
    ReplaceNetworkZone:
      summary: Replace a Network Zone
      value:
        type: IP
        id: nzovw2rFz2YoqmvwZ0g9
        name: UpdatedNetZone
        status: ACTIVE
        usage: POLICY
        gateways:
          - type: CIDR
            value: 10.2.3.4/24
          - type: CIDR
            value: 12.2.3.4/24
          - type: RANGE
            value: 13.4.5.6-13.4.5.8
          - type: CIDR
            value: 14.2.3.4/24
        proxies:
          - type: CIDR
            value: 12.2.3.4/24
          - type: CIDR
            value: 13.3.4.5/24
          - type: RANGE
            value: 14.4.5.6-14.4.5.8
          - type: RANGE
            value: 15.5.6.7/24-15.5.6.9
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/zones/nzovw2rFz2YoqmvwZ0g9
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          deactivate:
            href: https://{yourOktaDomain}/api/v1/zones/nzovw2rFz2YoqmvwZ0g9/lifecycle/deactivate
            hints:
              allow:
                - POST
    ReplaceNetworkZoneResponse:
      summary: Replace Network Zone response
      value:
        type: IP
        id: nzovw2rFz2YoqmvwZ0g3
        name: UpdatedNetZone
        status: ACTIVE
        usage: POLICY
        created: '2019-01-24T19:53:28.000Z'
        lastUpdated: '2019-02-24T19:53:28.000Z'
        system: false
        gateways:
          - type: CIDR
            value: 10.2.3.4/24
          - type: CIDR
            value: 12.2.3.4/24
          - type: RANGE
            value: 13.4.5.6-13.4.5.8
          - type: CIDR
            value: 14.2.3.4/24
        proxies:
          - type: CIDR
            value: 12.2.3.4/24
          - type: CIDR
            value: 13.3.4.5/24
          - type: RANGE
            value: 14.4.5.6-14.4.5.8
          - type: RANGE
            value: 15.5.6.7/24-15.5.6.9
    ReplaceUserTypePutRequest:
      summary: Replace user type request
      value:
        displayName: Replacement Display Name
        description: Replacement description
        name: newUserType
    ReplaceUserTypePutResponse:
      summary: Replace user type response
      value:
        id: otyfnly5cQjJT9PnR0g4
        displayName: Replacement Display Name
        name: newUserType
        description: Replacement description
        createdBy: sprz9fj1ycBcsgopy1d6
        lastUpdatedBy: sprz9fj1ycBcsgopy1d6
        created: '2021-07-05T20:40:38.000Z'
        lastUpdated: '2021-07-05T20:40:38.000Z'
        default: false
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6
          schema:
            href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6
    ResourceSetBindingAddMembersRequestExample:
      value:
        additions:
          - https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3
          - https://{yourOktaDomain}/api/v1/users/00u67DU2qNCjNZYO0g3
    ResourceSetBindingCreateRequestExample:
      value:
        role: cr0Yq6IJxGIr0ouum0g3
        members:
          - https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3
    ResourceSetBindingMemberResponse:
      value:
        id: irb1qe6PGuMc7Oh8N0g4
        created: '2021-02-06T16:20:57.000Z'
        lastUpdated: '2021-02-06T16:20:57.000Z'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/users/00uuk41Hjga5qGfQ30g3
    ResourceSetBindingMembersResponse:
      value:
        members:
          - id: irb1qe6PGuMc7Oh8N0g4
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/users/00uuk41Hjga5qGfQ30g3
          - id: irb1q92TFAHzySt3x0g4
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3
        _links:
          binding:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3
          next:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3/members?after=0ouRq6IJmGIr3ouum0g3
    ResourceSetBindingResponseExample:
      value:
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3
          bindings:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings
          resource-set:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
    ResourceSetBindingResponseWithIdExample:
      value:
        id: cr0Yq6IJxGIr0ouum0g3
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3
          bindings:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings
          resource-set:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
    ResourceSetBindingsResponse:
      value:
        roles:
          - id: cr0WxyzJxGIr0ouum0g4
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0WxyzJxGIr0ouum0g4
              members:
                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0WxyzJxGIr0ouum0g4/members
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings
          resource-set:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
          next:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings?after=cr0WxyzJxGIr0ouum0g4
    ResourceSetRequest:
      value:
        label: SF-IT-People
        description: People in the IT department of San Francisco
        resources:
          - https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3
          - https://{yourOktaDomain}/api/v1/groups/00gu67DU2qNCjNZYO0g3/users
          - https://{yourOktaDomain}/api/v1/users
    ResourceSetResourcePatchRequestExample:
      value:
        additions:
          - https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3
          - https://{yourOktaDomain}/api/v1/groups/00gu67DU2qNCjNZYO0g3/users
    ResourceSetResourcesResponse:
      value:
        resources:
          - id: ire106sQKoHoXXsAe0g4
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3
          - id: ire106riDrTYl4qA70g4
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/groups/00gu67DU2qNCjNZYO0g3/users
          - id: irezvo4AwE2ngpMw40g3
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              users:
                href: https://{yourOktaDomain}/api/v1/users
              groups:
                href: https://{yourOktaDomain}/api/v1/groups
        _links:
          next:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources?after=irezvn1ZZxLSIBM2J0g3
          resource-set:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
    ResourceSetResponse:
      value:
        id: iamoJDFKaJxGIr0oamd9g
        label: SF-IT-People
        description: People in the IT department of San Francisco
        created: '2021-02-06T16:20:57.000Z'
        lastUpdated: '2021-02-06T16:20:57.000Z'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
          resources:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources
          bindings:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings
    ResourceSetsResponse:
      value:
        resource-sets:
          - id: iamoJDFKaJxGIr0oamd9g
            label: SF-IT-1
            description: First San Francisco IT Resource Set
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
              resources:
                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources
              bindings:
                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings
          - id: iamoJDFKaJxGIr0oamd0q
            label: SF-IT-2
            description: Second San Francisco IT Resource Set
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd0q
              resources:
                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd0q/resources
              bindings:
                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd0q/bindings
        _links:
          next:
            href: https://{yourOktaDomain}/api/v1/iam/resource-sets?after=iamoJDFKaJxGIr0oamd0q
    RetrieveAllZones:
      summary: Retrieves all Network Zones
      value:
        - type: IP
          id: nzowc1U5Jh5xuAK0o0g3
          name: LegacyIpZone
          status: ACTIVE
          usage: POLICY
          created: 2019-05-17T18:44:31.000Z
          lastUpdated: 2019-05-21T13:50:49.000Z
          system: true
          gateways:
            - type: CIDR
              value: 1.2.3.4/24
          proxies:
            - type: RANGE
              value: 3.3.4.5-3.3.4.15
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3
              hints:
                allow:
                  - GET
                  - PUT
                  - DELETE
            deactivate:
              href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate
              hints:
                allow:
                  - POST
        - type: DYNAMIC
          id: nzowc1U5Jh5xuAK0o0g3
          name: test
          status: ACTIVE
          usage: POLICY
          created: 2019-05-17T18:44:31.000Z
          lastUpdated: 2019-05-21T13:50:49.000Z
          system: false
          locations:
            - country: AF
              region: AF-BGL
          proxyType: ANY
          asns:
            - '23457'
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3
              hints:
                allow:
                  - GET
                  - PUT
                  - DELETE
            deactivate:
              href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate
              hints:
                allow:
                  - POST
    RetrieveAllZonesWithFilter:
      summary: Retrieves Network Zones with filter
      value:
        - type: IP
          id: nzowc1U5Jh5xuAK0o0g3
          name: LegacyIpZone
          status: ACTIVE
          usage: POLICY
          created: 2019-05-17T18:44:31.000Z
          lastUpdated: 2019-05-21T13:50:49.000Z
          system: true
          gateways:
            - type: CIDR
              value: 1.2.3.4/24
          proxies:
            - type: RANGE
              value: 3.3.4.5-3.3.4.15
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3
              hints:
                allow:
                  - GET
                  - PUT
                  - DELETE
            deactivate:
              href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate
              hints:
                allow:
                  - POST
    RetrieveKeyResponse:
      summary: Retrieve a key by hookKeyId response example
      value:
        id: HKY1p7jWLndGQV9M60g4
        keyId: 7fbc27fd-e3df-4522-86bf-1930110256ad
        name: My new key
        created: '2022-08-31T18:09:58.000Z'
        lastUpdated: '2022-08-31T18:09:58.000Z'
        isUsed: 'false'
    RetrieveMappingsResponse:
      summary: Retrieve a single Profile Mapping
      value:
        id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3
            schema:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4
            schema:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default
        properties:
          firstName:
            expression: user.firstName
            pushStatus: PUSH
          lastName:
            expression: user.lastName
            pushStatus: PUSH
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4
    RetrieveNetworkZoneDynamic:
      summary: Dynamic Network Zone response
      value:
        type: DYNAMIC
        id: nzowc1U5Jh5xuAK0o0g3
        name: test
        status: ACTIVE
        usage: POLICY
        created: '2019-05-17T18:44:31.000Z'
        lastUpdated: '2019-05-21T13:50:49.000Z'
        system: false
        locations:
          - country: AF
            region: AF-BGL
        proxyType: ANY
        asns:
          - '23457'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          deactivate:
            href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate
            hints:
              allow:
                - POST
    RetrieveNetworkZoneIP:
      summary: IP Network Zone response
      value:
        type: IP
        id: nzowc1U5Jh5xuAK0o0g3
        name: LegacyIpZone
        status: ACTIVE
        usage: POLICY
        created: 2019-05-17T18:44:31.000Z
        lastUpdated: 2019-05-21T13:50:49.000Z
        system: true
        gateways:
          - type: CIDR
            value: 1.2.3.4/24
        proxies:
          - type: RANGE
            value: 3.3.4.5-3.3.4.15
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          deactivate:
            href: https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate
            hints:
              allow:
                - POST
    RetrievePublicKeyResponse:
      summary: Retrieve Public Key response example
      value:
        _embedded:
          kty: RSA
          alg: RSA
          kid: 7fbc27fd-e3df-4522-86bf-1930110256ad
          use: null
          e: AQAB
          'n': 2naqCnv6r4xNQs7207lRtKQvdtnlVND-8k5iYBIiqoKGY3CqUmRm1jleoOniiQoMkFX8Wj2DmVqr002efF3vOQ7_gjtTatBTVUNbNIQLybun4dkVoUtfP7pRc5SLpcP3eGPRVar734ZrpQXzmCEdpqBt3jrVjwYjNE5DqOjbYXFJtMsy8CWE9LRJ3kyHEoHPzo22dG_vMrXH0_sAQoCk_4TgNCbvyzVmGVYXI_BkUnp0hv2pR4bQVRYzGB9dKJdctOh8zULqc_EJ8tiYsS05YnF7whrWEyARK0rH-e4d4W-OmBTga_zhY4kJ4NsoQ4PyvcatZkxjPO92QHQOFDnf3w`
    RetrieveUISchemaResponse:
      summary: Retrieves a UI Schema response
      value:
        id: uis4a7liocgcRgcxZ0g7
        uiSchema:
          type: Group
          label: Sign in
          buttonLabel: Submit
          elements:
            - type: Control
              scope: '#/properties/firstName'
              label: First name
              options:
                format: text
            - type: Control
              scope: '#/properties/lastName'
              label: Last name
              options:
                format: text
            - type: Control
              scope: '#/properties/email'
              label: Email
              options:
                format: text
            - type: Control
              scope: '#/properties/countryCode'
              label: Country code
              options:
                format: select
            - type: Control
              scope: '#/properties/bool2'
              label: bool2
              options:
                format: checkbox
            - type: Control
              scope: '#/properties/date'
              label: date
            - type: Control
              scope: '#/properties/enum'
              label: enum
              options:
                format: radio
        created: '2022-07-25T12:56:31.000Z'
        lastUpdated: '2022-07-26T11:53:59.000Z'
        _links:
          self:
            href: https://exmaple.com/api/v1/meta/uischemas/uis4a7liocgcRgcxZ0g7
            hints:
              allow:
                - GET
                - PUT
                - DELETE
    RiskEventsRequestExample:
      summary: Risk Events payload example
      value:
        - timestamp: '2021-01-20T00:00:00.001Z'
          subjects:
            - ip: 6.7.6.7
              riskLevel: MEDIUM
            - ip: 1.1.1.1
              riskLevel: HIGH
              message: Detected Attack tooling and suspicious activity
        - timestamp: '2021-01-20T01:00:00.001Z'
          subjects:
            - ip: 6.7.6.7
              riskLevel: LOW
            - ip: 2.2.2.2
              riskLevel: HIGH
    RiskProviderPutRequest:
      summary: Replace Risk Provider request example
      value:
        name: Risk-Partner-Y
        action: enforce_and_log
        clientId: 00ckjsfgjkdkjdkkljjsd
    RiskProviderPutResponse:
      summary: Replace Risk Provider response example
      value:
        id: 00rp12r4skkjkjgsn
        action: enforce_and_log
        name: Risk-Partner-Y
        clientId: 00ckjsfgjkdkjdkkljjsd
        created: '2021-01-05 22:18:30'
        lastUpdated: '2021-01-05 23:18:30'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/risk/providers/00rp12r4skkjkjgsn
            hints:
              allow:
                - GET
                - PUT
    RiskProviderRequest:
      summary: Risk Provider payload example
      value:
        name: Risk-Partner-X
        action: log_only
        clientId: 00ckjsfgjkdkjdkkljjsd
    RiskProviderResponse:
      summary: Risk Provider response example
      value:
        id: 00rp12r4skkjkjgsn
        action: log_only
        name: Risk-Partner-X
        clientId: 00ckjsfgjkdkjdkkljjsd
        created: '2021-01-05 22:18:30'
        lastUpdated: '2021-01-05 22:18:30'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/risk/providers/00rp12r4skkjkjgsn
            hints:
              allow:
                - GET
                - PUT
    RoleAssignedUsersResponseExample:
      value:
        value:
          - id: 00u118oQYT4TBGuay0g4
            orn: orn:okta:00o5rb5mt2H3d1TJd0h7:users:00u118oQYT4TBGuay0g4
            _links:
              self:
                href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4
              roles:
                href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4/roles
        _links:
          next:
            href: http://your-subdomain.okta.com/api/v1/iam/assignees/users?after=00u118oQYT4TBGuay0g4&limit=1
    RoleRequest:
      value:
        label: UserCreator
        description: Create users
        permissions:
          - okta.users.create
          - okta.users.read
          - okta.groups.read
          - okta.users.userprofile.manage
    RoleResponse:
      value:
        id: cr0Yq6IJxGIr0ouum0g3
        label: UserCreator
        description: Create users
        created: '2021-02-06T16:20:57.000Z'
        lastUpdated: '2021-02-06T16:20:57.000Z'
        _links:
          permissions:
            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions
          self:
            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
    RolesResponse:
      value:
        roles:
          - id: cr0Yq6IJxGIr0ouum0g3
            label: UserCreator
            description: Create users
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              permissions:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions
              self:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
          - id: cr0Fw7HKcWIroo88m3r1
            label: GroupMembershipManager
            description: Manage group membership
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              permissions:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Fw7HKcWIroo88m3r1/permissions
              self:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Fw7HKcWIroo88m3r1
        _links:
          next:
            href: https://{yourOktaDomain}/api/v1/iam/roles?after=cr0Fw7HKcWIroo88m3r1
    SimulatePolicyBody:
      summary: Simulate policy request body
      description: Simulate policy request body
      value:
        policyType:
          - OKTA_SIGN_ON
          - MFA_ENROLL
        appInstance: 0oa4eroj3nYCIJIW70g7
        policyContext:
          groups:
            ids:
              - 00g4eralvekR5RLuS0g7
              - 00g4eralvekR5RLuS0g8
        risk:
          level: LOW
        zones:
          ids:
            - nzo4eralxcRnbIHYJ0g7
        device:
          platform: IOS
          registered: true
          managed: true
    SimulatePolicyResponse:
      summary: Simulate policy response body
      description: Simulate policy response body
      value:
        evaluation:
          - status: null
            policyType: OkTA_SIGN_ON
            result:
              policies:
                - id: 00p4eromwukk6qUku0g7
                - name: test policy
                - status: MATCH
                - conditions: []
                - rules:
                    - id: 0pr4erof85nGcyC7Y0g7
                    - name: test rule
                    - status: MATCH
                    - conditions:
                        - type: people.groups.include
                        - status: MATCH
            undefined:
              policies: null
            evaluated:
              policies: null
          - status: null
            policyType: ACCESS_POLICY
            result:
              policies:
                - id: rst4eram06ZKZewEe0g7
                - name: Any two factors
                - status: MATCH
                - conditions: []
                - rules:
                    - id: rul4eram07VsWgybo0g7
                    - name: Catch-all rule
                    - status: MATCH
                    - conditions: []
            undefined:
              policies: null
            evaluated:
              policies: null
          - status: null
            policyType: PROFILE_ENROLLMENT
            result:
              policies:
                - id: rst4eram08ZSjPTOl0g7
                - name: Default Policy
                - status: MATCH
                - conditions: []
                - rules:
                    - id: rul4eram094PrQ2BX0g7
                    - name: Catch-all rule
                    - status: MATCH
                    - conditions: []
            undefined:
              policies: null
            evaluated:
              policies: null
    ThreatInsightResponseExample:
      summary: ThreatInsight response
      value:
        action: none
        excludeZones: []
        created: '2020-08-05T22:18:30.629Z'
        lastUpdated: '2020-08-05T22:18:30.629Z'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/threats/configuration
            hints:
              allow:
                - GET
                - POST
    ThreatInsightUpdateRequestExample:
      summary: ThreatInsight update request
      value:
        action: audit
        excludeZones:
          - nzo1q7jEOsoCnoKcj0g4
          - nzouagptWUz5DlLfM0g3
    ThreatInsightUpdateResponseExample:
      summary: ThreatInsight update response
      value:
        action: audit
        excludeZones:
          - nzo1q7jEOsoCnoKcj0g4
          - nzouagptWUz5DlLfM0g3
        created: '2020-08-05T22:18:30.629Z'
        lastUpdated: '2020-10-13T21:23:10.178Z'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/threats/configuration
            hints:
              allow:
                - GET
                - POST
    TriggerSessionResponse:
      value:
        - id: uij4ri8ZLk0ywyqxB0g4
          identitySourceId: 0oa3l6l6WK6h0R0QW0g4
          status: TRIGGERED
          importType: INCREMENTAL
          created: 2022-04-04T15:56:05.000Z
          lastUpdated: 2022-05-05T18:15:44.000Z
    UpdateAppFeatureRequestEx:
      summary: Update app Feature request
      value:
        create:
          lifecycleCreate:
            status: ENABLED
        update:
          lifecycleDeactivate:
            status: ENABLED
          profile:
            status: ENABLED
          password:
            status: ENABLED
            seed: RANDOM
            change: CHANGE
    UpdateAppFeatureResponseEx:
      summary: Update app Feature response
      value:
        name: USER_PROVISIONING
        status: ENABLED
        description: User provisioning settings from Okta to a downstream application
        capabilities:
          create:
            lifecycleCreate:
              status: ENABLED
          update:
            lifecycleDeactivate:
              status: ENABLED
            profile:
              status: ENABLED
            password:
              status: ENABLED
              seed: RANDOM
              change: CHANGE
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/apps/${appId}/features/USER_PROVISIONING
            hints:
              allow:
                - GET
                - PUT
    UpdateBrandRequest:
      value:
        customPrivacyPolicyUrl: https://www.someHost.com/privacy-policy
        agreeToCustomPrivacyPolicy: true
        removePoweredByOkta: true
        name: New Name For Brand
        emailDomainId: OeD114iNkrcN6aR680g4
        locale: en
        defaultApp:
          appInstanceId: 0oa114iNkrcN6aR680g4
          appLinkName: null
          classicApplicationUri: null
    UpdateBrandResponse:
      value:
        id: bnd114iNkrcN6aR680g4
        removePoweredByOkta: true
        agreeToCustomPrivacyPolicy: true
        name: New Name For Brand
        isDefault: true
        customPrivacyPolicyUrl: https://www.someHost.com/privacy-policy
        emailDomainId: OeD114iNkrcN6aR680g4
        defaultApp:
          appInstanceId: 0oa114iNkrcN6aR680g4
          appLinkName: null
          classicApplicationUri: null
        locale: en
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          themes:
            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/themes
            hints:
              allow:
                - GET
    UpdateEmailDomainRequest:
      value:
        displayName: IT Admin
        userName: noreply
    UpdateMappingBody:
      summary: Update an existing profile mapping by updating one or more properties
      value:
        properties:
          nickName:
            expression: user.honorificPrefix + user.displayName
            pushStatus: DONT_PUSH
    UpdateMappingResponse:
      summary: Update an existing profile mapping by updating one or more properties
      value:
        id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3
            schema:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4
            schema:
              href: https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default
        properties:
          fullName:
            expression: user.firstName + user.lastName
            pushStatus: PUSH
          nickName:
            expression: user.honorificPrefix + user.displayName
            pushStatus: DONT_PUSH
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4
    UpdateUserTypePostRequest:
      summary: Update user type request
      value:
        displayName: Updated Display Name
    UpdateUserTypePostResponse:
      summary: Update user type response
      value:
        id: otyfnly5cQjJT9PnR0g4
        displayName: Updated Display Name
        name: newUserType
        description: A new custom user type
        createdBy: sprz9fj1ycBcsgopy1d6
        lastUpdatedBy: sprz9fj1ycBcsgopy1d6
        created: '2021-07-05T20:40:38.000Z'
        lastUpdated: '2021-07-05T20:40:38.000Z'
        default: false
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6
          schema:
            href: https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6
    UpdatedEmailDomainResponse:
      value:
        id: OeD114iNkrcN6aR680g4
        validationStatus: NOT_STARTED
        displayName: IT Admin
        userName: noreply
        domain: example.com
        dnsValidationRecords:
          - recordType: TXT
            fqdn: _oktaverification.example.com
            verificationValue: 759080212bda43e3bc825a7d73b4bb64
          - recordType: CNAME
            fqdn: mail.example.com
            verificationValue: u22224444.wl024.sendgrid.net
          - recordType: CNAME
            fqdn: t02._domainkey.example.com
            verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
          - recordType: CNAME
            fqdn: t022._domainkey.example.com
            verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
    UserSchemaAddRequest:
      value:
        definitions:
          custom:
            id: '#custom'
            type: object
            properties:
              twitterUserName:
                title: Twitter username
                description: Twitter Username
                type: string
                required: false
                minLength: 1
                maxLength: 20
                permissions:
                  - principal: SELF
                    action: READ_WRITE
            required: []
    UserSchemaResponse:
      value:
        id: https://{yourOktaDomain}/meta/schemas/user/default
        $schema: http://json-schema.org/draft-04/schema#
        name: user
        title: Default Okta User
        lastUpdated: '2015-09-05T10:40:45.000Z'
        created: '2015-02-02T10:27:36.000Z'
        definitions:
          base:
            id: '#base'
            type: object
            properties:
              login:
                title: Username
                type: string
                required: true
                minLength: 5
                maxLength: 100
                permissions:
                  - principal: SELF
                    action: READ_WRITE
              firstName:
                title: First name
                type: string
                required: true
                minLength: 1
                maxLength: 50
                permissions:
                  - principal: SELF
                    action: READ_WRITE
              lastName:
                title: Last name
                type: string
                required: true
                minLength: 1
                maxLength: 50
                permissions:
                  - principal: SELF
                    action: READ_WRITE
              email:
                title: Primary email
                type: string
                required: true
                format: email
                permissions:
                  - principal: SELF
                    action: READ_WRITE
            required:
              - login
              - firstName
              - lastName
              - email
          custom:
            id: '#custom'
            type: object
            properties:
              twitterUserName:
                title: Twitter username
                description: User's username for twitter.com
                type: string
                required: false
                minLength: 1
                maxLength: 20
                permissions:
                  - principal: SELF
                    action: READ_WRITE
            required: []
        type: object
        properties:
          profile:
            allOf:
              - $ref: '#/definitions/base'
              - $ref: '#/definitions/custom'
    VerifiedEmailDomainResponse:
      value:
        id: OeD114iNkrcN6aR680g4
        validationStatus: VERIFIED
        displayName: IT Admin
        userName: noreply
        domain: example.com
        dnsValidationRecords:
          - recordType: TXT
            fqdn: _oktaverification.example.com
            verificationValue: 759080212bda43e3bc825a7d73b4bb64
          - recordType: CNAME
            fqdn: mail.example.com
            verificationValue: u22224444.wl024.sendgrid.net
          - recordType: CNAME
            fqdn: t02._domainkey.example.com
            verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
          - recordType: CNAME
            fqdn: t022._domainkey.example.com
            verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
    WellKnownOrgMetadataResponseClassic:
      value:
        id: 00o5rb5mt2H3d1TJd0h7
        _links:
          organization:
            href: https://{{yourOktaDomain}}
        pipeline: v1
        settings:
          analyticsCollectionEnabled: false
          bugReportingEnabled: true
          omEnabled: true
    WellKnownOrgMetadataResponseCustomUrlOie:
      value:
        id: 00o47wwoytgsDqEtz0g7
        _links:
          organization:
            href: https://{{yourSubdomain}}.okta.com
          alternate:
            href: https://{{yourCustomDomain}}
        pipeline: idx
        settings:
          analyticsCollectionEnabled: false
          bugReportingEnabled: true
          omEnabled: false
    activeAPIServiceIntegrationInstanceSecretResponse:
      summary: Activate Secret response example
      value:
        id: ocs2f50kZB0cITmYU0g4
        status: ACTIVE
        client_secret: '***MQGQ'
        secret_hash: 0WOOvBSzV9clc4Nr7Rbaug
        created: '2023-04-06T21:32:33.000Z'
        lastUpdated: '2023-04-06T21:32:33.000Z'
        _links:
          deactivate:
            href: https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f50kZB0cITmYU0g4/lifecycle/deactivate
            hints:
              allow:
                - POST
    inactiveAPIServiceIntegrationInstanceSecretResponse:
      summary: Deactivate Secret response example
      value:
        id: ocs2f4zrZbs8nUa7p0g4
        status: INACTIVE
        client_secret: '***DhOW'
        secret_hash: yk4SVx4sUWVJVbHt6M-UPA
        created: '2023-02-21T20:08:24.000Z'
        lastUpdated: '2023-02-21T20:08:24.000Z'
        _links:
          activate:
            href: https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f4zrZbs8nUa7p0g4/lifecycle/activate
            hints:
              allow:
                - POST
          delete:
            href: https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f4zrZbs8nUa7p0g4
            hints:
              allow:
                - DELETE
    newAPIServiceIntegrationInstanceSecretResponse:
      summary: New secret response example
      value:
        id: ocs2f50kZB0cITmYU0g4
        status: ACTIVE
        client_secret: DRUFXGF9XbLnS9k-Sla3x3POBiIxDreBCdZuFs5B
        secret_hash: FpCwXwSjTRQNtEI11I00-g
        created: '2023-04-06T21:32:33.000Z'
        lastUpdated: '2023-04-06T21:32:33.000Z'
        _links:
          deactivate:
            href: https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f50kZB0cITmYU0g4/lifecycle/deactivate
            hints:
              allow:
                - POST
    postAPIServiceIntegrationRequest:
      value:
        type: my_app_cie
        grantedScopes:
          - okta.logs.read
          - okta.groups.read
          - okta.users.read
    postAPIServiceIntegrationResponse:
      summary: Post response example
      value:
        id: 0oa72lrepvp4WqEET1d9
        type: my_app_cie
        name: My App Cloud Identity Engine
        createdAt: '2023-02-21T20:08:24.000Z'
        createdBy: 00uu3u0ujW1P6AfZC2d5
        clientSecret: CkF69kXtag0q0P4pXU8OnP5IAzgGlwx6eqGy7Fmg
        configGuideUrl: https://{docDomain}/my-app-cie/configuration-guide
        grantedScopes:
          - okta.logs.read
          - okta.groups.read
          - okta.users.read
        _links:
          self:
            href: https://{yourOktaDomain}/integrations/api/v1/api-services/0oa72lrepvp4WqEET1d9
            hints:
              allow:
                - GET
                - DELETE
          client:
            href: https://{yourOktaDomain}/oauth2/v1/clients/0oa72lrepvp4WqEET1d9
            hints:
              allow:
                - GET
          logo:
            name: small
            href: https://{logoDomain}/{logoPath}/my_app_cie_small_logo
    sspr-enabled-no-step-up:
      summary: Password policy - SSPR with no step up
      description: This password policy permits self-service password change, reset, and unlock. Phone SMS or email are initial authenticators with no secondary authentication required.
      value:
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                  - sms
                  - email
              stepUp:
                required: false
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-no-step-up-response:
      summary: Password policy - SSPR with no step up
      value:
        id: ruleId
        $ref: '#/components/examples/sspr-enabled-no-step-up/value'
        _links:
          self:
            href: https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          deactivate:
            href: https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate
            hints:
              allow:
                - POST
    sspr-enabled-no-step-up-update:
      summary: Password policy - SSPR with no step up
      description: This password policy permits self-service password change, reset, and unlock. Phone SMS or email are initial authenticators with no secondary authentication required.
      value:
        id: ruleId
        $ref: '#/components/examples/sspr-enabled-no-step-up/value'
    sspr-enabled-sq-step-up:
      summary: Password policy - SSPR with security question as step up
      description: This password policy permits self-service password change, reset, and unlock. Phone SMS and Okta Verify push are initial authenticators, and the secondary authentication is a security question.
      value:
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                  - push
                  - sms
              stepUp:
                required: true
                methods:
                  - security_question
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-sq-step-up-response:
      summary: Password policy - SSPR with security question as step up
      value:
        id: ruleId
        $ref: '#/components/examples/sspr-enabled-sq-step-up/value'
        _links:
          self:
            href: https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          deactivate:
            href: https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate
            hints:
              allow:
                - POST
    sspr-enabled-sq-step-up-update:
      summary: Password policy - SSPR with security question as step up
      description: This password policy permits self-service password change, reset, and unlock. Phone SMS and Okta Verify push are initial authenticators, and the secondary authentication is a security question.
      value:
        id: ruleId
        $ref: '#/components/examples/sspr-enabled-sq-step-up/value'
    sspr-enabled-sso-step-up:
      summary: Password policy - SSPR with any SSO authenticator as step up
      description: This password policy permits self-service password change, reset, and unlock. Phone SMS or email are initial authenticators. The step-up authentication required is any active SSO authenticator.
      value:
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                  - push
                  - sms
              stepUp:
                required: true
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-sso-step-up-response:
      summary: Password policy - SSPR with any SSO authenticator as step up
      value:
        id: ruleId
        $ref: '#/components/examples/sspr-enabled-sso-step-up/value'
        _links:
          self:
            href: https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          deactivate:
            href: https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate
            hints:
              allow:
                - POST
    sspr-enabled-sso-step-up-update:
      summary: Password policy - SSPR with any SSO authenticator as step up
      description: This password policy permits self-service password change, reset, and unlock. Phone SMS or email are initial authenticators. The step-up authentication required is any active SSO authenticator.
      value:
        id: ruleId
        $ref: '#/components/examples/sspr-enabled-sso-step-up/value'
    sspr-enabled-sso-step-up-with-constraints:
      summary: Password policy - Enable SSPR with OTP enabled and Google authenticator constraint
      description: This password policy permits self-service password change, reset, and unlock. Okta Verify push, Phone SMS, or Google OTP are initial authenticators. The secondary authentication required is any SSO authenticator. The `methodConstraints` property limits OTP authenticators to Google.
      value:
        id: ruleId
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                  - push
                  - sms
                  - otp
                methodConstraints:
                  - method: otp
                    allowedAuthenticators:
                      - key: google_otp
              stepUp:
                required: true
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-sso-step-up-with-constraints-response:
      summary: Password policy - Enable SSPR with OTP enabled and Google authenticator constraint
      value:
        id: ruleId
        $ref: '#/components/examples/sspr-enabled-sso-step-up-with-constraints/value'
        _links:
          self:
            href: https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          deactivate:
            href: https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate
            hints:
              allow:
                - POST
    sspr-enabled-sso-step-up-with-constraints-update:
      summary: Password policy - Enable SSPR with OTP enabled and Google authenticator constraint
      description: This password policy permits self-service password change, reset, and unlock. Okta Verify push, Phone SMS, or Google OTP are initial authenticators. The secondary authentication required is any SSO authenticator. The `methodConstraints` property limits OTP authenticators to Google.
      value:
        id: ruleId
        $ref: '#/components/examples/sspr-enabled-sso-step-up-with-constraints/value'
  parameters:
    UISchemaId:
      name: id
      description: The unique ID of the UI Schema
      in: path
      required: true
      schema:
        type: string
        example: uis4a7liocgcRgcxZ0g7
    pathApiServiceId:
      name: apiServiceId
      in: path
      schema:
        type: string
      required: true
      description: '`id` of the API Service Integration instance'
      example: 000lr2rLjZ6NsGn1P0g3
    pathApiTokenId:
      name: apiTokenId
      in: path
      schema:
        type: string
        example: 00Tabcdefg1234567890
      required: true
      description: id of the API Token
    pathAppId:
      name: appId
      description: ID of the Application
      in: path
      required: true
      schema:
        type: string
        example: 0oafxqCAJWWGELFTYASJ
    pathAppName:
      name: appName
      in: path
      required: true
      schema:
        type: string
        example: oidc_client
    pathAssociatedServerId:
      name: associatedServerId
      description: '`id` of the associated Authorization Server'
      in: path
      required: true
      schema:
        type: string
        example: aus6xt9jKPmCyn6kg0g4
    pathAuthServerId:
      name: authServerId
      description: '`id` of the Authorization Server'
      in: path
      required: true
      schema:
        type: string
        example: GeGRTEr7f3yu2n7grw22
    pathAuthenticatorId:
      name: authenticatorId
      description: '`id` of the Authenticator'
      in: path
      required: true
      schema:
        type: string
        example: aut1nd8PQhGcQtSxB0g4
    pathBehaviorId:
      name: behaviorId
      in: path
      schema:
        type: string
        example: abcd1234
      required: true
      description: id of the Behavior Detection Rule
    pathBrandId:
      name: brandId
      in: path
      required: true
      schema:
        type: string
      description: The ID of the brand
    pathCaptchaId:
      name: captchaId
      in: path
      schema:
        type: string
      required: true
      description: The unique key used to identify your CAPTCHA instance
    pathClaimId:
      name: claimId
      description: '`id` of Claim'
      in: path
      required: true
      schema:
        type: string
        example: hNJ3Uk76xLagWkGx5W3N
    pathClientId:
      name: clientId
      description: '`client_id` of the app'
      in: path
      required: true
      schema:
        type: string
        example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
    pathContactType:
      name: contactType
      in: path
      required: true
      schema:
        type: string
    pathCsrId:
      name: csrId
      description: '`id` of the CSR'
      in: path
      required: true
      schema:
        type: string
        example: fd7x1h7uTcZFx22rU1f7
    pathCustomizationId:
      name: customizationId
      in: path
      required: true
      schema:
        type: string
      description: The ID of the email customization
    pathDeviceAssuranceId:
      in: path
      name: deviceAssuranceId
      required: true
      description: Id of the Device Assurance Policy
      schema:
        type: string
    pathDeviceId:
      name: deviceId
      in: path
      schema:
        type: string
        example: guo4a5u7JHHhjXrMK0g4
      required: true
      description: '`id` of the device'
    pathDomainId:
      name: domainId
      description: '`id` of the Domain'
      in: path
      required: true
      schema:
        type: string
        example: OmWNeywfTzElSLOBMZsL
    pathEmailDomainId:
      name: emailDomainId
      in: path
      required: true
      schema:
        type: string
        description: The ID of the email domain.
    pathEmailServerId:
      name: emailServerId
      in: path
      required: true
      schema:
        type: string
        description: The ID of the email SMTP Server
    pathEventHookId:
      name: eventHookId
      description: '`id` of the Event Hook'
      in: path
      required: true
      schema:
        type: string
        example: YTDQbItFfFuy9RdHrvly
    pathFactorId:
      name: factorId
      description: '`id` of the Factor'
      in: path
      required: true
      schema:
        type: string
        example: zAgrsaBe0wVGRugDYtdv
    pathFeatureId:
      name: featureId
      description: '`id` of the Feature'
      in: path
      required: true
      schema:
        type: string
        example: R5HjqNn1pEqWGy48E9jg
    pathFeatureName:
      name: featureName
      description: Name of the Feature
      in: path
      required: true
      schema:
        type: string
        example: USER_PROVISIONING
    pathGrantId:
      name: grantId
      description: '`id` of the Grant'
      in: path
      required: true
      schema:
        type: string
        example: iJoqkwx50mrgX4T9LcaH
    pathGroupId:
      name: groupId
      description: The `id` of the group
      in: path
      required: true
      schema:
        type: string
        example: 00g1emaKYZTWRYYRRTSK
    pathGroupRuleId:
      name: groupRuleId
      description: The `id` of the group rule
      in: path
      required: true
      schema:
        type: string
        example: 0pr3f7zMZZHPgUoWO0g4
    pathHookKeyId:
      name: hookKeyId
      description: '`id` of the Hook Key'
      in: path
      required: true
      schema:
        type: string
        example: XreKU5laGwBkjOTehusG
    pathIdentitySourceId:
      name: identitySourceId
      in: path
      required: true
      schema:
        type: string
    pathIdentitySourceSessionId:
      name: sessionId
      in: path
      required: true
      schema:
        type: string
    pathIdpCsrId:
      name: idpCsrId
      description: '`id` of the IdP CSR'
      in: path
      required: true
      schema:
        type: string
        example: 1uEhyE65oV3H6KM9gYcN
    pathIdpId:
      name: idpId
      description: '`id` of IdP'
      in: path
      required: true
      schema:
        type: string
        example: SVHoAOh0l8cPQkVX1LRl
    pathIdpKeyId:
      name: idpKeyId
      description: '`id` of IdP Key'
      in: path
      required: true
      schema:
        type: string
        example: KmMo85SSsU7TZzOShcGb
    pathInlineHookId:
      name: inlineHookId
      description: '`id` of the Inline Hook'
      in: path
      required: true
      schema:
        type: string
        example: Y7Rzrd4g4xj6WdKzrBHH
    pathKeyId:
      name: keyId
      description: ID of the Key Credential for the application
      in: path
      required: true
      schema:
        type: string
        example: sjP9eiETijYz110VkhHN
    pathLifecycle:
      name: lifecycle
      description: Whether to `enable` or `disable` the feature
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/FeatureLifecycle'
    pathLinkedObjectName:
      name: linkedObjectName
      in: path
      required: true
      schema:
        type: string
    pathLogStreamId:
      name: logStreamId
      in: path
      schema:
        type: string
        example: 0oa1orzg0CHSgPcjZ0g4
      required: true
      description: Unique identifier for the Log Stream
    pathLogStreamType:
      name: logStreamType
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/LogStreamType'
    pathMappingId:
      name: mappingId
      description: '`id` of the Mapping'
      in: path
      required: true
      schema:
        type: string
        example: cB6u7X8mptebWkffatKA
    pathMemberId:
      name: memberId
      in: path
      schema:
        type: string
        example: irb1qe6PGuMc7Oh8N0g4
      required: true
      description: '`id` of a member'
    pathMethodType:
      name: methodType
      description: Type of the authenticator method
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AuthenticatorMethodType'
    pathNotificationType:
      name: notificationType
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/NotificationType'
    pathOperation:
      name: operation
      in: path
      required: true
      schema:
        type: string
    pathOwnerId:
      description: The `id` of the group owner
      name: ownerId
      in: path
      required: true
      schema:
        type: string
        example: 00u1emaK22TWRYd3TtG
    pathPermissionType:
      name: permissionType
      in: path
      schema:
        type: string
        example: okta.users.manage
      required: true
      description: An okta permission type
    pathPolicyId:
      name: policyId
      description: '`id` of the Policy'
      in: path
      required: true
      schema:
        type: string
        example: 00plrilJ7jZ66Gn0X0g3
    pathPolicyMappingId:
      name: mappingId
      description: '`id` of the policy resource Mapping'
      in: path
      required: true
      schema:
        type: string
        example: maplr2rLjZ6NsGn1P0g3
    pathPoolId:
      name: poolId
      in: path
      description: Id of the agent pool for which the settings will apply
      schema:
        type: string
      required: true
    pathPrimaryRelationshipName:
      name: primaryRelationshipName
      in: path
      required: true
      schema:
        type: string
    pathPrimaryUserId:
      name: primaryUserId
      description: '`id` of primary User'
      in: path
      required: true
      schema:
        type: string
        example: ctxeQ5JnAVdGFBB7Zr7W
    pathPrincipalRateLimitId:
      name: principalRateLimitId
      in: path
      schema:
        type: string
        example: abcd1234
      required: true
      description: id of the Principal Rate Limit
    pathPublicKeyId:
      name: publicKeyId
      description: '`id` of the Public Key'
      in: path
      required: true
      schema:
        type: string
        example: FcH2P9Eg7wr0o8N2FuV0
    pathPushProviderId:
      in: path
      name: pushProviderId
      required: true
      description: Id of the push provider
      schema:
        type: string
    pathRealmId:
      name: realmId
      description: '`id` of the Realm'
      in: path
      required: true
      schema:
        type: string
        example: vvrcFogtKCrK9aYq3fgV
    pathRelationshipName:
      name: relationshipName
      in: path
      required: true
      schema:
        type: string
    pathResourceId:
      name: resourceId
      in: path
      schema:
        type: string
        example: ire106sQKoHoXXsAe0g4
      required: true
      description: '`id` of a resource'
    pathResourceSetId:
      name: resourceSetId
      in: path
      schema:
        type: string
        example: iamoJDFKaJxGIr0oamd9g
      required: true
      description: '`id` of a Resource Set'
    pathRiskProviderId:
      name: riskProviderId
      in: path
      schema:
        type: string
        example: 00rp12r4skkjkjgsn
      required: true
      description: '`id` of the Risk Provider object'
    pathRoleId:
      name: roleId
      description: '`id` of the Role'
      in: path
      required: true
      schema:
        type: string
        example: 3Vg1Pjp3qzw4qcCK5EdO
    pathRoleIdOrLabel:
      name: roleIdOrLabel
      in: path
      schema:
        type: string
        example: cr0Yq6IJxGIr0ouum0g3
      required: true
      description: '`id` or `label` of the role'
    pathRoleRef:
      name: roleRef
      in: path
      description: A reference to an existing role. Standard roles require a `roleType`, while Custom Roles require a `roleId`. See [Standard Role Types](https://developer.okta.com/docs/concepts/role-assignment/#standard-role-types).
      required: true
      schema:
        oneOf:
          - title: roleType
            type: string
            $ref: '#/components/schemas/RoleType'
          - title: roleId
            type: string
    pathRuleId:
      name: ruleId
      description: '`id` of the Policy Rule'
      in: path
      required: true
      schema:
        type: string
        example: ruld3hJ7jZh4fn0st0g3
    pathSchemaId:
      name: schemaId
      in: path
      required: true
      schema:
        type: string
    pathScopeId:
      name: scopeId
      description: '`id` of Scope'
      in: path
      required: true
      schema:
        type: string
        example: 0TMRpCWXRKFjP7HiPFNM
    pathSecretId:
      name: secretId
      in: path
      schema:
        type: string
      required: true
      description: '`id` of the API Service Integration instance Secret'
      example: ocs2f4zrZbs8nUa7p0g4
    pathSection:
      name: section
      in: path
      required: true
      schema:
        type: string
    pathSessionId:
      name: sessionId
      description: '`id` of the Session'
      in: path
      required: true
      schema:
        type: string
        example: l7FbDVqS8zHSy65uJD85
    pathTargetGroupId:
      name: targetGroupId
      in: path
      required: true
      schema:
        type: string
        example: 00g1e9dfjHeLAsdX983d
    pathTemplateId:
      name: templateId
      description: '`id` of the Template'
      in: path
      required: true
      schema:
        type: string
        example: 6NQUJ5yR3bpgEiYmq8IC
    pathTemplateName:
      name: templateName
      in: path
      required: true
      schema:
        type: string
      description: The name of the email template
    pathThemeId:
      name: themeId
      in: path
      required: true
      schema:
        type: string
      description: The ID of the theme
    pathTokenId:
      name: tokenId
      description: '`id` of Token'
      in: path
      required: true
      schema:
        type: string
        example: sHHSth53yJAyNSTQKDJZ
    pathTransactionId:
      name: transactionId
      description: '`id` of the Transaction'
      in: path
      required: true
      schema:
        type: string
        example: gPAQcN3NDjSGOCAeG2Jv
    pathTrustedOriginId:
      name: trustedOriginId
      description: '`id` of the Trusted Origin'
      in: path
      required: true
      schema:
        type: string
        example: 7j2PkU1nyNIDe26ZNufR
    pathTypeId:
      name: typeId
      in: path
      required: true
      schema:
        type: string
        description: The unique key for the User Type
    pathUpdateId:
      name: updateId
      in: path
      description: Id of the update
      schema:
        type: string
      required: true
    pathUserId:
      name: userId
      in: path
      required: true
      schema:
        type: string
    pathZoneId:
      name: zoneId
      in: path
      schema:
        type: string
      required: true
      description: '`id` of the Network Zone'
      example: nzowc1U5Jh5xuAK0o0g3
    queryAfter:
      name: after
      in: query
      schema:
        type: string
      description: The cursor to use for pagination. It is an opaque string that specifies your current location in the list and is obtained from the `Link` response header. See [Pagination](/#pagination) for more information.
    queryExpandBrand:
      name: expand
      in: query
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - themes
            - domains
            - emailDomain
      description: Specifies additional metadata to be included in the response
    queryExpandEmailDomain:
      name: expand
      in: query
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - brands
      description: Specifies additional metadata to be included in the response
    queryExpandEmailTemplate:
      name: expand
      in: query
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - settings
            - customizationCount
      description: Specifies additional metadata to be included in the response
    queryExpandPageRoot:
      name: expand
      in: query
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - default
            - customized
            - customizedUrl
            - preview
            - previewUrl
      description: Specifies additional metadata to be included in the response
    queryFilter:
      name: q
      in: query
      description: Searches the records for matching value
      schema:
        type: string
    queryLanguage:
      name: language
      schema:
        $ref: '#/components/schemas/Language'
      in: query
      description: The language to use for the email. Defaults to the current user's language if unspecified.
    queryLimit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
      description: A limit on the number of objects to return
    queryLimitPerPoolType:
      name: limitPerPoolType
      in: query
      schema:
        type: integer
        default: 5
      required: false
      description: Maximum number of AgentPools being returned
    queryPoolType:
      name: poolType
      in: query
      schema:
        $ref: '#/components/schemas/AgentType'
      required: false
      description: Agent type to search for
    queryScheduled:
      name: scheduled
      in: query
      description: Scope the list only to scheduled or ad-hoc updates. If the parameter is not provided we will return the whole list of updates.
      schema:
        type: boolean
      required: false
    simulateParameter:
      name: expand
      description: Use `expand=EVALUATED` to include a list of evaluated but not matched policies and policy rules. Use `expand=RULE` to include details about why a rule condition was (not) matched.
      in: query
      schema:
        type: string
        example: expand=EVALUATED&expand=RULE
  requestBodies:
    AuthenticatorRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authenticator'
          examples:
            Duo:
              $ref: '#/components/examples/AuthenticatorRequestDuo'
      required: true
  responses:
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorMissingRequiredParameter400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            MissingRequiredParameter:
              $ref: '#/components/examples/ErrorMissingRequiredParameter'
    ErrorInvalidToken401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            InvalidTokenProvided:
              $ref: '#/components/examples/ErrorInvalidTokenProvided'
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    AuthenticatorResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authenticator'
          examples:
            Duo:
              $ref: '#/components/examples/AuthenticatorResponseDuo'
            Email:
              $ref: '#/components/examples/AuthenticatorResponseEmail'
            Password:
              $ref: '#/components/examples/AuthenticatorResponsePassword'
            Phone:
              $ref: '#/components/examples/AuthenticatorResponsePhone'
            WebAuthn:
              $ref: '#/components/examples/AuthenticatorResponseWebAuthn'
            SecurityQuestion:
              $ref: '#/components/examples/AuthenticatorResponseSecurityQuestion'
  schemas:
    APIServiceIntegrationInstance:
      type: object
      properties:
        configGuideUrl:
          type: string
          description: The URL to the API service integration configuration guide
          example: https://{docDomain}/my-app-cie/configuration-guide
          readOnly: true
        createdAt:
          type: string
          description: Timestamp when the API Service Integration instance was created
          example: '2023-02-21T20:08:24.000Z'
          readOnly: true
        createdBy:
          type: string
          description: The user ID of the API Service Integration instance creator
          example: 00uu3u0ujW1P6AfZC2d5
          readOnly: true
        grantedScopes:
          type: array
          description: The list of Okta management scopes granted to the API Service Integration instance. See [Okta management OAuth 2.0 scopes](/oauth2/#okta-admin-management).
          items:
            type: string
          example:
            - okta.logs.read
        id:
          type: string
          description: The ID of the API Service Integration instance
          readOnly: true
          example: 0oa72lrepvp4WqEET1d9
        name:
          type: string
          description: The name of the API service integration that corresponds with the `type` property. This is the full name of the API service integration listed in the Okta Integration Network (OIN) catalog.
          readOnly: true
          example: My App Cloud Identity Engine
        type:
          type: string
          description: The type of the API service integration. This string is an underscore-concatenated, lowercased API service integration name. For example, `my_api_log_integration`.
          example: my_app_cie
        _links:
          $ref: '#/components/schemas/APIServiceIntegrationLinks'
          readOnly: true
    APIServiceIntegrationInstanceSecret:
      type: object
      properties:
        client_secret:
          type: string
          description: The OAuth 2.0 client secret string. The client secret string is returned in the response of a Secret creation request. In other responses (such as list, activate, or deactivate requests), the client secret is returned as an undisclosed hashed value.
          example: DRUFXGF9XbLnS9k-Sla3x3POBiIxDreBCdZuFs5B
          readOnly: true
        created:
          type: string
          description: Timestamp when the API Service Integration instance Secret was created
          example: '2023-02-21T20:08:24.000Z'
          readOnly: true
        id:
          type: string
          description: The ID of the API Service Integration instance Secret
          example: ocs2f4zrZbs8nUa7p0g4
          readOnly: true
        lastUpdated:
          type: string
          description: Timestamp when the API Service Integration instance Secret was updated
          example: '2023-02-21T20:08:24.000Z'
          readOnly: true
        secret_hash:
          type: string
          description: OAuth 2.0 client secret string hash
          example: yk4SVx4sUWVJVbHt6M-UPA
          readOnly: true
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          description: Status of the API Service Integration instance Secret
          example: ACTIVE
        _links:
          $ref: '#/components/schemas/APIServiceIntegrationSecretLinks'
          readOnly: true
      required:
        - id
        - status
        - client_secret
        - created
        - lastUpdated
        - secret_hash
        - _links
    APIServiceIntegrationLinks:
      description: Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the current status of an application using the [JSON Hypertext Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06) specification. This object is used for dynamic discovery of related resources and lifecycle operations.
      properties:
        client:
          $ref: '#/components/schemas/HrefObjectClientLink'
        logo:
          $ref: '#/components/schemas/HrefObjectLogoLink'
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    APIServiceIntegrationSecretLinks:
      description: Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the current status of an application using the [JSON Hypertext Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06) specification. This object is used for dynamic discovery of related resources and lifecycle operations.
      properties:
        activate:
          $ref: '#/components/schemas/HrefObjectActivateLink'
        deactivate:
          $ref: '#/components/schemas/HrefObjectDeactivateLink'
        delete:
          $ref: '#/components/schemas/HrefObjectDeleteLink'
      readOnly: true
    APNSConfiguration:
      properties:
        fileName:
          type: string
          description: (Optional) File name for Admin Console display
        keyId:
          type: string
          description: 10-character Key ID obtained from the Apple developer account
        teamId:
          type: string
          description: 10-character Team ID used to develop the iOS app
        tokenSigningKey:
          type: string
          description: APNs private authentication token signing key
          writeOnly: true
    APNSPushProvider:
      allOf:
        - $ref: '#/components/schemas/PushProvider'
        - type: object
          properties:
            configuration:
              $ref: '#/components/schemas/APNSConfiguration'
    AccessPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/PolicyRuleConditions'
    AccessPolicyConstraint:
      type: object
      properties:
        methods:
          items:
            type: string
          type: array
        reauthenticateIn:
          type: string
        types:
          items:
            type: string
          type: array
    AccessPolicyConstraints:
      type: object
      properties:
        knowledge:
          $ref: '#/components/schemas/KnowledgeConstraint'
        possession:
          $ref: '#/components/schemas/PossessionConstraint'
    AccessPolicyRule:
      allOf:
        - $ref: '#/components/schemas/PolicyRule'
        - type: object
          properties:
            actions:
              $ref: '#/components/schemas/AccessPolicyRuleActions'
            conditions:
              $ref: '#/components/schemas/AccessPolicyRuleConditions'
    AccessPolicyRuleActions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleActions'
        - type: object
          properties:
            appSignOn:
              $ref: '#/components/schemas/AccessPolicyRuleApplicationSignOn'
    AccessPolicyRuleApplicationSignOn:
      type: object
      properties:
        access:
          type: string
        verificationMethod:
          $ref: '#/components/schemas/VerificationMethod'
    AccessPolicyRuleConditions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleConditions'
        - type: object
          properties:
            device:
              $ref: '#/components/schemas/DeviceAccessPolicyRuleCondition'
            elCondition:
              $ref: '#/components/schemas/AccessPolicyRuleCustomCondition'
            userType:
              $ref: '#/components/schemas/UserTypeCondition'
    AccessPolicyRuleCustomCondition:
      properties:
        condition:
          type: string
    AcsEndpoint:
      description: An array of ACS endpoints. You can configure a maximum of 100 endpoints.
      type: object
      properties:
        index:
          type: integer
          description: Index of the URL in the array of ACS endpoints
          example: 0
        url:
          type: string
          description: URL of the ACS
          maxLength: 1024
          example: https://www.example.com/sso/saml
      required:
        - url
        - index
    ActivateFactorRequest:
      type: object
      properties:
        attestation:
          type: string
        clientData:
          type: string
        passCode:
          type: string
        registrationData:
          type: string
        stateToken:
          type: string
    Agent:
      description: Agent details
      type: object
      properties:
        id:
          type: string
          readOnly: true
        isHidden:
          type: boolean
        isLatestGAedVersion:
          type: boolean
        lastConnection:
          type: string
          format: date-time
        name:
          type: string
        operationalStatus:
          $ref: '#/components/schemas/OperationalStatus'
        poolId:
          type: string
        type:
          $ref: '#/components/schemas/AgentType'
        updateMessage:
          type: string
        updateStatus:
          $ref: '#/components/schemas/AgentUpdateInstanceStatus'
        version:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
    AgentPool:
      description: An AgentPool is a collection of agents that serve a common purpose. An AgentPool has a unique ID within an org, and contains a collection of agents disjoint to every other AgentPool (i.e. no two AgentPools share an Agent).
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
        id:
          type: string
          readOnly: true
        name:
          type: string
        operationalStatus:
          $ref: '#/components/schemas/OperationalStatus'
        type:
          $ref: '#/components/schemas/AgentType'
    AgentPoolUpdate:
      description: Various information about agent auto update configuration
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
        agentType:
          $ref: '#/components/schemas/AgentType'
        enabled:
          type: boolean
        id:
          type: string
          readOnly: true
        name:
          type: string
        notifyAdmin:
          type: boolean
        reason:
          type: string
        schedule:
          $ref: '#/components/schemas/AutoUpdateSchedule'
        sortOrder:
          type: integer
        status:
          $ref: '#/components/schemas/AgentUpdateJobStatus'
        targetVersion:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
    AgentPoolUpdateSetting:
      description: Setting for auto-update
      type: object
      properties:
        agentType:
          $ref: '#/components/schemas/AgentType'
        continueOnError:
          type: boolean
        latestVersion:
          type: string
        minimalSupportedVersion:
          type: string
        poolId:
          type: string
          readOnly: true
        poolName:
          type: string
        releaseChannel:
          $ref: '#/components/schemas/ReleaseChannel'
    AgentType:
      description: Agent types that are being monitored
      type: string
      enum:
        - AD
        - IWA
        - LDAP
        - MFA
        - OPP
        - RUM
        - Radius
    AgentUpdateInstanceStatus:
      description: Status for one agent regarding the status to auto-update that agent
      type: string
      enum:
        - Cancelled
        - Failed
        - InProgress
        - PendingCompletion
        - Scheduled
        - Success
    AgentUpdateJobStatus:
      description: Overall state for the auto-update job from admin perspective
      type: string
      enum:
        - Cancelled
        - Failed
        - InProgress
        - Paused
        - Scheduled
        - Success
    AllowedForEnum:
      type: string
      enum:
        - any
        - none
        - recovery
        - sso
    ApiToken:
      title: API Token
      description: An API token for an Okta User. This token is NOT scoped any further and can be used for any API the user has permissions to call.
      type: object
      properties:
        clientName:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        tokenWindow:
          $ref: '#/components/schemas/TimeDuration'
        userId:
          type: string
        _link:
          $ref: '#/components/schemas/LinksSelf'
      required:
        - name
    AppAndInstanceConditionEvaluatorAppOrInstance:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        type:
          $ref: '#/components/schemas/AppAndInstanceType'
    AppAndInstancePolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
        include:
          type: array
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
    AppAndInstanceType:
      type: string
      enum:
        - APP
        - APP_TYPE
    AppInstancePolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    AppLink:
      type: object
      properties:
        appAssignmentId:
          type: string
          readOnly: true
        appInstanceId:
          type: string
          readOnly: true
        appName:
          type: string
          readOnly: true
        credentialsSetup:
          type: boolean
          readOnly: true
        hidden:
          type: boolean
          readOnly: true
        id:
          type: string
          readOnly: true
        label:
          type: string
          readOnly: true
        linkUrl:
          type: string
          readOnly: true
        logoUrl:
          type: string
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
    AppUser:
      title: Application User
      description: The App User object defines a user's app-specific profile and credentials for an app.
      type: object
      properties:
        created:
          type: string
          description: Timestamp when the App User object was created
          format: date-time
          readOnly: true
          example: '2014-06-24T15:27:59.000Z'
        credentials:
          $ref: '#/components/schemas/AppUserCredentials'
        externalId:
          type: string
          description: |-
            The ID of the user in the target app that's linked to the Okta App User object.
            This value is the native app-specific identifier or primary key for the user in the target app.

            The `externalId` is set during import when the user is confirmed (reconciled) or during provisioning when the user has been successfully created in the target app.
            This value isn't populated for SSO app assignments (for example, SAML or SWA) because it isn't synchronized with a target app.
          readOnly: true
          example: 70c14cc17d3745e8a9f98d599a68329c
        id:
          type: string
          description: Unique identifier of the App User object (only required for apps with `signOnMode` or authentication schemes that don't require credentials)
          example: 00u11z6WHMYCGPCHCRFK
        lastSync:
          type: string
          description: Timestamp of the last synchronization operation. This value is only updated for apps with the `IMPORT_PROFILE_UPDATES` or `PUSH PROFILE_UPDATES` feature.
          format: date-time
          readOnly: true
          example: '2014-06-24T15:27:59.000Z'
        lastUpdated:
          type: string
          description: Timestamp when App User was last updated
          format: date-time
          readOnly: true
          example: '2014-06-24T15:28:14.000Z'
        passwordChanged:
          type: string
          description: Timestamp when the App User password was last changed
          format: date-time
          readOnly: true
          nullable: true
          example: '2014-06-24T15:27:59.000Z'
        profile:
          $ref: '#/components/schemas/AppUserProfile'
        scope:
          type: string
          description: Toggles the assignment between user or group scope
          enum:
            - USER
            - GROUP
          example: USER
        status:
          $ref: '#/components/schemas/AppUserStatus'
        statusChanged:
          type: string
          description: Timestamp when the App User status was last changed
          format: date-time
          readOnly: true
          example: '2014-06-24T15:28:14.000Z'
        syncState:
          $ref: '#/components/schemas/AppUserSyncState'
        _embedded:
          type: object
          description: Embedded resources related to the App User using the [JSON Hypertext Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06) specification
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksAppAndUser'
      required:
        - created
        - lastUpdated
        - scope
        - status
        - statusChanged
        - _links
    AppUserCredentials:
      description: Specifies a user's credentials for the app. The authentication scheme of the app determines whether a username or password can be assigned to a user.
      type: object
      properties:
        password:
          $ref: '#/components/schemas/AppUserPasswordCredential'
        userName:
          type: string
          description: Username for the app
          minLength: 1
          maxLength: 100
          example: testuser
    AppUserPasswordCredential:
      description: Specifies a password for a user. This is a write-only property. An empty `password` object is returned to indicate that a password value exists.
      type: object
      properties:
        value:
          description: Password value
          type: string
          format: password
          writeOnly: true
    AppUserProfile:
      description: |-
        App user profiles are app-specific and can be customized by the Profile Editor in the Admin Console.
        SSO apps typically don't support app user profiles, while apps with user provisioning features have app-specific profiles.
        Properties that are visible in the Admin Console for an app assignment can also be assigned through the API.
        Some properties are reference properties that are imported from the target app and can't be configured.
      additionalProperties:
        type: object
        properties: {}
      type: object
    AppUserStatus:
      description: Status of an App User
      example: ACTIVE
      type: string
      enum:
        - ACTIVE
        - APPROVED
        - DEPROVISIONED
        - IMPLICIT
        - IMPORTED
        - INACTIVE
        - MATCHED
        - PENDING
        - PROVISIONED
        - REVOKED
        - STAGED
        - SUSPENDED
        - UNASSIGNED
      x-enumDescriptions:
        ACTIVE: The App User is provisioned and is enabled to use the app. This status also occurs if the app has the `IMPORT_PROFILE_UPDATES` feature enabled and user import is confirmed, or if the app doesn't have provisioning enabled.
        INACTIVE: The App User is provisioned, but isn't enabled to use the app. App Users in this status can be reactivated with a password reset or permanently deleted.
        IMPORTED: The App User is created based on imported data.
        MATCHED: The imported user is matched with an existing App User.
        UNASSIGNED: The App User was imported, but the user-matching operation was skipped.
        SUSPENDED: The App User is provisioned, but isn't enabled to use the app. App Users in this status can be reactivated without a password reset.
        PENDING: The App User is provisioned, but in a pending state and can't use the app. The status moves to `ACTIVE` when the App User is activated.
        APPROVED: The App User was created but not provisioned. This status can occur when manual provisioning acknowledgment is required.
        REVOKED: The App User is disabled and waiting for deprovisioning acknowledgment. The App User can be deleted after deprovisioning acknowledgment.
        IMPLICIT: The App User is now migrated to use implicit app assignment.
        STAGED: The App User doesn't have `externalId` set and the background provisioning operation is queued. This applies to apps with the `PUSH_NEW_USERS` feature enabled.
        PROVISIONED: The background provisioning operation completed and the App User was assigned an `externalId` successfully.
        DEPROVISIONED: The user was removed by the provisioning operation and the `externalId` property is unassigned.
      readOnly: true
    AppUserSyncState:
      description: |-
        The synchronization state for the App User.
        The App User's `syncState` depends on whether the `PROFILE_MASTERING` feature is enabled for the app.

        > **Note:** User provisioning currently must be configured through the Admin Console.
      example: SYNCHRONIZED
      type: string
      enum:
        - DISABLED
        - ERROR
        - OUT_OF_SYNC
        - SYNCHRONIZED
        - SYNCING
      x-enumDescriptions:
        DISABLED: The provisioning feature is disabled for the app (`PROFILE_MASTERING` feature is disabled).
        OUT_OF_SYNC: The App User has changes that haven't been pushed to the target app.
        SYNCING: A background provisioning operation is running to update the user's profile in the target app.
        SYNCHRONIZED: All changes to the App User profile have successfully been synchronized with the target app.
        ERROR: A background provisioning operation failed to update the user's profile in the target app. You must resolve the provisioning task in the Admin Console before you retry the operation.
      readOnly: true
    Application:
      type: object
      properties:
        accessibility:
          $ref: '#/components/schemas/ApplicationAccessibility'
        created:
          type: string
          format: date-time
          readOnly: true
        features:
          type: array
          items:
            type: string
        id:
          type: string
          readOnly: true
        label:
          $ref: '#/components/schemas/ApplicationLabel'
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        licensing:
          $ref: '#/components/schemas/ApplicationLicensing'
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
        signOnMode:
          $ref: '#/components/schemas/ApplicationSignOnMode'
        status:
          $ref: '#/components/schemas/ApplicationLifecycleStatus'
        visibility:
          $ref: '#/components/schemas/ApplicationVisibility'
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/ApplicationLinks'
      discriminator:
        propertyName: signOnMode
        mapping:
          AUTO_LOGIN: '#/components/schemas/AutoLoginApplication'
          BASIC_AUTH: '#/components/schemas/BasicAuthApplication'
          BOOKMARK: '#/components/schemas/BookmarkApplication'
          BROWSER_PLUGIN: '#/components/schemas/BrowserPluginApplication'
          OPENID_CONNECT: '#/components/schemas/OpenIdConnectApplication'
          SAML_2_0: '#/components/schemas/SamlApplication'
          SECURE_PASSWORD_STORE: '#/components/schemas/SecurePasswordStoreApplication'
          WS_FEDERATION: '#/components/schemas/WsFederationApplication'
    ApplicationAccessibility:
      type: object
      properties:
        errorRedirectUrl:
          type: string
        loginRedirectUrl:
          type: string
        selfService:
          type: boolean
    ApplicationCredentials:
      type: object
      properties:
        signing:
          $ref: '#/components/schemas/ApplicationCredentialsSigning'
        userNameTemplate:
          $ref: '#/components/schemas/ApplicationCredentialsUsernameTemplate'
    ApplicationCredentialsOAuthClient:
      type: object
      properties:
        autoKeyRotation:
          type: boolean
        client_id:
          type: string
        client_secret:
          type: string
        token_endpoint_auth_method:
          $ref: '#/components/schemas/OAuthEndpointAuthenticationMethod'
    ApplicationCredentialsScheme:
      type: string
      enum:
        - ADMIN_SETS_CREDENTIALS
        - EDIT_PASSWORD_ONLY
        - EDIT_USERNAME_AND_PASSWORD
        - EXTERNAL_PASSWORD_SYNC
        - SHARED_USERNAME_AND_PASSWORD
    ApplicationCredentialsSigning:
      type: object
      properties:
        kid:
          type: string
        lastRotated:
          type: string
          format: date-time
          readOnly: true
        nextRotation:
          type: string
          format: date-time
          readOnly: true
        rotationMode:
          type: string
        use:
          $ref: '#/components/schemas/ApplicationCredentialsSigningUse'
    ApplicationCredentialsSigningUse:
      type: string
      enum:
        - sig
    ApplicationCredentialsUsernameTemplate:
      type: object
      properties:
        pushStatus:
          type: string
        template:
          type: string
        type:
          type: string
        userSuffix:
          type: string
    ApplicationFeature:
      description: |
        The Feature object is used to configure application feature settings.

        The only feature currently supported is `USER_PROVISIONING` for the Org2Org application type.
      type: object
      properties:
        capabilities:
          allOf:
            - $ref: '#/components/schemas/CapabilitiesObject'
        description:
          type: string
          description: Description of the feature
          example: Settings for provisioning users from Okta to a downstream application
          readOnly: true
        name:
          type: string
          description: Identifying name of the feature
          readOnly: true
          example: USER_PROVISIONING
          enum:
            - USER_PROVISIONING
          x-enumDescriptions:
            USER_PROVISIONING: Represents the **To App** provisioning feature setting in the Admin Console
        status:
          allOf:
            - $ref: '#/components/schemas/EnabledStatus'
            - default: DISABLED
            - example: ENABLED
            - readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - readOnly: true
    ApplicationGroupAssignment:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        priority:
          type: integer
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    ApplicationLabel:
      type: string
    ApplicationLayout:
      type: object
      properties:
        elements:
          type: array
          items:
            type: object
            additionalProperties: {}
        label:
          type: string
        options:
          type: object
          additionalProperties: {}
        rule:
          type: object
          properties:
            effect:
              type: string
            condition:
              $ref: '#/components/schemas/ApplicationLayoutRuleCondition'
        scope:
          type: string
        type:
          type: string
    ApplicationLayoutRuleCondition:
      type: object
      properties:
        schema:
          type: object
          additionalProperties: {}
        scope:
          type: string
    ApplicationLayouts:
      type: object
      properties:
        _links:
          type: object
          properties:
            general:
              $ref: '#/components/schemas/ApplicationLayoutsLinksItem'
            signOn:
              $ref: '#/components/schemas/ApplicationLayoutsLinksItem'
            provisioning:
              $ref: '#/components/schemas/ApplicationLayoutsLinksItem'
          readOnly: true
    ApplicationLayoutsLinksItem:
      items:
        $ref: '#/components/schemas/HrefObject'
      type: array
    ApplicationLicensing:
      type: object
      properties:
        seatCount:
          type: integer
    ApplicationLifecycleStatus:
      type: string
      enum:
        - ACTIVE
        - DELETED
        - INACTIVE
      readOnly: true
    ApplicationLinks:
      properties:
        accessPolicy:
          $ref: '#/components/schemas/HrefObject'
        activate:
          $ref: '#/components/schemas/HrefObjectActivateLink'
        deactivate:
          $ref: '#/components/schemas/HrefObjectDeactivateLink'
        groups:
          $ref: '#/components/schemas/HrefObject'
        logo:
          type: array
          items:
            $ref: '#/components/schemas/HrefObject'
        metadata:
          $ref: '#/components/schemas/HrefObject'
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
        users:
          $ref: '#/components/schemas/HrefObject'
    ApplicationSettings:
      type: object
      properties:
        identityStoreId:
          type: string
        implicitAssignment:
          type: boolean
        inlineHookId:
          type: string
        notes:
          $ref: '#/components/schemas/ApplicationSettingsNotes'
        notifications:
          $ref: '#/components/schemas/ApplicationSettingsNotifications'
    ApplicationSettingsNotes:
      type: object
      properties:
        admin:
          type: string
        enduser:
          type: string
    ApplicationSettingsNotifications:
      type: object
      properties:
        vpn:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpn'
    ApplicationSettingsNotificationsVpn:
      type: object
      properties:
        helpUrl:
          type: string
        message:
          type: string
        network:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpnNetwork'
    ApplicationSettingsNotificationsVpnNetwork:
      type: object
      properties:
        connection:
          type: string
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    ApplicationSignOnMode:
      type: string
      enum:
        - AUTO_LOGIN
        - BASIC_AUTH
        - BOOKMARK
        - BROWSER_PLUGIN
        - OPENID_CONNECT
        - SAML_1_1
        - SAML_2_0
        - SECURE_PASSWORD_STORE
        - WS_FEDERATION
    ApplicationVisibility:
      type: object
      properties:
        appLinks:
          type: object
          additionalProperties:
            type: boolean
        autoLaunch:
          type: boolean
        autoSubmitToolbar:
          type: boolean
        hide:
          $ref: '#/components/schemas/ApplicationVisibilityHide'
    ApplicationVisibilityHide:
      type: object
      properties:
        iOS:
          type: boolean
        web:
          type: boolean
    AssignGroupOwnerRequestBody:
      type: object
      properties:
        id:
          description: The `id` of the group owner
          type: string
        type:
          $ref: '#/components/schemas/GroupOwnerType'
    AssignRoleRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RoleType'
    AssociatedServerMediated:
      type: object
      properties:
        trusted:
          type: array
          description: A list of the authorization server IDs
          items:
            type: string
    AuthenticationProvider:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/AuthenticationProviderType'
    AuthenticationProviderType:
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - FEDERATION
        - IMPORT
        - LDAP
        - OKTA
        - SOCIAL
    Authenticator:
      type: object
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        key:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        provider:
          $ref: '#/components/schemas/AuthenticatorProvider'
        settings:
          $ref: '#/components/schemas/AuthenticatorSettings'
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        type:
          $ref: '#/components/schemas/AuthenticatorType'
        _links:
          $ref: '#/components/schemas/AuthenticatorLinks'
    AuthenticatorIdentity:
      description: Represents a particular authenticator serving as a constraint on a method
      type: object
      properties:
        key:
          type: string
    AuthenticatorLinks:
      allOf:
        - $ref: '#/components/schemas/LinksSelfAndLifecycle'
        - type: object
          properties:
            methods:
              description: Link to Authenticator methods
              allOf:
                - $ref: '#/components/schemas/HrefObject'
    AuthenticatorMethodAlgorithm:
      description: The encryption algorithm for this authenticator method
      type: string
      enum:
        - ES256
        - RS256
    AuthenticatorMethodBase:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        type:
          $ref: '#/components/schemas/AuthenticatorMethodType'
        _links:
          $ref: '#/components/schemas/LinksSelfAndLifecycle'
      discriminator:
        propertyName: type
        mapping:
          sms: '#/components/schemas/AuthenticatorMethodSimple'
          voice: '#/components/schemas/AuthenticatorMethodSimple'
          email: '#/components/schemas/AuthenticatorMethodSimple'
          push: '#/components/schemas/AuthenticatorMethodPush'
          signed_nonce: '#/components/schemas/AuthenticatorMethodSignedNonce'
          totp: '#/components/schemas/AuthenticatorMethodTotp'
          otp: '#/components/schemas/AuthenticatorMethodOtp'
          password: '#/components/schemas/AuthenticatorMethodSimple'
          webauthn: '#/components/schemas/AuthenticatorMethodWebAuthn'
          security_question: '#/components/schemas/AuthenticatorMethodSimple'
          idp: '#/components/schemas/AuthenticatorMethodWithVerifiableProperties'
          duo: '#/components/schemas/AuthenticatorMethodWithVerifiableProperties'
          cert: '#/components/schemas/AuthenticatorMethodWithVerifiableProperties'
    AuthenticatorMethodConstraint:
      description: 'Limits the authenticators that can be used for a given method. Currently, only the `otp` method supports constraints, and Google authenticator (key : ''google_otp'') is the only allowed authenticator.'
      type: object
      properties:
        allowedAuthenticators:
          type: array
          items:
            $ref: '#/components/schemas/AuthenticatorIdentity'
        method:
          enum:
            - otp
    AuthenticatorMethodOtp:
      allOf:
        - $ref: '#/components/schemas/AuthenticatorMethodWithVerifiableProperties'
        - type: object
          properties:
            acceptableAdjacentIntervals:
              type: integer
              minimum: 0
              maximum: 10
            algorithm:
              $ref: '#/components/schemas/OtpTotpAlgorithm'
            encoding:
              $ref: '#/components/schemas/OtpTotpEncoding'
            factorProfileId:
              type: string
            passCodeLength:
              type: integer
              minimum: 6
              maximum: 10
              multipleOf: 2
            protocol:
              $ref: '#/components/schemas/OtpProtocol'
            timeIntervalInSeconds:
              type: integer
    AuthenticatorMethodProperty:
      type: string
      enum:
        - DEVICE_BOUND
        - HARDWARE_PROTECTED
        - PHISHING_RESISTANT
        - USER_PRESENCE
        - USER_VERIFYING
    AuthenticatorMethodPush:
      allOf:
        - $ref: '#/components/schemas/AuthenticatorMethodBase'
        - type: object
          properties:
            settings:
              type: object
              properties:
                algorithms:
                  type: array
                  items:
                    $ref: '#/components/schemas/AuthenticatorMethodAlgorithm'
                keyProtection:
                  $ref: '#/components/schemas/PushMethodKeyProtection'
                transactionTypes:
                  type: array
                  items:
                    $ref: '#/components/schemas/AuthenticatorMethodTransactionType'
    AuthenticatorMethodSignedNonce:
      allOf:
        - $ref: '#/components/schemas/AuthenticatorMethodBase'
        - type: object
          properties:
            settings:
              type: object
              properties:
                algorithms:
                  type: array
                  items:
                    $ref: '#/components/schemas/AuthenticatorMethodAlgorithm'
                keyProtection:
                  $ref: '#/components/schemas/PushMethodKeyProtection'
                showSignInWithOV:
                  $ref: '#/components/schemas/ShowSignInWithOV'
    AuthenticatorMethodSimple:
      allOf:
        - $ref: '#/components/schemas/AuthenticatorMethodBase'
    AuthenticatorMethodTotp:
      allOf:
        - $ref: '#/components/schemas/AuthenticatorMethodBase'
        - type: object
          properties:
            settings:
              type: object
              properties:
                timeIntervalInSeconds:
                  type: integer
                encoding:
                  type: string
                algorithm:
                  type: string
                passCodeLength:
                  type: integer
    AuthenticatorMethodTransactionType:
      type: string
      enum:
        - CIBA
        - LOGIN
    AuthenticatorMethodType:
      type: string
      enum:
        - cert
        - duo
        - email
        - idp
        - otp
        - password
        - push
        - security_question
        - signed_nonce
        - sms
        - totp
        - voice
        - webauthn
    AuthenticatorMethodWebAuthn:
      allOf:
        - $ref: '#/components/schemas/AuthenticatorMethodBase'
        - type: object
          properties:
            settings:
              type: object
              properties:
                userVerification:
                  $ref: '#/components/schemas/UserVerificationEnum'
                attachment:
                  $ref: '#/components/schemas/WebAuthnAttachment'
    AuthenticatorMethodWithVerifiableProperties:
      allOf:
        - $ref: '#/components/schemas/AuthenticatorMethodBase'
        - type: object
          properties:
            verifiableProperties:
              type: array
              items:
                $ref: '#/components/schemas/AuthenticatorMethodProperty'
    AuthenticatorProvider:
      properties:
        configuration:
          $ref: '#/components/schemas/AuthenticatorProviderConfiguration'
        type:
          type: string
    AuthenticatorProviderConfiguration:
      properties:
        authPort:
          type: integer
        hostName:
          type: string
        instanceId:
          type: string
        sharedSecret:
          type: string
        userNameTemplate:
          $ref: '#/components/schemas/AuthenticatorProviderConfigurationUserNameTemplate'
    AuthenticatorProviderConfigurationUserNameTemplate:
      properties:
        template:
          type: string
    AuthenticatorSettings:
      type: object
      properties:
        allowedFor:
          $ref: '#/components/schemas/AllowedForEnum'
        appInstanceId:
          type: string
        channelBinding:
          $ref: '#/components/schemas/ChannelBinding'
        compliance:
          $ref: '#/components/schemas/Compliance'
        tokenLifetimeInMinutes:
          type: integer
        userVerification:
          $ref: '#/components/schemas/UserVerificationEnum'
    AuthenticatorType:
      type: string
      enum:
        - app
        - email
        - federated
        - password
        - phone
        - security_key
        - security_question
    AuthorizationServer:
      type: object
      properties:
        audiences:
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
          readOnly: true
        credentials:
          $ref: '#/components/schemas/AuthorizationServerCredentials'
        description:
          type: string
        id:
          type: string
          readOnly: true
        issuer:
          type: string
        issuerMode:
          $ref: '#/components/schemas/IssuerMode'
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    AuthorizationServerCredentials:
      type: object
      properties:
        signing:
          $ref: '#/components/schemas/AuthorizationServerCredentialsSigningConfig'
    AuthorizationServerCredentialsRotationMode:
      type: string
      enum:
        - AUTO
        - MANUAL
    AuthorizationServerCredentialsSigningConfig:
      type: object
      properties:
        kid:
          type: string
        lastRotated:
          type: string
          format: date-time
          readOnly: true
        nextRotation:
          type: string
          format: date-time
          readOnly: true
        rotationMode:
          $ref: '#/components/schemas/AuthorizationServerCredentialsRotationMode'
        use:
          $ref: '#/components/schemas/AuthorizationServerCredentialsUse'
    AuthorizationServerCredentialsUse:
      type: string
      enum:
        - sig
    AuthorizationServerPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/PolicyRuleConditions'
    AuthorizationServerPolicyRule:
      allOf:
        - $ref: '#/components/schemas/PolicyRule'
        - type: object
          properties:
            actions:
              $ref: '#/components/schemas/AuthorizationServerPolicyRuleActions'
            conditions:
              $ref: '#/components/schemas/AuthorizationServerPolicyRuleConditions'
    AuthorizationServerPolicyRuleActions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleActions'
        - type: object
          properties:
            token:
              $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleAction'
    AuthorizationServerPolicyRuleConditions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleConditions'
        - type: object
          properties:
            clients:
              $ref: '#/components/schemas/ClientPolicyCondition'
            grantTypes:
              $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
            people:
              $ref: '#/components/schemas/PolicyPeopleCondition'
            scopes:
              $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
    AutoLoginApplication:
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/SchemeApplicationCredentials'
            name:
              type: string
            settings:
              $ref: '#/components/schemas/AutoLoginApplicationSettings'
    AutoLoginApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            signOn:
              $ref: '#/components/schemas/AutoLoginApplicationSettingsSignOn'
    AutoLoginApplicationSettingsSignOn:
      type: object
      properties:
        loginUrl:
          type: string
        redirectUrl:
          type: string
    AutoUpdateSchedule:
      description: The schedule of auto-update configured by admin.
      type: object
      properties:
        cron:
          type: string
        delay:
          description: delay in days
          type: integer
        duration:
          description: duration in minutes
          type: integer
        lastUpdated:
          description: last time when the updated finished (success or failed, exclude cancelled), null if job haven't finished once yet.
          type: string
          format: date-time
        timezone:
          type: string
    AwsAccountId:
      description: Your AWS account ID
      minLength: 12
      maxLength: 12
      example: 123456789012
      type: string
    AwsEventSourceName:
      description: An alphanumeric name (no spaces) to identify this event source in AWS EventBridge
      minLength: 1
      maxLength: 75
      example: your-event-source-name
      type: string
      pattern: ^[a-zA-Z0-9.\-_]$
    AwsRegion:
      description: The destination AWS region where your event source is located
      type: string
      enum:
        - ap-northeast-1
        - ap-northeast-2
        - ap-northeast-3
        - ap-south-1
        - ap-southeast-1
        - ap-southeast-2
        - ca-central-1
        - eu-central-1
        - eu-north-1
        - eu-west-1
        - eu-west-2
        - eu-west-3
        - sa-east-1
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
    BaseEmailDomain:
      type: object
      properties:
        displayName:
          type: string
        userName:
          type: string
      required:
        - displayName
        - userName
    BaseEmailServer:
      type: object
      properties:
        alias:
          type: string
          description: A name to identify this configuration
        enabled:
          type: boolean
          description: True if and only if all email traffic should be routed through this SMTP Server
        host:
          type: string
          description: The address of the SMTP Server
        port:
          type: integer
          description: The port number of the SMTP Server
        username:
          type: string
          description: The username to use with your SMTP Server
    BasicApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/BasicApplicationSettingsApplication'
    BasicApplicationSettingsApplication:
      type: object
      properties:
        authURL:
          type: string
        url:
          type: string
    BasicAuthApplication:
      x-okta-defined-as:
        name: template_basic_auth
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/SchemeApplicationCredentials'
            name:
              type: string
              default: template_basic_auth
            settings:
              $ref: '#/components/schemas/BasicApplicationSettings'
    BeforeScheduledActionPolicyRuleCondition:
      type: object
      properties:
        duration:
          $ref: '#/components/schemas/Duration'
        lifecycleAction:
          $ref: '#/components/schemas/ScheduledUserLifecycleAction'
    BehaviorRule:
      title: Behavior Detection Rule
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 128
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        type:
          $ref: '#/components/schemas/BehaviorRuleType'
        _link:
          $ref: '#/components/schemas/LinksSelf'
      required:
        - name
        - type
      discriminator:
        propertyName: type
        mapping:
          ANOMALOUS_LOCATION: '#/components/schemas/BehaviorRuleAnomalousLocation'
          ANOMALOUS_IP: '#/components/schemas/BehaviorRuleAnomalousIP'
          ANOMALOUS_DEVICE: '#/components/schemas/BehaviorRuleAnomalousDevice'
          VELOCITY: '#/components/schemas/BehaviorRuleVelocity'
    BehaviorRuleAnomalousDevice:
      allOf:
        - $ref: '#/components/schemas/BehaviorRule'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousDevice'
    BehaviorRuleAnomalousIP:
      allOf:
        - $ref: '#/components/schemas/BehaviorRule'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousIP'
    BehaviorRuleAnomalousLocation:
      allOf:
        - $ref: '#/components/schemas/BehaviorRule'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousLocation'
    BehaviorRuleSettings:
      title: Behavior Detection Rule Settings
      type: object
    BehaviorRuleSettingsAnomalousDevice:
      allOf:
        - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'
    BehaviorRuleSettingsAnomalousIP:
      allOf:
        - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'
        - type: object
          properties:
            maxEventsUsedForEvaluation:
              type: integer
              minimum: 0
              maximum: 100
              default: 50
    BehaviorRuleSettingsAnomalousLocation:
      allOf:
        - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'
        - type: object
          properties:
            granularity:
              $ref: '#/components/schemas/LocationGranularity'
            radiusKilometers:
              type: integer
              description: Required when `granularity` is `LAT_LONG`. Radius from the provided coordinates in kilometers.
          required:
            - granularity
    BehaviorRuleSettingsHistoryBased:
      allOf:
        - $ref: '#/components/schemas/BehaviorRuleSettings'
        - title: Behavior Detection Rule Settings based on Event History
          type: object
          properties:
            maxEventsUsedForEvaluation:
              type: integer
              minimum: 1
              maximum: 100
              default: 20
            minEventsNeededForEvaluation:
              type: integer
              minimum: 0
              maximum: 10
              default: 0
    BehaviorRuleSettingsVelocity:
      allOf:
        - $ref: '#/components/schemas/BehaviorRuleSettings'
        - title: Behavior Detection Rule Settings based on device velocity in kilometers per hour.
          type: object
          properties:
            velocityKph:
              type: integer
              minimum: 1
              default: 805
          required:
            - velocityKph
    BehaviorRuleType:
      type: string
      enum:
        - ANOMALOUS_DEVICE
        - ANOMALOUS_IP
        - ANOMALOUS_LOCATION
        - VELOCITY
    BehaviorRuleVelocity:
      allOf:
        - $ref: '#/components/schemas/BehaviorRule'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/BehaviorRuleSettingsVelocity'
    BookmarkApplication:
      x-okta-defined-as:
        name: bookmark
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/ApplicationCredentials'
            name:
              type: string
              default: bookmark
            settings:
              $ref: '#/components/schemas/BookmarkApplicationSettings'
    BookmarkApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/BookmarkApplicationSettingsApplication'
    BookmarkApplicationSettingsApplication:
      type: object
      properties:
        requestIntegration:
          type: boolean
        url:
          type: string
    BouncesRemoveListError:
      type: object
      properties:
        emailAddress:
          type: string
        reason:
          type: string
    BouncesRemoveListObj:
      type: object
      properties:
        emailAddresses:
          type: array
          items:
            type: string
    BouncesRemoveListResult:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/BouncesRemoveListError'
    Brand:
      type: object
      properties:
        agreeToCustomPrivacyPolicy:
          type: boolean
        customPrivacyPolicyUrl:
          type: string
        defaultApp:
          $ref: '#/components/schemas/DefaultApp'
        emailDomainId:
          type: string
        id:
          readOnly: true
          type: string
        isDefault:
          readOnly: true
          type: boolean
        locale:
          $ref: '#/components/schemas/Language'
        name:
          type: string
        removePoweredByOkta:
          type: boolean
    BrandDomains:
      title: BrandDomains
      items:
        $ref: '#/components/schemas/DomainResponse'
      type: array
    BrandRequest:
      type: object
      properties:
        agreeToCustomPrivacyPolicy:
          type: boolean
        customPrivacyPolicyUrl:
          type: string
        defaultApp:
          $ref: '#/components/schemas/DefaultApp'
        emailDomainId:
          type: string
        locale:
          $ref: '#/components/schemas/Language'
        name:
          type: string
        removePoweredByOkta:
          type: boolean
    BrandWithEmbedded:
      allOf:
        - $ref: '#/components/schemas/Brand'
      type: object
      properties:
        _embedded:
          type: object
          properties:
            themes:
              type: array
              items:
                $ref: '#/components/schemas/ThemeResponse'
            domains:
              items:
                $ref: '#/components/schemas/DomainResponse'
              type: array
            emailDomain:
              $ref: '#/components/schemas/EmailDomainResponse'
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                themes:
                  $ref: '#/components/schemas/HrefObject'
    BrowserPluginApplication:
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/SchemeApplicationCredentials'
            name:
              type: string
            settings:
              $ref: '#/components/schemas/SwaApplicationSettings'
    BulkDeleteRequestBody:
      type: object
      properties:
        entityType:
          type: string
          enum:
            - USERS
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/IdentitySourceUserProfileForDelete'
    BulkUpsertRequestBody:
      type: object
      properties:
        entityType:
          type: string
          enum:
            - USERS
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/IdentitySourceUserProfileForUpsert'
    CAPTCHAInstance:
      title: CAPTCHAInstance
      description: ''
      type: object
      properties:
        id:
          description: The unique key for the CAPTCHA instance
          type: string
          readOnly: true
        name:
          description: The name of the CAPTCHA instance
          type: string
        secretKey:
          description: The secret key issued from the CAPTCHA provider to perform server-side validation for a CAPTCHA token
          type: string
          writeOnly: true
        siteKey:
          description: The site key issued from the CAPTCHA provider to render a CAPTCHA on a page
          type: string
        type:
          $ref: '#/components/schemas/CAPTCHAType'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    CAPTCHAType:
      description: The type of CAPTCHA provider
      type: string
      enum:
        - HCAPTCHA
        - RECAPTCHA_V2
    CallUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/CallUserFactorProfile'
    CallUserFactorProfile:
      type: object
      properties:
        phoneExtension:
          type: string
        phoneNumber:
          type: string
    CapabilitiesCreateObject:
      description: |
        Determines whether Okta assigns a new application account to each user managed by Okta.

        Okta doesn't create a new account if it detects that the username specified in Okta already exists in the application.
        The user's Okta username is assigned by default.
      type: object
      properties:
        lifecycleCreate:
          $ref: '#/components/schemas/LifecycleCreateSettingObject'
    CapabilitiesObject:
      description: Defines the configurations related to an application feature
      type: object
      properties:
        create:
          $ref: '#/components/schemas/CapabilitiesCreateObject'
        update:
          $ref: '#/components/schemas/CapabilitiesUpdateObject'
    CapabilitiesUpdateObject:
      description: Determines whether updates to a user's profile are pushed to the application
      type: object
      properties:
        lifecycleDeactivate:
          $ref: '#/components/schemas/LifecycleDeactivateSettingObject'
        password:
          $ref: '#/components/schemas/PasswordSettingObject'
        profile:
          $ref: '#/components/schemas/ProfileSettingObject'
    CatalogApplication:
      type: object
      properties:
        category:
          type: string
        description:
          type: string
        displayName:
          type: string
        features:
          type: array
          items:
            type: string
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        signOnModes:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/CatalogApplicationStatus'
        verificationStatus:
          type: string
        website:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
    CatalogApplicationStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    ChangeEnum:
      description: Determines whether a change in a user's password also updates the user's password in the application
      default: KEEP_EXISTING
      example: CHANGE
      type: string
      enum:
        - CHANGE
        - KEEP_EXISTING
    ChangePasswordRequest:
      type: object
      properties:
        newPassword:
          $ref: '#/components/schemas/PasswordCredential'
        oldPassword:
          $ref: '#/components/schemas/PasswordCredential'
        revokeSessions:
          type: boolean
    ChannelBinding:
      type: object
      properties:
        required:
          $ref: '#/components/schemas/RequiredEnum'
        style:
          type: string
    ChromeBrowserVersion:
      description: Current version of the Chrome Browser
      type: object
      properties:
        minimum:
          type: string
    ClientPolicyCondition:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
    Compliance:
      type: object
      properties:
        fips:
          $ref: '#/components/schemas/FipsEnum'
    ContentSecurityPolicySetting:
      type: object
      properties:
        mode:
          type: string
          enum:
            - enforced
            - report_only
        reportUri:
          type: string
        srcList:
          type: array
          items:
            type: string
    ContextPolicyRuleCondition:
      allOf:
        - $ref: '#/components/schemas/DevicePolicyRuleCondition'
        - type: object
          properties:
            expression:
              type: string
    CreateBrandRequest:
      title: CreateBrandRequest
      type: object
      properties:
        name:
          type: string
      required:
        - name
    CreateIamRoleRequest:
      type: object
      properties:
        description:
          type: string
          description: Description of the role
        label:
          type: string
          description: Unique label for the role
        permissions:
          type: array
          description: Array of permissions that the role will grant. See [Permission Types](https://developer.okta.com/docs/concepts/role-assignment/#permission-types).
          items:
            $ref: '#/components/schemas/RolePermissionType'
      required:
        - label
        - description
        - permissions
    CreateResourceSetRequest:
      type: object
      properties:
        description:
          type: string
          description: Description of the Resource Set
        label:
          type: string
          description: Unique label for the Resource Set
        resources:
          type: array
          items:
            type: string
    CreateSessionRequest:
      type: object
      properties:
        sessionToken:
          type: string
          description: The session token obtained during authentication
    CreateUISchema:
      description: The request body properties for the new UI Schema
      type: object
      properties:
        uiSchema:
          type: object
          description: Updated schema property expressions (Okta object or App Instance object)
          $ref: '#/components/schemas/UISchemaObject'
    CreateUpdateIamRolePermissionRequest:
      type: object
      properties:
        conditions:
          $ref: '#/components/schemas/PermissionConditions'
    CreateUserRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        groupIds:
          type: array
          items:
            type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        realmId:
          type: string
          description: The ID of the realm in which the user is residing
          example: guo1bfiNtSnZYILxO0g4
          x-okta-lifecycle:
            features:
              - UD_REALMS
        type:
          $ref: '#/components/schemas/UserType'
      required:
        - profile
    Csr:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        csr:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        kty:
          type: string
          readOnly: true
    CsrMetadata:
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/CsrMetadataSubject'
        subjectAltNames:
          $ref: '#/components/schemas/CsrMetadataSubjectAltNames'
    CsrMetadataSubject:
      type: object
      properties:
        commonName:
          type: string
        countryName:
          type: string
        localityName:
          type: string
        organizationalUnitName:
          type: string
        organizationName:
          type: string
        stateOrProvinceName:
          type: string
    CsrMetadataSubjectAltNames:
      type: object
      properties:
        dnsNames:
          type: array
          items:
            type: string
    CustomHotpUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            factorProfileId:
              type: string
            profile:
              $ref: '#/components/schemas/CustomHotpUserFactorProfile'
    CustomHotpUserFactorProfile:
      type: object
      properties:
        sharedSecret:
          type: string
    CustomizablePage:
      type: object
      properties:
        pageContent:
          type: string
    DNSRecord:
      description: DNS TXT and CNAME records to be registered for the Domain
      type: object
      properties:
        expiration:
          description: DNS TXT record expiration
          type: string
        fqdn:
          description: DNS record name
          type: string
          example: _oktaverification.login.example.com
        recordType:
          $ref: '#/components/schemas/DNSRecordType'
        values:
          description: DNS record value
          type: array
          items:
            type: string
          example:
            - 79496f234c814638b1cc44f51a782781
    DNSRecordType:
      example: TXT
      type: string
      enum:
        - CNAME
        - TXT
    DTCChromeOS:
      description: Google Chrome Device Trust Connector provider
      type: object
      properties:
        allowScreenLock:
          description: Indicates whether the AllowScreenLock enterprise policy is enabled
          type: boolean
        browserVersion:
          $ref: '#/components/schemas/ChromeBrowserVersion'
        builtInDnsClientEnabled:
          description: Indicates if a software stack is used to communicate with the DNS server
          type: boolean
        chromeRemoteDesktopAppBlocked:
          description: Indicates whether access to the Chrome Remote Desktop application is blocked through a policy
          type: boolean
        deviceEnrollmentDomain:
          description: Enrollment domain of the customer that is currently managing the device
          type: string
        diskEnrypted:
          description: Indicates whether the main disk is encrypted
          type: boolean
        keyTrustLevel:
          $ref: '#/components/schemas/KeyTrustLevelOSMode'
        osFirewall:
          description: Indicates whether a firewall is enabled at the OS-level on the device
          type: boolean
        osVersion:
          $ref: '#/components/schemas/OSVersion'
        passwordProtectionWarningTrigger:
          $ref: '#/components/schemas/PasswordProtectionWarningTrigger'
        realtimeUrlCheckMode:
          description: Indicates whether enterprise-grade (custom) unsafe URL scanning is enabled
          type: boolean
        safeBrowsingProtectionLevel:
          $ref: '#/components/schemas/SafeBrowsingProtectionLevel'
        screenLockSecured:
          description: Indicates whether the device is password-protected
          type: boolean
        siteIsolationEnabled:
          description: Indicates whether the Site Isolation (also known as **Site Per Process**) setting is enabled
          type: boolean
    DTCMacOS:
      description: Google Chrome Device Trust Connector provider
      type: object
      properties:
        browserVersion:
          $ref: '#/components/schemas/ChromeBrowserVersion'
        builtInDnsClientEnabled:
          description: Indicates if a software stack is used to communicate with the DNS server
          type: boolean
        chromeRemoteDesktopAppBlocked:
          description: Indicates whether access to the Chrome Remote Desktop application is blocked through a policy
          type: boolean
        deviceEnrollmentDomain:
          description: Enrollment domain of the customer that is currently managing the device
          type: string
        diskEnrypted:
          description: Indicates whether the main disk is encrypted
          type: boolean
        keyTrustLevel:
          $ref: '#/components/schemas/KeyTrustLevelBrowserKey'
        osFirewall:
          description: Indicates whether a firewall is enabled at the OS-level on the device
          type: boolean
        osVersion:
          $ref: '#/components/schemas/OSVersion'
        passwordProtectionWarningTrigger:
          $ref: '#/components/schemas/PasswordProtectionWarningTrigger'
        realtimeUrlCheckMode:
          description: Indicates whether enterprise-grade (custom) unsafe URL scanning is enabled
          type: boolean
        safeBrowsingProtectionLevel:
          $ref: '#/components/schemas/SafeBrowsingProtectionLevel'
        screenLockSecured:
          description: Indicates whether the device is password-protected
          type: boolean
        siteIsolationEnabled:
          description: Indicates whether the Site Isolation (also known as **Site Per Process**) setting is enabled
          type: boolean
    DTCWindows:
      description: Google Chrome Device Trust Connector provider
      type: object
      properties:
        browserVersion:
          $ref: '#/components/schemas/ChromeBrowserVersion'
        builtInDnsClientEnabled:
          description: Indicates if a software stack is used to communicate with the DNS server
          type: boolean
        chromeRemoteDesktopAppBlocked:
          description: Indicates whether access to the Chrome Remote Desktop application is blocked through a policy
          type: boolean
        crowdStrikeAgentId:
          description: Agent ID of an installed CrowdStrike agent
          type: string
        crowdStrikeCustomerId:
          description: Customer ID of an installed CrowdStrike agent
          type: string
        deviceEnrollmentDomain:
          description: Enrollment domain of the customer that is currently managing the device
          type: string
        diskEnrypted:
          description: Indicates whether the main disk is encrypted
          type: boolean
        keyTrustLevel:
          $ref: '#/components/schemas/KeyTrustLevelBrowserKey'
        osFirewall:
          description: Indicates whether a firewall is enabled at the OS-level on the device
          type: boolean
        osVersion:
          $ref: '#/components/schemas/OSVersion'
        passwordProtectionWarningTrigger:
          $ref: '#/components/schemas/PasswordProtectionWarningTrigger'
        realtimeUrlCheckMode:
          description: Indicates whether enterprise-grade (custom) unsafe URL scanning is enabled
          type: boolean
        safeBrowsingProtectionLevel:
          $ref: '#/components/schemas/SafeBrowsingProtectionLevel'
        screenLockSecured:
          description: Indicates whether the device is password-protected
          type: boolean
        secureBootEnabled:
          description: Indicates whether the device's startup software has its Secure Boot feature enabled
          type: boolean
        siteIsolationEnabled:
          description: Indicates whether the Site Isolation (also known as **Site Per Process**) setting is enabled
          type: boolean
        thirdPartyBlockingEnabled:
          description: Indicates whether Chrome is blocking third-party software injection
          type: boolean
        windowsMachineDomain:
          description: Windows domain that the current machine has joined
          type: string
        windowsUserDomain:
          description: Windows domain for the current OS user
          type: string
    DefaultApp:
      type: object
      properties:
        appInstanceId:
          type: string
        appLinkName:
          type: string
        classicApplicationUri:
          type: string
    Device:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the device was created
          readOnly: true
        id:
          type: string
          description: Unique key for the device
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the device was last updated
          readOnly: true
        profile:
          $ref: '#/components/schemas/DeviceProfile'
        resourceAlternateId:
          type: string
          readOnly: true
        resourceDisplayName:
          $ref: '#/components/schemas/DeviceDisplayName'
        resourceId:
          type: string
          description: Alternate key for the `id`
          readOnly: true
        resourceType:
          type: string
          default: UDDevice
          readOnly: true
        status:
          $ref: '#/components/schemas/DeviceStatus'
        _links:
          $ref: '#/components/schemas/LinksSelfAndFullUsersLifecycle'
    DeviceAccessPolicyRuleCondition:
      allOf:
        - $ref: '#/components/schemas/DevicePolicyRuleCondition'
        - type: object
          properties:
            managed:
              type: boolean
            registered:
              type: boolean
    DeviceAssurance:
      title: DeviceAssurance
      type: object
      properties:
        createdBy:
          type: string
          readOnly: true
        createdDate:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdatedBy:
          type: string
          readOnly: true
        lastUpdatedDate:
          type: string
          readOnly: true
        name:
          type: string
          description: Display name of the Device Assurance Policy
        platform:
          $ref: '#/components/schemas/Platform'
        _links:
          $ref: '#/components/schemas/LinksSelf'
      discriminator:
        propertyName: platform
        mapping:
          WINDOWS: '#/components/schemas/DeviceAssuranceWindowsPlatform'
          MACOS: '#/components/schemas/DeviceAssuranceMacOSPlatform'
          CHROMEOS: '#/components/schemas/DeviceAssuranceChromeOSPlatform'
          IOS: '#/components/schemas/DeviceAssuranceIOSPlatform'
          ANDROID: '#/components/schemas/DeviceAssuranceAndroidPlatform'
    DeviceAssuranceAndroidPlatform:
      allOf:
        - $ref: '#/components/schemas/DeviceAssurance'
        - type: object
          properties:
            diskEncryptionType:
              type: object
              properties:
                include:
                  type: array
                  items:
                    $ref: '#/components/schemas/DiskEncryptionType'
            jailbreak:
              type: boolean
            osVersion:
              $ref: '#/components/schemas/OSVersion'
            screenLockType:
              type: object
              properties:
                include:
                  type: array
                  items:
                    $ref: '#/components/schemas/ScreenLockType'
            secureHardwarePresent:
              type: boolean
    DeviceAssuranceChromeOSPlatform:
      x-okta-lifecycle:
        features:
          - GOOGLE_DEVICE_CONTEXT_CONNECTOR
      allOf:
        - $ref: '#/components/schemas/DeviceAssurance'
        - type: object
          properties:
            thirdPartySignalProviders:
              type: object
              description: Settings for third-party signal providers (based on the `CHROMEOS` platform)
              properties:
                dtc:
                  $ref: '#/components/schemas/DTCChromeOS'
    DeviceAssuranceIOSPlatform:
      allOf:
        - $ref: '#/components/schemas/DeviceAssurance'
        - type: object
          properties:
            diskEncryptionType:
              type: object
              properties:
                include:
                  type: array
                  items:
                    $ref: '#/components/schemas/DiskEncryptionType'
            jailbreak:
              type: boolean
            osVersion:
              $ref: '#/components/schemas/OSVersion'
            screenLockType:
              type: object
              properties:
                include:
                  type: array
                  items:
                    $ref: '#/components/schemas/ScreenLockType'
            secureHardwarePresent:
              type: boolean
    DeviceAssuranceMacOSPlatform:
      allOf:
        - $ref: '#/components/schemas/DeviceAssurance'
        - type: object
          properties:
            diskEncryptionType:
              type: object
              properties:
                include:
                  type: array
                  items:
                    $ref: '#/components/schemas/DiskEncryptionType'
            jailbreak:
              type: boolean
            osVersion:
              $ref: '#/components/schemas/OSVersion'
            screenLockType:
              type: object
              properties:
                include:
                  type: array
                  items:
                    $ref: '#/components/schemas/ScreenLockType'
            secureHardwarePresent:
              type: boolean
            thirdPartySignalProviders:
              x-okta-lifecycle:
                features:
                  - GOOGLE_DEVICE_CONTEXT_CONNECTOR
              type: object
              description: Settings for third-party signal providers (based on the `MACOS` platform)
              properties:
                dtc:
                  $ref: '#/components/schemas/DTCMacOS'
    DeviceAssuranceWindowsPlatform:
      allOf:
        - $ref: '#/components/schemas/DeviceAssurance'
        - type: object
          properties:
            diskEncryptionType:
              type: object
              properties:
                include:
                  type: array
                  items:
                    $ref: '#/components/schemas/DiskEncryptionType'
            jailbreak:
              type: boolean
            osVersion:
              $ref: '#/components/schemas/OSVersion'
            screenLockType:
              type: object
              properties:
                include:
                  type: array
                  items:
                    $ref: '#/components/schemas/ScreenLockType'
            secureHardwarePresent:
              type: boolean
            thirdPartySignalProviders:
              x-okta-lifecycle:
                features:
                  - GOOGLE_DEVICE_CONTEXT_CONNECTOR
              type: object
              description: Settings for third-party signal providers (based on the `WINDOWS` platform)
              properties:
                dtc:
                  $ref: '#/components/schemas/DTCWindows'
    DeviceDisplayName:
      description: Display name of the device
      type: object
      properties:
        sensitive:
          type: boolean
        value:
          type: string
    DevicePlatform:
      description: OS platform of the device
      type: string
      enum:
        - ANDROID
        - IOS
        - MACOS
        - WINDOWS
    DevicePolicyMDMFramework:
      type: string
      enum:
        - AFW
        - NATIVE
        - SAFE
    DevicePolicyPlatformType:
      type: string
      enum:
        - ANDROID
        - IOS
        - OSX
        - WINDOWS
    DevicePolicyRuleCondition:
      type: object
      properties:
        migrated:
          type: boolean
        platform:
          $ref: '#/components/schemas/DevicePolicyRuleConditionPlatform'
        rooted:
          type: boolean
        trustLevel:
          $ref: '#/components/schemas/DevicePolicyTrustLevel'
    DevicePolicyRuleConditionPlatform:
      type: object
      properties:
        supportedMDMFrameworks:
          type: array
          items:
            $ref: '#/components/schemas/DevicePolicyMDMFramework'
        types:
          type: array
          items:
            $ref: '#/components/schemas/DevicePolicyPlatformType'
    DevicePolicyTrustLevel:
      type: string
      enum:
        - ANY
        - TRUSTED
    DeviceProfile:
      type: object
      properties:
        diskEncryptionType:
          $ref: '#/components/schemas/DiskEncryptionTypeDef'
        displayName:
          type: string
          description: Display name of the device
          minLength: 1
          maxLength: 255
        imei:
          type: string
          description: International Mobile Equipment Identity (IMEI) of the device
          minLength: 14
          maxLength: 17
        integrityJailbreak:
          type: boolean
          description: Indicates if the device is jailbroken or rooted. Only applicable to `IOS` and `ANDROID` platforms
        manufacturer:
          type: string
          description: Name of the manufacturer of the device
          maxLength: 127
        meid:
          type: string
          description: Mobile equipment identifier of the device
          maxLength: 14
        model:
          type: string
          description: Model of the device
          maxLength: 127
        osVersion:
          type: string
          description: Version of the device OS
          maxLength: 127
        platform:
          $ref: '#/components/schemas/DevicePlatform'
        registered:
          type: boolean
          description: Indicates if the device is registered at Okta
        secureHardwarePresent:
          type: boolean
          description: Indicates if the device contains a secure hardware functionality
        serialNumber:
          type: string
          description: Serial number of the device
          maxLength: 127
        sid:
          type: string
          description: Windows Security identifier of the device
          maxLength: 256
        tpmPublicKeyHash:
          type: string
          description: Windows Trsted Platform Module hash value
        udid:
          type: string
          description: macOS Unique Device identifier of the device
          maxLength: 47
      required:
        - displayName
        - platform
        - registered
    DeviceStatus:
      description: The state object of the device
      type: string
      enum:
        - ACTIVE
        - DEACTIVATED
        - SUSPENDED
        - UNSUSPENDED
      x-enumDescriptions:
        ACTIVE: Use activated devices to create and delete Device user links
        DEACTIVATED: Deactivation causes a Device to lose all device user links. Set the Device status to DEACTIVATED before deleting it.
        SUSPENDED: Use suspended devices to create and delete device user links. You can only unsuspend or deactivate suspended devices.
        UNSUSPENDED: Returns a suspended Device to ACTIVE.
    DeviceUser:
      type: object
      properties:
        created:
          type: string
          description: Timestamp when device was created
        managementStatus:
          type: string
          description: The management status of the device
          enum:
            - MANAGED
            - NOT_MANAGED
          x-enumDescriptions:
            MANAGED: The device has management software installed
            NOT_MANAGED: The device doesn't have management software installed
        screenLockType:
          type: string
          description: Screen lock type of the device
          enum:
            - NONE
            - PASSCODE
            - BIOMETRIC
        user:
          $ref: '#/components/schemas/User'
    DigestAlgorithm:
      type: string
      enum:
        - SHA256_HMAC
        - SHA512_HMAC
    DiskEncryptionType:
      type: string
      enum:
        - ALL_INTERNAL_VOLUMES
        - FULL
        - USER
    DiskEncryptionTypeDef:
      description: |-
        Type of encryption used on the device
        > **Note:** The following values map to Disk Encryption ON: `FULL`, `USER`, `ALL_INTERNAL_VOLUMES`. All other values map to Disk Encryption OFF.
      type: string
      enum:
        - ALL_INTERNAL_VOLUMES
        - FULL
        - NONE
        - SYSTEM_VOLUME
        - USER
      x-enumDescriptions:
        NONE: No encryption has been set.
        FULL: Disk is fully encrypted. Only applicable to `IOS` and `ANDROID` platforms.
        USER: Encryption key is tied to the user or profile. Only applicable to `ANDROID` platform.
        ALL_INTERNAL_VOLUMES: All internal disks are encrypted. Only applicable to `WINDOWS` and `MACOS` platforms.
        SYSTEM_VOLUME: Only the system volume is encrypted. Only applicable to `WINDOWS` and `MACOS` platforms.
    DomainCertificate:
      description: Defines the properties of the certificate
      type: object
      properties:
        certificate:
          description: Certificate content
          type: string
          example: '"-----BEGIN CERTIFICATE-----\nMIIFNzCCBB+gAwIBAgHTAAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\nMDIzCzAJCgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD\nEwJSMzAeFw0yMTAyMTAwNTEzMDVaFw0yMTA1MTEwNTEzMDVaMCQxIjAgBgNVBAMT\nGWFuaXRhdGVzdC5zaWdtYW5ldGNvcnAudXMwggEiMA0GCSqGSIb3DQEBAQUAA4IB\nDwAwggEKAoIBAQC5cyk6x63iBJSWvtgsOBqIxfO8euPHcRnyWsL9dsvnbNyOnyvc\nqFWxdiW3sh2cItzYtoN1Zfgj5lWGOVXbHxP0VaNG9fHVX3+NHP6LFHQz92BzAYQm\npqi9zaP/aKJklk6LdPFbVLGhuZfm34+ijW9YsgLTKR2WTaZJK5QtamVVmP+VsSCl\na2ifFzjz2FCkMMEc/Y0zUyP+en/mbL71K+VnpZdlEC1s38EvjRTFKFZTKVw5wpWg\nCZQq/AZYj9RxR23IIuRcUJ8TQ2pyoc3kIXPWjiIarSgBlA8G9kCsxgzXP2RyLwKr\nIBIo+qyHweifpPYW28ipdSbPjiypAMdpbGLDAgMBAAGjggJTMIICTzAOBgNVHQ8B\nAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB\n/wQCMAAwHQYDVR0OBBYEFPVZKiovtIK4Av/IBUQeLUs29pT6MB8GA1UdIwQYMBaA\nFBQusxe3WFbLrlAJQOYfr52LFMLGMFUGCCsGAQUFBwEBBEkwRzAhBggrBgEFBQcw\nAYYVaHR0cDovL3IzLm8ubGVuY3Iub3JnMCIGCCsGAQUFBzAChhZodHRwOi8vcjMu\naS5sZW5jci5vcmcvMCQGA1UdEQQdMBuCGWFuaXRhdGVzdC5zaWdtYW5ldGNvcnAu\ndXMwTAYDVR0gBEUwQzAIBgZngQwBAgEwNwYLKwYBBAGC3xMBAQEwKDAmBggrBgEF\nBQcCARYaaHR0cDovL2Nwcy5sZXRzZW5jcnlwdC5vcmcwggEDBgorBgEEAdZ5AgQC\nBIH0BIHxAO8AdgBc3EOS/uarRUSxXprUVuYQN/vV+kfcoXOUsl7m9scOygAAAXeK\nkmOsAAAEAwBHMEUCIQDSudPEWXk969BT8yz3ag6BJWCMRU5tefEw9nXEQMsh5gIg\nUmfGIuUlcNNI5PydVIHj+zns+SR8P7zfd3FIxW4gK0QAdQD2XJQv0XcwIhRUGAgw\nlFaO400TGTO/3wwvIAvMTvFk4wAAAXeKkmOlAAAEAwBGMEQCIHQkr2qOGuInvonv\nW4vvdI61nraax5V6SC3E0D2JSO91AiBVhpX4BBafRAh36r7l8LrxAfxBM3CjBmAC\nq8fUrWfIWDANBgkqhkiG9w0BAQsFAAOCAQEAgGDMKXofKpDdv5kkID3s5GrKdzaj\njFmb/6kyqd1E6eGXZAewCP1EF5BVvR6lBP2aRXiZ6sJVZktoIfztZnbxBGgbPHfv\nR3iXIG6fxkklzR9Y8puPMBFadANE/QV78tIRAlyaqeSNsoxHi7ssQjHTP111B2lf\n3KmuTpsruut1UesEJcPReLk/1xTkRx262wAncach5Wp+6GWWduTZYJbsNFyrK1RP\nYQ0qYpP9wt2qR+DGaRUBG8i1XLnZS8pkyxtKhVw/a5Fowt+NqCpEBjjJiWJRSGnG\nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\n-----END CERTIFICATE-----",'
        certificateChain:
          description: Certificate chain
          type: string
          example: '"-----BEGIN CERTIFICATE-----\nMIIFPjCCBCbjAwIBAgISA7RikMltj36DkLk1DUzjwfYBMA0GCSqGSIb3DQEBCwUA\nMDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD\nEwJSMzAeFw0yMTEwMTExOTQ3MjRaFw0yMjAxMDkxOTQ3MjNaMCgxJjAkBgNVBAMT\nHWFuaXRhdGVzdHJhaW4uc2lnbWFuZXRjb3JwLnVzMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA40EsG7YrFlsH3XdZKirdKKOC7/cca5g9L4rwyA/PlfeU\nB7mJhbQI/a3yZbtY+GjHmedBx15aPtyq+NFZLOkiRCXx0k2zNIJB4yC6Jr/Yp8C2\nrXO6mrCcuqpX7SuDPBtrfdYcIg8G6m0wjj1V1p2/XR8G//CBe8I2XTaTpHsx/VC8\nMNOAA27aSbeX4Nz6TQ69rFuxRG+neUbcz2hQKwroCsCHi6iBmqRkg19Uh8315Cx2\nBUqY0JecpP42KMiktzIoSlqS9yZSuNQh1kP1tPwkEzbs/t3FrfCnnRx5RDr2pJpV\nnonL3sB3TVotS3nFgPNHCfp65O0Bg/3ZpU9IvUpcdQIDAQABo4ICVjCCAlIwDgYD\nVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNV\nHRMBAf8EAjAAMB0GA1UdDgQWBBSzWt3Dvp71cKA2Z54ESjjyM4dp+jAfBgNVHSME\nGDAWgBQULrMXt1hWy65QCUDmH6+dixTCxjBVBggrBgEFBQcBAQRJMEcwIQYIKwYB\nBQUHMAGGFWh0dHA6Ly9yMy5vLmxlbmNyLm9yZzAiBggrBgEFBQcwAoYWaHR0cDov\nL3IzLmkubGVuY3Iub3JnLzAoBgNVHREEITAfgh1hbml0YXRlc3RyYWluLnNpZ21h\nbmV0Y29ycC51czBMBgNVHSAERTBDMAgGBmeBDAECATA3BgsrBgEEAYLfEwEBATAo\nMCYGCCsGAQUFBwIBFhpodHRwOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCCAQIGCisG\nAQQB1nkCBAIEgfMEgfAA7gB1AG9Tdqwx8DEZ2JkApFEV/3cVHBHZAsEAKQaNsgia\nN9kTAAABfHEcLqAAAAQDAEYwRAIgMlyQ61FjuIKDfATjz0wfkskChD0csVe0TStq\nmC7NbLACICp3CYMvvDiWt1pr5pzCwTQO8F6v0/qNjmH4mjCutAgyAHUARqVV63X6\nkSAwtaKJafTzfREsQXS+/Um4havy/HD+bUcAAAF8cRwvRAAABAMARjBEAiAZd6Vn\n7MLXT7JeIxZrfbNARrf5oCM4UAVjjJeaUhB1MwIgSLW5cVAZvkiwbQW+vIutFjBz\na8cNb/i+nM7RxFW+JPgwDQYJKoZIhvcNAQELBQADggEBAIlHZiHIuOvYFteqpwvR\n0ElqinIpkYsfI+0O5FwHBXz7vMCPGtfdlcX5M10eW3aEBo9lR59mjDMsMufbTb60\nJuSnguelkUoq4WzqjZI+2uy/FTztI5GPpXmXW3IyzbqmCWQt7u8N607g1TYLBaLL\nrbFIhl+LbTJAa//mxI6bb4l/86j/kSjht6U0OIde7ylscb+3MHobbpIWJYp8Jr1D\nubm/0glL46ExnuLbIKojLhDBnG/wHVunB0rJxGh1vPvwD75O1nSIdxuNlVcGwws+\n7wsOyPA1s0VWzrMN1olLMyIPFCwPvfCm1E8Dje1AXMpmyDlqjEoQsoMUH//GKF0S\nTgM=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw\nWhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg\nRW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP\nR5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx\nsxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm\nNHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg\nZ3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG\n/kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC\nAYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB\nAf8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA\nFHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw\nAoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw\nOi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB\ngt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W\nPTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl\nikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz\nCkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm\nlJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4\navAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2\nyJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O\nyK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids\nhCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+\nHlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv\nMldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX\nnLRbwHOoq7hHwg==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC\nov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL\nwYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D\nLtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK\n4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5\nbHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y\nsR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ\nXmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4\nFQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc\nSLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql\nPRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND\nTwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw\nSwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1\nc3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx\n+tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB\nATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu\nb3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E\nU1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu\nMA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC\n5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW\n9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG\nWCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O\nhe8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END CERTIFICATE-----"'
        privateKey:
          description: Certificate private key
          type: string
          example: '"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0AAQEFAASCBKgwghSkAgEAAoIBAQC5cyk6y63iBJSW\nstgsOBqIxfO8euPHcRnyWsL9dsvnbNyOnyvcqFWxdiW3sh2cItzYtoN1Zfgj5lWG\nOVXbHxP0VaNG9fHVX3+NHP6LFHQz92BzAYQmpqi9zaP/aKJklk6LdPFbVLGhuZfm\n34+ijW9YsgLTKR2WTaZJK5QtamVVmP+VsSCla2ifFzjz2FCkMMEc/Y0zUyP+en/m\nbL71K+VnpZdlEC1s38EvjRTFKFZTKVw5wpWgCZQq/AZYj9RxR23IIuRcUJ8TQ2py\noc3kIXPWjiIarSgBlA8G9kCsxgzXP2RyLwKrIBIo+qyHweifpPYW28ipdSbPjiyp\nAMdpbGLDAgMBAAECggEAUXVfT91z6IqghhKwO8QtC5T/+fN06B8rCYSKj/FFoZL0\n0oTiLFuYwImoCadoUDQUE/Efj0rKE2LSgFHg/44IItQXE01m+5WmHmL1ADxsyoLH\nz9yDosKj7jNM7RyV8F8Bg0pL1hU+rU4rhhL/MaS0mx4eFYjC4UmcWBmXTdelSVJa\nkvXvQLT5y86bqh7tqMjM/kALTWRz5CgNJFk/ONA1yo5RTX9S7SIXimBgAvuGqP8i\nMPEhJou7U3DfzXVfvP8byqNdsZs6ZNhG3wXspl61mRyrY+51SOaNLA7Bkji7x4bH\nNw6mJI0IJTAP9oc1Z8fYeMuxT1bfuD7VOupSP0mAMQKBgQDk+KuyQkmPymeP/Wwu\nII4DUpleVzxTK9obMQQoCEEElbQ6+jTb+8ixP0bWLvBXg/rX734j7OWfn/bljWLH\nXLrSoqQZF1+XMVeY4g4wx9UuTK/D2n791zdOgQivxbIPdWL3a4ap86ar8uyMgJu8\nBLXfFBAOc+9myqUkbeO7wt0e6QKBgQDPV04jPtIJoMrggpQDNreGrANKOmsXWxj4\nOHW13QNdJ2KGQpoTdoqQ8ZmlxuA8Bf2RjHsnB2kgGVTVQR74zRib4MByhvsdhvVm\nF2LNsJoIDfqtv3c+oj13VonRUGuzUeJpwT/snyaL+jQ/ZZcYz0jDgDhIODTcFYj8\nDMSD5SHgywKBgHH6MwWuJ44TNBAiF2qyu959jGjAxf+k0ZI9iRMgYLUWjDvbdtqW\ncCWDGRDfFraJtSEuTz003GzkJPPJuIUC7OCTI1p2HxhU8ITi6itwHfdJJyk4J4TW\nT+qdIqTUpTk6tsPw23zYE3x+lS+viVZDhgEArKl1HpOthh0nMnixnH6ZAoGBAKGn\nV+xy1h9bldFk/TFkP8Jn6ki9MzGKfPVKT7vzDORcCJzU4Hu8OFy5gSmW3Mzvfrsz\n4/CR/oxgM5vwoc0pWr5thJ3GT5K93iYypX3o6q7M91zvonDa3UFl3x2qrc2pUfVS\nDhzWGJ+Z+5JSCnP1aK3EEh18dPoCcELTUYPj6X3xAoGBALAllTb3RCIaqIqk+s3Y\n6KDzikgwGM6j9lmOI2MH4XmCVym4Z40YGK5nxulDh2Ihn/n9zm13Z7ul2DJwgQSO\n0zBc7/CMOsMEBaNXuKL8Qj4enJXMtub4waQ/ywqHIdc50YaPI5Ax8dD/10h9M6Qc\nnUFLNE8pXSnsqb0eOL74f3uQ\n-----END PRIVATE KEY-----"'
        type:
          $ref: '#/components/schemas/DomainCertificateType'
      required:
        - certificate
        - certificateChain
        - privateKey
        - type
    DomainCertificateMetadata:
      description: Certificate metadata for the domain
      type: object
      properties:
        expiration:
          description: Certificate expiration
          type: string
          example: '2021-05-11T05:13:05.000Z'
        fingerprint:
          description: Certificate fingerprint
          type: string
          example: 73:68:82:7B:83:2E:48:29:A5:5E:E8:40:41:80:B3:AA:03:C4:42:43:05:73:45:BC:AA:47:00:23:A3:70:E5:C4
        subject:
          description: Certificate subject
          type: string
          example: CN=login.example.com
    DomainCertificateSourceType:
      description: Certificate source type that indicates whether the certificate is provided by the user or Okta.
      type: string
      enum:
        - MANUAL
        - OKTA_MANAGED
    DomainCertificateType:
      description: Certificate type
      type: string
      enum:
        - PEM
    DomainLinks:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        - type: object
          properties:
            brand:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: The associated brand
            certificate:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: The certificate link references the domain certificate
            verify:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: The verify link verifies the domain and transitions the domain status to `VERIFIED`
    DomainListResponse:
      description: Defines a list of domains with a subset of the properties for each domain.
      type: object
      properties:
        domains:
          description: Each element of the array defines an individual domain.
          type: array
          items:
            $ref: '#/components/schemas/DomainResponse'
    DomainRequest:
      type: object
      properties:
        certificateSourceType:
          $ref: '#/components/schemas/DomainCertificateSourceType'
        domain:
          description: Custom domain name
          type: string
          example: login.example.com
      required:
        - certificateSourceType
        - domain
    DomainResponse:
      description: The properties that define an individual domain.
      type: object
      properties:
        brandId:
          description: The ID number of the brand
          type: string
          example: bndul904tTZ6kWVhP0g3
        certificateSourceType:
          $ref: '#/components/schemas/DomainCertificateSourceType'
        dnsRecords:
          type: array
          items:
            $ref: '#/components/schemas/DNSRecord'
        domain:
          description: Custom domain name
          type: string
          example: login.example.com
        id:
          description: Unique ID of the domain
          type: string
          example: OcDz6iRyjkaCTXkdo0g3
        publicCertificate:
          $ref: '#/components/schemas/DomainCertificateMetadata'
        validationStatus:
          $ref: '#/components/schemas/DomainValidationStatus'
        _links:
          $ref: '#/components/schemas/DomainLinks'
    DomainValidationStatus:
      description: Status of the domain
      example: VERIFIED
      type: string
      enum:
        - COMPLETED
        - IN_PROGRESS
        - NOT_STARTED
        - VERIFIED
    Duration:
      type: object
      properties:
        number:
          type: integer
        unit:
          type: string
    EmailContent:
      type: object
      properties:
        body:
          type: string
          description: The email's HTML body. May contain [variable references](https://velocity.apache.org/engine/1.7/user-guide.html#references).
        subject:
          type: string
          description: The email's subject. May contain [variable references](https://velocity.apache.org/engine/1.7/user-guide.html#references).
      required:
        - subject
        - body
    EmailCustomization:
      allOf:
        - $ref: '#/components/schemas/EmailContent'
        - type: object
          properties:
            created:
              type: string
              format: date-time
              readOnly: true
              description: The UTC time at which this email customization was created.
            id:
              type: string
              readOnly: true
              description: A unique identifier for this email customization
            isDefault:
              type: boolean
              description: Whether this is the default customization for the email template. Each customized email template must have exactly one default customization. Defaults to `true` for the first customization and `false` thereafter.
            language:
              $ref: '#/components/schemas/Language'
            lastUpdated:
              type: string
              format: date-time
              readOnly: true
              description: The UTC time at which this email customization was last updated.
            _links:
              allOf:
                - $ref: '#/components/schemas/LinksSelf'
                - properties:
                    self:
                      $ref: '#/components/schemas/HrefObject'
                    template:
                      $ref: '#/components/schemas/HrefObject'
                    preview:
                      $ref: '#/components/schemas/HrefObject'
                    test:
                      $ref: '#/components/schemas/HrefObject'
          required:
            - language
    EmailDefaultContent:
      allOf:
        - $ref: '#/components/schemas/EmailContent'
        - type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/components/schemas/HrefObject'
                template:
                  $ref: '#/components/schemas/HrefObject'
                preview:
                  $ref: '#/components/schemas/HrefObject'
                test:
                  $ref: '#/components/schemas/HrefObject'
    EmailDomain:
      allOf:
        - $ref: '#/components/schemas/BaseEmailDomain'
      type: object
      properties:
        brandId:
          type: string
        domain:
          type: string
      required:
        - domain
        - brandId
    EmailDomainResponse:
      allOf:
        - $ref: '#/components/schemas/BaseEmailDomain'
      type: object
      properties:
        dnsValidationRecords:
          type: array
          items:
            $ref: '#/components/schemas/DNSRecord'
        domain:
          type: string
        id:
          type: string
        validationStatus:
          $ref: '#/components/schemas/EmailDomainStatus'
    EmailDomainResponseWithEmbedded:
      allOf:
        - $ref: '#/components/schemas/EmailDomainResponse'
      type: object
      properties:
        _embedded:
          type: object
          properties:
            brands:
              type: array
              items:
                $ref: '#/components/schemas/Brand'
          readOnly: true
    EmailDomainStatus:
      type: string
      enum:
        - DELETED
        - ERROR
        - NOT_STARTED
        - POLLING
        - VERIFIED
    EmailPreview:
      type: object
      properties:
        body:
          type: string
          readOnly: true
          description: The email's HTML body
        subject:
          type: string
          readOnly: true
          description: The email's subject
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                contentSource:
                  $ref: '#/components/schemas/HrefObject'
                template:
                  $ref: '#/components/schemas/HrefObject'
                test:
                  $ref: '#/components/schemas/HrefObject'
                defaultContent:
                  $ref: '#/components/schemas/HrefObject'
    EmailServerListResponse:
      type: object
      properties:
        email-servers:
          type: array
          items:
            $ref: '#/components/schemas/EmailServerResponse'
    EmailServerPost:
      allOf:
        - $ref: '#/components/schemas/EmailServerRequest'
        - required:
            - host
            - port
            - username
            - password
            - alias
    EmailServerRequest:
      allOf:
        - $ref: '#/components/schemas/BaseEmailServer'
        - properties:
            password:
              type: string
              description: The password to use with your SMTP server
    EmailServerResponse:
      allOf:
        - $ref: '#/components/schemas/BaseEmailServer'
        - properties:
            id:
              type: string
    EmailSettings:
      type: object
      properties:
        recipients:
          type: string
          enum:
            - ALL_USERS
            - ADMINS_ONLY
            - NO_USERS
      required:
        - recipients
    EmailTemplate:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: The name of this email template
        _embedded:
          type: object
          properties:
            settings:
              $ref: '#/components/schemas/EmailSettings'
            customizationCount:
              type: integer
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                settings:
                  $ref: '#/components/schemas/HrefObject'
                defaultContent:
                  $ref: '#/components/schemas/HrefObject'
                customizations:
                  $ref: '#/components/schemas/HrefObject'
                test:
                  $ref: '#/components/schemas/HrefObject'
    EmailTemplateTouchPointVariant:
      type: string
      enum:
        - FULL_THEME
        - OKTA_DEFAULT
    EmailTestAddresses:
      type: object
      properties:
        from:
          type: string
          description: An email address to send the test email from
        to:
          type: string
          description: An email address to send the test email to
      required:
        - from
        - to
    EmailUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/EmailUserFactorProfile'
    EmailUserFactorProfile:
      type: object
      properties:
        email:
          type: string
    EnabledStatus:
      description: Setting status
      type: string
      enum:
        - DISABLED
        - ENABLED
    EndUserDashboardTouchPointVariant:
      type: string
      enum:
        - FULL_THEME
        - LOGO_ON_FULL_WHITE_BACKGROUND
        - OKTA_DEFAULT
        - WHITE_LOGO_BACKGROUND
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            type: object
            properties:
              errorSummary:
                type: string
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: A unique identifier for this error. This can be used by Okta Support to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: A short description of what caused this error. Sometimes this contains dynamically-generated information about your specific error.
    ErrorPage:
      allOf:
        - $ref: '#/components/schemas/CustomizablePage'
        - type: object
          properties:
            contentSecurityPolicySetting:
              $ref: '#/components/schemas/ContentSecurityPolicySetting'
    ErrorPageTouchPointVariant:
      type: string
      enum:
        - BACKGROUND_IMAGE
        - BACKGROUND_SECONDARY_COLOR
        - OKTA_DEFAULT
    EventHook:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/EventHookChannel'
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
        events:
          $ref: '#/components/schemas/EventSubscriptions'
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        verificationStatus:
          $ref: '#/components/schemas/EventHookVerificationStatus'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    EventHookChannel:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/EventHookChannelConfig'
        type:
          $ref: '#/components/schemas/EventHookChannelType'
        version:
          type: string
    EventHookChannelConfig:
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/EventHookChannelConfigAuthScheme'
        headers:
          type: array
          items:
            $ref: '#/components/schemas/EventHookChannelConfigHeader'
        uri:
          type: string
    EventHookChannelConfigAuthScheme:
      type: object
      properties:
        key:
          type: string
        type:
          $ref: '#/components/schemas/EventHookChannelConfigAuthSchemeType'
        value:
          type: string
    EventHookChannelConfigAuthSchemeType:
      type: string
      enum:
        - HEADER
    EventHookChannelConfigHeader:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    EventHookChannelType:
      type: string
      enum:
        - HTTP
    EventHookVerificationStatus:
      type: string
      enum:
        - UNVERIFIED
        - VERIFIED
    EventSubscriptionType:
      type: string
      enum:
        - EVENT_TYPE
        - FLOW_EVENT
    EventSubscriptions:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/EventSubscriptionType'
      discriminator:
        propertyName: type
    FCMConfiguration:
      properties:
        fileName:
          type: string
          description: (Optional) File name for Admin Console display
        projectId:
          type: string
          description: Project ID of FCM configuration
          readOnly: true
        serviceAccountJson:
          type: object
          description: JSON containing the private service account key and service account details. See [Creating and managing service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys) for more information on creating service account keys in JSON.
          writeOnly: true
    FCMPushProvider:
      allOf:
        - $ref: '#/components/schemas/PushProvider'
        - type: object
          properties:
            configuration:
              $ref: '#/components/schemas/FCMConfiguration'
    FactorProvider:
      type: string
      enum:
        - CUSTOM
        - DUO
        - FIDO
        - GOOGLE
        - OKTA
        - RSA
        - SYMANTEC
        - YUBICO
    FactorResultType:
      type: string
      enum:
        - CANCELLED
        - CHALLENGE
        - ERROR
        - FAILED
        - PASSCODE_REPLAYED
        - REJECTED
        - SUCCESS
        - TIMEOUT
        - TIME_WINDOW_EXCEEDED
        - WAITING
    FactorStatus:
      type: string
      enum:
        - ACTIVE
        - DISABLED
        - ENROLLED
        - EXPIRED
        - INACTIVE
        - NOT_SETUP
        - PENDING_ACTIVATION
    FactorType:
      type: string
      enum:
        - call
        - email
        - push
        - question
        - signed_nonce
        - sms
        - token
        - token:hardware
        - token:hotp
        - token:software:totp
        - u2f
        - web
        - webauthn
    Feature:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          readOnly: true
        name:
          type: string
        stage:
          $ref: '#/components/schemas/FeatureStage'
        status:
          $ref: '#/components/schemas/EnabledStatus'
        type:
          $ref: '#/components/schemas/FeatureType'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    FeatureLifecycle:
      example: enable
      type: string
      enum:
        - disable
        - enable
    FeatureStage:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/FeatureStageState'
        value:
          $ref: '#/components/schemas/FeatureStageValue'
    FeatureStageState:
      type: string
      enum:
        - CLOSED
        - OPEN
    FeatureStageValue:
      type: string
      enum:
        - BETA
        - EA
    FeatureType:
      type: string
      enum:
        - self-service
    FipsEnum:
      type: string
      enum:
        - OPTIONAL
        - REQUIRED
    ForgotPasswordResponse:
      type: object
      properties:
        resetPasswordUrl:
          type: string
          readOnly: true
    GrantOrTokenStatus:
      type: string
      enum:
        - ACTIVE
        - REVOKED
    GrantTypePolicyRuleCondition:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
    Group:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastMembershipUpdated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        objectClass:
          type: array
          readOnly: true
          items:
            type: string
        profile:
          $ref: '#/components/schemas/GroupProfile'
        type:
          $ref: '#/components/schemas/GroupType'
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                apps:
                  $ref: '#/components/schemas/HrefObject'
                logo:
                  type: array
                  items:
                    $ref: '#/components/schemas/HrefObject'
                source:
                  $ref: '#/components/schemas/HrefObject'
                users:
                  $ref: '#/components/schemas/HrefObject'
    GroupCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    GroupOwner:
      type: object
      properties:
        displayName:
          description: The display name of the group owner
          type: string
          readOnly: true
        id:
          description: The `id` of the group owner
          type: string
        lastUpdated:
          description: Timestamp when the group owner was last updated
          type: string
          format: date-time
          readOnly: true
        originId:
          description: The ID of the app instance if the `originType` is `APPLICATION`. This value is `NULL` if `originType` is `OKTA_DIRECTORY`.
          type: string
        originType:
          $ref: '#/components/schemas/GroupOwnerOriginType'
        resolved:
          description: If `originType`is APPLICATION, this parameter is set to `FALSE` until the owner’s `originId` is reconciled with an associated Okta ID.
          type: boolean
        type:
          $ref: '#/components/schemas/GroupOwnerType'
    GroupOwnerOriginType:
      description: The source where group ownership is managed
      type: string
      enum:
        - APPLICATION
        - OKTA_DIRECTORY
    GroupOwnerType:
      description: The entity type of the owner
      type: string
      enum:
        - GROUP
        - USER
    GroupPolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    GroupProfile:
      additionalProperties: true
      type: object
      properties:
        description:
          type: string
        name:
          type: string
      x-okta-extensible: true
    GroupRule:
      type: object
      properties:
        actions:
          $ref: '#/components/schemas/GroupRuleAction'
        conditions:
          $ref: '#/components/schemas/GroupRuleConditions'
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/GroupRuleStatus'
        type:
          type: string
    GroupRuleAction:
      type: object
      properties:
        assignUserToGroups:
          $ref: '#/components/schemas/GroupRuleGroupAssignment'
    GroupRuleConditions:
      type: object
      properties:
        expression:
          $ref: '#/components/schemas/GroupRuleExpression'
        people:
          $ref: '#/components/schemas/GroupRulePeopleCondition'
    GroupRuleExpression:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    GroupRuleGroupAssignment:
      type: object
      properties:
        groupIds:
          type: array
          items:
            type: string
    GroupRuleGroupCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    GroupRulePeopleCondition:
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/GroupRuleGroupCondition'
        users:
          $ref: '#/components/schemas/GroupRuleUserCondition'
    GroupRuleStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - INVALID
    GroupRuleUserCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    GroupSchema:
      type: object
      properties:
        $schema:
          readOnly: true
          type: string
        created:
          readOnly: true
          type: string
        definitions:
          $ref: '#/components/schemas/GroupSchemaDefinitions'
        description:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        title:
          type: string
        type:
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      x-okta-allow-null-property-value-for-updates: true
    GroupSchemaAttribute:
      type: object
      properties:
        description:
          type: string
        enum:
          items:
            type: string
          type: array
        externalName:
          type: string
        externalNamespace:
          type: string
        items:
          $ref: '#/components/schemas/UserSchemaAttributeItems'
        master:
          $ref: '#/components/schemas/UserSchemaAttributeMaster'
        maxLength:
          type: integer
        minLength:
          type: integer
        mutability:
          type: string
        oneOf:
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
          type: array
        permissions:
          items:
            $ref: '#/components/schemas/UserSchemaAttributePermission'
          type: array
        required:
          type: boolean
        scope:
          $ref: '#/components/schemas/UserSchemaAttributeScope'
        title:
          type: string
        type:
          $ref: '#/components/schemas/UserSchemaAttributeType'
        union:
          $ref: '#/components/schemas/UserSchemaAttributeUnion'
        unique:
          type: string
    GroupSchemaBase:
      type: object
      properties:
        id:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/GroupSchemaBaseProperties'
        required:
          items:
            type: string
          type: array
        type:
          type: string
    GroupSchemaBaseProperties:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/GroupSchemaAttribute'
        name:
          $ref: '#/components/schemas/GroupSchemaAttribute'
    GroupSchemaCustom:
      type: object
      properties:
        id:
          readOnly: true
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/GroupSchemaAttribute'
          type: object
        required:
          items:
            type: string
          type: array
        type:
          type: string
    GroupSchemaDefinitions:
      type: object
      properties:
        base:
          $ref: '#/components/schemas/GroupSchemaBase'
        custom:
          $ref: '#/components/schemas/GroupSchemaCustom'
    GroupType:
      type: string
      enum:
        - APP_GROUP
        - BUILT_IN
        - OKTA_GROUP
    HardwareUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/HardwareUserFactorProfile'
    HardwareUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    HookKey:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the key was created.
          readOnly: true
        id:
          type: string
          description: The unique identifier for the key.
          readOnly: true
        isUsed:
          type: string
          format: boolean
          description: Whether this key is currently in use by other hooks.
        keyId:
          type: string
          description: The alias of the public key.
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the key was updated.
          readOnly: true
        name:
          type: string
          description: Display name of the key.
          readOnly: false
        _embedded:
          $ref: '#/components/schemas/JsonWebKey'
    HostedPage:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/HostedPageType'
        url:
          type: string
      required:
        - type
    HostedPageType:
      type: string
      enum:
        - EXTERNALLY_HOSTED
        - OKTA_DEFAULT
    HrefObject:
      title: Link Object
      type: object
      properties:
        hints:
          type: object
          description: Describes allowed HTTP verbs for the `href`
          properties:
            allow:
              type: array
              items:
                $ref: '#/components/schemas/HttpMethod'
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
        type:
          type: string
          description: The media type of the link. If omitted, it is implicitly `application/json`.
      required:
        - href
      readOnly: true
    HrefObjectActivateLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to activate the resource
    HrefObjectAppLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the app resource
    HrefObjectClientLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the client resource
    HrefObjectDeactivateLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to deactivate the resource
    HrefObjectDeleteLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to delete the resource
    HrefObjectLogoLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the logo resource
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    HrefObjectSuspendLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to suspend the resource
    HrefObjectUnsuspendLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to unsuspend the resource
    HrefObjectUserLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the user resource
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
    IamRole:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the role was created
          readOnly: true
        description:
          type: string
          description: Description of the role
        id:
          type: string
          description: Unique key for the role
          readOnly: true
        label:
          type: string
          description: Unique label for the role
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the role was last updated
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                permissions:
                  $ref: '#/components/schemas/HrefObject'
      required:
        - label
        - description
    IamRoles:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/IamRole'
        _links:
          $ref: '#/components/schemas/LinksNext'
    IdentityProvider:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        id:
          type: string
          readOnly: true
        issuerMode:
          $ref: '#/components/schemas/IssuerMode'
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        policy:
          $ref: '#/components/schemas/IdentityProviderPolicy'
        properties:
          $ref: '#/components/schemas/IdentityProviderProperties'
        protocol:
          $ref: '#/components/schemas/Protocol'
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        type:
          $ref: '#/components/schemas/IdentityProviderType'
        _links:
          type: object
          additionalProperties:
              $ref: '#/components/schemas/HrefObjectSelfLink'
    IdentityProviderApplicationUser:
      type: object
      properties:
        created:
          type: string
        externalId:
          type: string
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    IdentityProviderCredentials:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/IdentityProviderCredentialsClient'
        signing:
          $ref: '#/components/schemas/IdentityProviderCredentialsSigning'
        trust:
          $ref: '#/components/schemas/IdentityProviderCredentialsTrust'
    IdentityProviderCredentialsClient:
      type: object
      properties:
        client_id:
          type: string
        client_secret:
          type: string
    IdentityProviderCredentialsSigning:
      type: object
      properties:
        kid:
          type: string
    IdentityProviderCredentialsTrust:
      type: object
      properties:
        audience:
          type: string
        issuer:
          type: string
        kid:
          type: string
        revocation:
          $ref: '#/components/schemas/IdentityProviderCredentialsTrustRevocation'
        revocationCacheLifetime:
          type: integer
    IdentityProviderCredentialsTrustRevocation:
      type: string
      enum:
        - CRL
        - DELTA_CRL
        - OCSP
    IdentityProviderPolicy:
      type: object
      properties:
        accountLink:
          $ref: '#/components/schemas/PolicyAccountLink'
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        mapAMRClaims:
          type: boolean
          description: Enable mapping AMR from IdP to Okta to downstream apps
          default: false
          x-okta-lifecycle:
            features:
              - IDP_AMR_CLAIMS_MAPPING
        maxClockSkew:
          type: integer
        provisioning:
          $ref: '#/components/schemas/Provisioning'
        subject:
          $ref: '#/components/schemas/PolicySubject'
    IdentityProviderPolicyProvider:
      type: string
      enum:
        - ANY
        - OKTA
        - SPECIFIC_IDP
    IdentityProviderPolicyRuleCondition:
      type: object
      properties:
        idpIds:
          type: array
          items:
            type: string
        provider:
          $ref: '#/components/schemas/IdentityProviderPolicyProvider'
    IdentityProviderProperties:
      nullable: true
      type: object
      properties:
        additionalAmr:
          type: array
          nullable: true
          items:
            type: string
    IdentityProviderType:
      type: string
      enum:
        - AgentlessDSSO
        - FACEBOOK
        - GOOGLE
        - IWA
        - LINKEDIN
        - MICROSOFT
        - OIDC
        - OKTA
        - SAML2
        - X509
    IdentitySourceSession:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        identitySourceId:
          type: string
          readOnly: true
        importType:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/IdentitySourceSessionStatus'
    IdentitySourceSessionStatus:
      type: string
      enum:
        - CLOSED
        - COMPLETED
        - CREATED
        - ERROR
        - EXPIRED
        - TRIGGERED
    IdentitySourceUserProfileForDelete:
      type: object
      properties:
        externalId:
          type: string
          maxLength: 512
    IdentitySourceUserProfileForUpsert:
      additionalProperties: {}
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 5
          maxLength: 100
        firstName:
          type: string
          minLength: 1
          maxLength: 50
          nullable: true
        homeAddress:
          type: string
          maxLength: 4096
          nullable: true
        lastName:
          type: string
          minLength: 1
          maxLength: 50
          nullable: true
        mobilePhone:
          type: string
          maxLength: 100
          nullable: true
        secondEmail:
          type: string
          format: email
          minLength: 5
          maxLength: 100
        userName:
          type: string
          maxLength: 100
    IdpDiscoveryPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/IdpDiscoveryPolicyRuleCondition'
    IdpDiscoveryPolicyRule:
      allOf:
        - $ref: '#/components/schemas/PolicyRule'
        - type: object
          properties:
            actions:
              $ref: '#/components/schemas/IdpPolicyRuleAction'
            conditions:
              $ref: '#/components/schemas/IdpDiscoveryPolicyRuleCondition'
    IdpDiscoveryPolicyRuleCondition:
      allOf:
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'
            network:
              $ref: '#/components/schemas/PolicyNetworkCondition'
            userIdentifier:
              $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'
            platform:
              $ref: '#/components/schemas/PlatformPolicyRuleCondition'
    IdpPolicyRuleAction:
      type: object
      properties:
        providers:
          items:
            $ref: '#/components/schemas/IdpPolicyRuleActionProvider'
          type: array
    IdpPolicyRuleActionProvider:
      type: object
      properties:
        id:
          readOnly: true
          type: string
        type:
          type: string
    IframeEmbedScopeAllowedApps:
      type: string
      enum:
        - OKTA_ENDUSER
    ImageUploadResponse:
      type: object
      properties:
        url:
          readOnly: true
          type: string
    InactivityPolicyRuleCondition:
      type: object
      properties:
        number:
          type: integer
        unit:
          type: string
    InlineHook:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/InlineHookChannel'
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/InlineHookStatus'
        type:
          $ref: '#/components/schemas/InlineHookType'
        version:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
    InlineHookChannel:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/InlineHookChannelType'
        version:
          type: string
      discriminator:
        propertyName: type
        mapping:
          HTTP: '#/components/schemas/InlineHookChannelHttp'
          OAUTH: '#/components/schemas/InlineHookChannelOAuth'
    InlineHookChannelConfig:
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/InlineHookChannelConfigAuthScheme'
        headers:
          type: array
          items:
            $ref: '#/components/schemas/InlineHookChannelConfigHeaders'
        method:
          type: string
        uri:
          type: string
    InlineHookChannelConfigAuthScheme:
      type: object
      properties:
        key:
          type: string
        type:
          type: string
        value:
          type: string
    InlineHookChannelConfigHeaders:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    InlineHookChannelHttp:
      allOf:
        - $ref: '#/components/schemas/InlineHookChannel'
        - type: object
          properties:
            config:
              $ref: '#/components/schemas/InlineHookChannelConfig'
    InlineHookChannelOAuth:
      allOf:
        - $ref: '#/components/schemas/InlineHookChannel'
        - type: object
          properties:
            config:
              $ref: '#/components/schemas/InlineHookOAuthChannelConfig'
    InlineHookChannelType:
      type: string
      enum:
        - HTTP
        - OAUTH
    InlineHookOAuthBasicConfig:
      allOf:
        - $ref: '#/components/schemas/InlineHookChannelConfig'
      type: object
      properties:
        authType:
          type: string
        clientId:
          type: string
        scope:
          type: string
        tokenUrl:
          type: string
    InlineHookOAuthChannelConfig:
      type: object
      properties:
        authType:
          type: string
      discriminator:
        propertyName: authType
        mapping:
          client_secret_post: '#/components/schemas/InlineHookOAuthClientSecretConfig'
          private_key_jwt: '#/components/schemas/InlineHookOAuthPrivateKeyJwtConfig'
    InlineHookOAuthClientSecretConfig:
      allOf:
        - $ref: '#/components/schemas/InlineHookOAuthBasicConfig'
      type: object
      properties:
        clientSecret:
          type: string
    InlineHookOAuthPrivateKeyJwtConfig:
      allOf:
        - $ref: '#/components/schemas/InlineHookOAuthBasicConfig'
      type: object
      properties:
        hookKeyId:
          type: string
    InlineHookPayload:
      type: object
      x-okta-extensible: true
    InlineHookResponse:
      type: object
      properties:
        commands:
          type: array
          items:
            $ref: '#/components/schemas/InlineHookResponseCommands'
    InlineHookResponseCommandValue:
      type: object
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: string
    InlineHookResponseCommands:
      type: object
      properties:
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/InlineHookResponseCommandValue'
    InlineHookStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    InlineHookType:
      type: string
      enum:
        - com.okta.import.transform
        - com.okta.oauth2.tokens.transform
        - com.okta.saml.tokens.transform
        - com.okta.user.credential.password.import
        - com.okta.user.pre-registration
    IssuerMode:
      type: string
      enum:
        - CUSTOM_URL
        - DYNAMIC
        - ORG_URL
    JsonWebKey:
      type: object
      properties:
        alg:
          type: string
        created:
          type: string
          format: date-time
        e:
          type: string
        expiresAt:
          type: string
          format: date-time
        key_ops:
          type: array
          items:
            type: string
        kid:
          type: string
        kty:
          type: string
        lastUpdated:
          type: string
          format: date-time
        'n':
          type: string
        status:
          type: string
        use:
          type: string
        x5c:
          type: array
          items:
            type: string
        x5t:
          type: string
        x5t#S256:
          type: string
        x5u:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
    JwkUse:
      type: object
      properties:
        use:
          $ref: '#/components/schemas/JwkUseType'
    JwkUseType:
      type: string
      enum:
        - sig
    KeyRequest:
      type: object
      properties:
        name:
          type: string
    KeyTrustLevelBrowserKey:
      description: Represents the attestation strength used by the Chrome Verified Access API
      example: CHROME_BROWSER_HW_KEY
      type: string
      enum:
        - CHROME_BROWSER_HW_KEY
        - CHROME_BROWSER_OS_KEY
      x-enumDescriptions:
        CHROME_BROWSER_HW_KEY: Identity of the device was attested using a key pair that is OS encapsulated by a hardware layer
        CHROME_BROWSER_OS_KEY: Identity of the device was attested using a key pair that is simply stored on the device but not in any specific hardware layer
    KeyTrustLevelOSMode:
      description: Represents the attestation strength used by the Chrome Verified Access API
      example: CHROME_OS_VERIFIED_MODE
      type: string
      enum:
        - CHROME_OS_DEVELOPER_MODE
        - CHROME_OS_VERIFIED_MODE
      x-enumDescriptions:
        CHROME_OS_VERIFIED_MODE: Identity of the device was attested using an enterprise-emitted certificate, and the device is in Verified mode
        CHROME_OS_DEVELOPER_MODE: Identity of the device was attested using an enterprise-emitted certificate, and the device is in Developer mode
    KnowledgeConstraint:
      allOf:
        - $ref: '#/components/schemas/AccessPolicyConstraint'
    Language:
      description: The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646)
      type: string
    LifecycleCreateSettingObject:
      description: Determines whether to update a user in the application when a user in Okta is updated
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/EnabledStatus'
            - default: DISABLED
    LifecycleDeactivateSettingObject:
      description: Determines whether deprovisioning occurs when the app is unassigned
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/EnabledStatus'
            - default: DISABLED
    LifecycleExpirationPolicyRuleCondition:
      type: object
      properties:
        lifecycleStatus:
          type: string
        number:
          type: integer
        unit:
          type: string
    LifecycleStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    LinkedObject:
      type: object
      properties:
        associated:
          $ref: '#/components/schemas/LinkedObjectDetails'
        primary:
          $ref: '#/components/schemas/LinkedObjectDetails'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    LinkedObjectDetails:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        title:
          type: string
        type:
          $ref: '#/components/schemas/LinkedObjectDetailsType'
    LinkedObjectDetailsType:
      type: string
      enum:
        - USER
    LinksAppAndUser:
      description: Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the [JSON Hypertext Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06) specification. This object is used for dynamic discovery of resources related to the App User.
      type: object
      properties:
        app:
          $ref: '#/components/schemas/HrefObjectAppLink'
        user:
          $ref: '#/components/schemas/HrefObjectUserLink'
      readOnly: true
    LinksNext:
      description: Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the current status of an application using the [JSON Hypertext Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06) specification. Use the `LinksNext` object for dynamic discovery of related resources and lifecycle operations.
      type: object
      properties:
        next:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
    LinksSelf:
      description: Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the current status of an application using the [JSON Hypertext Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06) specification. This object is used for dynamic discovery of related resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    LinksSelfAndFullUsersLifecycle:
      allOf:
        - $ref: '#/components/schemas/LinksSelfAndLifecycle'
        - type: object
          properties:
            suspend:
              $ref: '#/components/schemas/HrefObjectSuspendLink'
            unsuspend:
              $ref: '#/components/schemas/HrefObjectUnsuspendLink'
            users:
              description: Link to Device users
              allOf:
                - $ref: '#/components/schemas/HrefObject'
    LinksSelfAndLifecycle:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        - type: object
          properties:
            activate:
              $ref: '#/components/schemas/HrefObjectActivateLink'
            deactivate:
              $ref: '#/components/schemas/HrefObjectDeactivateLink'
    LinksSelfAndRoles:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        - type: object
          properties:
            roles:
              $ref: '#/components/schemas/HrefObject'
    ListProfileMappings:
      description: |-
        A collection of the profile mappings that include a subset of the profile mapping object's properties. The Profile Mapping object describes a mapping between an Okta User's and an App User's properties using [JSON Schema Draft 4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04).

        > **Note:** Same type source/target mappings aren't supported by this API. Profile mappings must either be Okta->App or App->Okta.
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for profile mapping
          readOnly: true
        source:
          type: object
          description: Source of the schema property expressions (Okta object or App Instance object)
          $ref: '#/components/schemas/ProfileMappingSource'
        target:
          type: object
          description: Target of the schema property expressions (Okta object or App Instance object)
          $ref: '#/components/schemas/ProfileMappingTarget'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    LoadingPageTouchPointVariant:
      type: string
      enum:
        - NONE
        - OKTA_DEFAULT
    LocationGranularity:
      type: string
      enum:
        - CITY
        - COUNTRY
        - LAT_LONG
        - SUBDIVISION
    LogActor:
      type: object
      properties:
        alternateId:
          type: string
          readOnly: true
        detailEntry:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        displayName:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
    LogAuthenticationContext:
      type: object
      properties:
        authenticationProvider:
          $ref: '#/components/schemas/LogAuthenticationProvider'
        authenticationStep:
          type: integer
          readOnly: true
        credentialProvider:
          $ref: '#/components/schemas/LogCredentialProvider'
        credentialType:
          $ref: '#/components/schemas/LogCredentialType'
        externalSessionId:
          type: string
          readOnly: true
        interface:
          type: string
          readOnly: true
        issuer:
          $ref: '#/components/schemas/LogIssuer'
    LogAuthenticationProvider:
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - FACTOR_PROVIDER
        - FEDERATION
        - LDAP
        - OKTA_AUTHENTICATION_PROVIDER
        - SOCIAL
    LogClient:
      type: object
      properties:
        device:
          type: string
          readOnly: true
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        id:
          type: string
          readOnly: true
        ipAddress:
          type: string
          readOnly: true
        userAgent:
          $ref: '#/components/schemas/LogUserAgent'
        zone:
          type: string
          readOnly: true
    LogCredentialProvider:
      type: string
      enum:
        - DUO
        - GOOGLE
        - OKTA_AUTHENTICATION_PROVIDER
        - OKTA_CREDENTIAL_PROVIDER
        - RSA
        - SYMANTEC
        - YUBIKEY
    LogCredentialType:
      type: string
      enum:
        - ASSERTION
        - EMAIL
        - IWA
        - JWT
        - OAuth 2.0
        - OTP
        - PASSWORD
        - SMS
    LogDebugContext:
      type: object
      properties:
        debugData:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    LogEvent:
      type: object
      properties:
        actor:
          $ref: '#/components/schemas/LogActor'
        authenticationContext:
          $ref: '#/components/schemas/LogAuthenticationContext'
        client:
          $ref: '#/components/schemas/LogClient'
        debugContext:
          $ref: '#/components/schemas/LogDebugContext'
        displayMessage:
          type: string
          readOnly: true
        eventType:
          type: string
          readOnly: true
        legacyEventType:
          type: string
          readOnly: true
        outcome:
          $ref: '#/components/schemas/LogOutcome'
        published:
          type: string
          format: date-time
          readOnly: true
        request:
          $ref: '#/components/schemas/LogRequest'
        securityContext:
          $ref: '#/components/schemas/LogSecurityContext'
        severity:
          $ref: '#/components/schemas/LogSeverity'
        target:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/LogTarget'
        transaction:
          $ref: '#/components/schemas/LogTransaction'
        uuid:
          type: string
          readOnly: true
        version:
          type: string
          readOnly: true
    LogGeographicalContext:
      type: object
      properties:
        city:
          type: string
          readOnly: true
        country:
          type: string
          readOnly: true
        geolocation:
          $ref: '#/components/schemas/LogGeolocation'
        postalCode:
          type: string
          readOnly: true
        state:
          type: string
          readOnly: true
    LogGeolocation:
      type: object
      properties:
        lat:
          type: number
          format: double
          readOnly: true
        lon:
          type: number
          format: double
          readOnly: true
    LogIpAddress:
      type: object
      properties:
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        ip:
          type: string
          readOnly: true
        source:
          type: string
          readOnly: true
        version:
          type: string
          readOnly: true
    LogIssuer:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
    LogOutcome:
      type: object
      properties:
        reason:
          type: string
          readOnly: true
        result:
          type: string
          readOnly: true
    LogRequest:
      type: object
      properties:
        ipChain:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/LogIpAddress'
    LogSecurityContext:
      type: object
      properties:
        asNumber:
          type: integer
          readOnly: true
        asOrg:
          type: string
          readOnly: true
        domain:
          type: string
          readOnly: true
        isp:
          type: string
          readOnly: true
        isProxy:
          type: boolean
          readOnly: true
    LogSeverity:
      type: string
      enum:
        - DEBUG
        - ERROR
        - INFO
        - WARN
    LogStream:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the Log Stream object was created
          readOnly: true
          example: '2022-10-21T16:59:59.000Z'
        id:
          type: string
          description: Unique identifier for the Log Stream
          readOnly: true
          example: 0oa1orzg0CHSgPcjZ0g4
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the Log Stream object was last updated
          readOnly: true
          example: '2022-10-21T17:15:10.000Z'
        name:
          $ref: '#/components/schemas/LogStreamName'
        status:
          type: string
          description: Lifecycle status of the Log Stream object
          enum:
            - ACTIVE
            - INACTIVE
          readOnly: true
        type:
          $ref: '#/components/schemas/LogStreamType'
        _links:
          $ref: '#/components/schemas/LogStreamLinksSelfAndLifecycle'
      required:
        - created
        - id
        - lastUpdated
        - name
        - status
        - type
        - _links
      discriminator:
        propertyName: type
        mapping:
          aws_eventbridge: '#/components/schemas/LogStreamAws'
          splunk_cloud_logstreaming: '#/components/schemas/LogStreamSplunk'
    LogStreamActivateLink:
      allOf:
        - $ref: '#/components/schemas/LogStreamLinkObject'
        - description: Link to activate the resource
    LogStreamAws:
      allOf:
        - $ref: '#/components/schemas/LogStream'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/LogStreamSettingsAws'
          required:
            - settings
    LogStreamAwsPutSchema:
      allOf:
        - $ref: '#/components/schemas/LogStreamPutSchema'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/LogStreamSettingsAws'
          required:
            - settings
    LogStreamDeactivateLink:
      allOf:
        - $ref: '#/components/schemas/LogStreamLinkObject'
        - description: Link to deactivate the resource
    LogStreamLinkObject:
      title: Log Stream Link object
      type: object
      properties:
        href:
          type: string
          description: The URI of the resource
        method:
          type: string
          description: HTTP method allowed for the resource
          enum:
            - GET
            - POST
      required:
        - href
      readOnly: true
    LogStreamLinksSelfAndLifecycle:
      description: Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the current status of an application using the [JSON Hypertext Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06) specification. This object is used for dynamic discovery of related resources and lifecycle operations.
      type: object
      properties:
        activate:
          $ref: '#/components/schemas/LogStreamActivateLink'
        deactivate:
          $ref: '#/components/schemas/LogStreamDeactivateLink'
        self:
          $ref: '#/components/schemas/LogStreamSelfLink'
      required:
        - self
      readOnly: true
    LogStreamName:
      description: Unique name for the Log Stream object
      example: My AWS EventBridge log stream
      type: string
    LogStreamPutSchema:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LogStreamName'
        type:
          $ref: '#/components/schemas/LogStreamType'
      required:
        - name
        - type
      discriminator:
        propertyName: type
        mapping:
          aws_eventbridge: '#/components/schemas/LogStreamAwsPutSchema'
          splunk_cloud_logstreaming: '#/components/schemas/LogStreamSplunkPutSchema'
    LogStreamSchema:
      type: object
      properties:
        $schema:
          type: string
          readOnly: true
        created:
          type: string
          readOnly: true
        errorMessage:
          type: object
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        properties:
          type: object
        required:
          type: array
          items:
            type: string
        title:
          type: string
        type:
          type: string
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    LogStreamSelfLink:
      allOf:
        - $ref: '#/components/schemas/LogStreamLinkObject'
        - description: Link to the resource (self)
    LogStreamSettingsAws:
      description: Specifies the configuration for the `aws_eventbridge` Log Stream type. This configuration can't be modified after creation.
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AwsAccountId'
        eventSourceName:
          $ref: '#/components/schemas/AwsEventSourceName'
        region:
          $ref: '#/components/schemas/AwsRegion'
      required:
        - accountId
        - eventSourceName
        - region
    LogStreamSettingsSplunk:
      description: Specifies the configuration for the `splunk_cloud_logstreaming` Log Stream type.
      type: object
      properties:
        edition:
          $ref: '#/components/schemas/SplunkEdition'
        host:
          $ref: '#/components/schemas/SplunkHost'
        token:
          $ref: '#/components/schemas/SplunkToken'
      required:
        - edition
        - host
        - token
    LogStreamSettingsSplunkPut:
      description: Specifies the configuration for the `splunk_cloud_logstreaming` Log Stream type.
      type: object
      properties:
        edition:
          $ref: '#/components/schemas/SplunkEdition'
        host:
          $ref: '#/components/schemas/SplunkHost'
      required:
        - edition
        - host
    LogStreamSplunk:
      allOf:
        - $ref: '#/components/schemas/LogStream'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/LogStreamSettingsSplunk'
          required:
            - settings
    LogStreamSplunkPutSchema:
      allOf:
        - $ref: '#/components/schemas/LogStreamPutSchema'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/LogStreamSettingsSplunkPut'
          required:
            - settings
    LogStreamType:
      description: |-
        Specifies the streaming provider used

        Supported providers:
          * `aws_eventbridge` ([AWS EventBridge](https://aws.amazon.com/eventbridge))
          * `splunk_cloud_logstreaming` ([Splunk Cloud](https://www.splunk.com/en_us/software/splunk-cloud-platform.html))

        Select the provider type to see provider-specific configurations in the `settings` property:
      type: string
      enum:
        - aws_eventbridge
        - splunk_cloud_logstreaming
    LogTarget:
      type: object
      properties:
        alternateId:
          type: string
          readOnly: true
        detailEntry:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        displayName:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
    LogTransaction:
      type: object
      properties:
        detail:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
    LogUserAgent:
      type: object
      properties:
        browser:
          type: string
          readOnly: true
        os:
          type: string
          readOnly: true
        rawUserAgent:
          type: string
          readOnly: true
    MDMEnrollmentPolicyEnrollment:
      type: string
      enum:
        - ANY_OR_NONE
        - OMM
    MDMEnrollmentPolicyRuleCondition:
      type: object
      properties:
        blockNonSafeAndroid:
          type: boolean
        enrollment:
          $ref: '#/components/schemas/MDMEnrollmentPolicyEnrollment'
    MultifactorEnrollmentPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/PolicyRuleConditions'
            settings:
              $ref: '#/components/schemas/MultifactorEnrollmentPolicySettings'
    MultifactorEnrollmentPolicyAuthenticatorSettings:
      type: object
      properties:
        constraints:
          nullable: true
          minimum: 0
          type: object
          properties:
            aaguidGroups:
              type: array
              items:
                type: string
                uniqueItems: true
          x-okta-lifecycle:
            features:
              - WEBAUTHN_MDS_CATALOG_BASED_AAGUID_ALLOWLIST
        enroll:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorStatus'
        key:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorType'
    MultifactorEnrollmentPolicyAuthenticatorStatus:
      type: string
      enum:
        - NOT_ALLOWED
        - OPTIONAL
        - REQUIRED
    MultifactorEnrollmentPolicyAuthenticatorType:
      type: string
      enum:
        - custom_app
        - custom_otp
        - duo
        - external_idp
        - google_otp
        - okta_email
        - okta_password
        - okta_verify
        - onprem_mfa
        - phone_number
        - rsa_token
        - security_question
        - symantec_vip
        - webauthn
        - yubikey_token
    MultifactorEnrollmentPolicySettings:
      type: object
      properties:
        authenticators:
          items:
            $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorSettings'
          type: array
        type:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicySettingsType'
    MultifactorEnrollmentPolicySettingsType:
      type: string
      enum:
        - AUTHENTICATORS
    NetworkZone:
      type: object
      properties:
        asns:
          type: array
          items:
            type: string
          description: Dynamic network zone property. array of strings that represent an ASN numeric value
          maximum: 75
        created:
          type: string
          format: date-time
          description: Timestamp when the network zone was created
          readOnly: true
        gateways:
          type: array
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
          description: |-
            IP network zone property: the IP addresses (range or CIDR form) of this zone.
            The maximum array length is 150 entries for admin-created IP zones, 1000 entries for IP blocklist zones, and 5000 entries for the default system IP Zone.
        id:
          type: string
          description: Unique identifier for the network zone
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the network zone was last modified
          readOnly: true
        locations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkZoneLocation'
          description: 'Dynamic network zone property: an array of geolocations of this network zone'
          maximum: 75
        name:
          type: string
          description: Unique name for this network zone. Maximum of 128 characters.
        proxies:
          type: array
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
          nullable: true
          description: |-
            IP network zone property: the IP addresses (range or CIDR form) that are allowed to forward a request from gateway addresses
            These proxies are automatically trusted by Threat Insights, and used to identify the client IP of a request.
            The maximum array length is 150 entries for admin-created zones and 5000 entries for the default system IP Zone.
        proxyType:
          type: string
          description: 'Dynamic network zone property: the proxy type used'
          enum:
            - 'null'
            - Any
            - Tor
            - NotTorAnonymizer
          x-enumDescriptions:
            'null': (Or `""`) No proxy used
            Any: Use any proxy type for the dynamic zone.
            Tor: Use TorAnonymizer as the proxy type for the dynamic zone.
            NotTorAnonymizer: Use NotTorAnonymizer as the proxy type for the dynamic zone.
        status:
          $ref: '#/components/schemas/NetworkZoneStatus'
        system:
          type: boolean
          description: |-
            Indicates if this is a system network zone. For admin-created zones, this is always `false`.
            The system IP Policy Network Zone (`LegacyIpZone`) is included by default in your Okta org. Notice that `system=true` for the `LegacyIpZone` object. Admin users can modify the name of this default system Zone and can add up to 5000 gateway or proxy IP entries.
        type:
          $ref: '#/components/schemas/NetworkZoneType'
        usage:
          $ref: '#/components/schemas/NetworkZoneUsage'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                deactivate:
                  $ref: '#/components/schemas/HrefObject'
    NetworkZoneAddress:
      description: Specifies the value of an IP address expressed using either `range` or `CIDR` form.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NetworkZoneAddressType'
        value:
          type: string
          description: Value in CIDR/range form depending on the type specified
    NetworkZoneAddressType:
      description: Format of the value
      type: string
      enum:
        - CIDR
        - RANGE
    NetworkZoneLocation:
      type: object
      properties:
        country:
          type: string
          description: |-
            Format of the country value: length 2 [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.
            Do not use continent codes as they are treated as generic codes for undesignated countries.
          example: US
        region:
          type: string
          description: |-
            Format of the region value (optional): region code [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) appended to country code (`countryCode-regionCode`), or `null` if empty.
            Do not use continent codes as they are treated as generic codes for undesignated regions.
          example: US-CA
    NetworkZoneStatus:
      description: Network zone status
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    NetworkZoneType:
      description: The type of network zone
      type: string
      enum:
        - DYNAMIC
        - IP
    NetworkZoneUsage:
      description: The usage of the network zone
      type: string
      enum:
        - BLOCKLIST
        - POLICY
    NotificationType:
      description: The type of notification
      type: string
      enum:
        - AD_AGENT
        - AGENT_AUTO_UPDATE_NOTIFICATION
        - APP_IMPORT
        - CONNECTOR_AGENT
        - IWA_AGENT
        - LDAP_AGENT
        - OKTA_ANNOUNCEMENT
        - OKTA_ISSUE
        - OKTA_UPDATE
        - RATELIMIT_NOTIFICATION
        - REPORT_SUSPICIOUS_ACTIVITY
        - USER_DEPROVISION
        - USER_LOCKED_OUT
      x-enumDescriptions:
        AD_AGENT: System notification sent when an AD agent disconnects or reconnects
        AGENT_AUTO_UPDATE_NOTIFICATION: System notification sent when an agent automatically updates
        APP_IMPORT: System notification sent with the status of an app user import
        CONNECTOR_AGENT: System notification sent when an on-premises provisioning or Okta on-prem MFA agent disconnects or reconnects
        IWA_AGENT: System notification sent when an IGA agent disconnects or reconnects
        LDAP_AGENT: System notification sent when an LDAP agent disconnects or reconnects
        OKTA_ANNOUNCEMENT: Okta communication sent for announcements and release notes
        OKTA_ISSUE: Okta communication sent for trust incident alerts and updates
        OKTA_UPDATE: Okta communication sent for scheduled system updates
        RATELIMIT_NOTIFICATION: System notification sent when an org reaches rate limit warning or violation thresholds
        REPORT_SUSPICIOUS_ACTIVITY: System notification sent when a user reports suspicious activity
        USER_DEPROVISION: System notification sent when a user is deprovisioned from apps
        USER_LOCKED_OUT: System notification sent when a user is locked out from logging in to Okta
    OAuth2Actor:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
    OAuth2Claim:
      type: object
      properties:
        alwaysIncludeInToken:
          type: boolean
        claimType:
          $ref: '#/components/schemas/OAuth2ClaimType'
        conditions:
          $ref: '#/components/schemas/OAuth2ClaimConditions'
        group_filter_type:
          $ref: '#/components/schemas/OAuth2ClaimGroupFilterType'
        id:
          type: string
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        system:
          type: boolean
        value:
          type: string
        valueType:
          $ref: '#/components/schemas/OAuth2ClaimValueType'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OAuth2ClaimConditions:
      type: object
      properties:
        scopes:
          type: array
          items:
            type: string
    OAuth2ClaimGroupFilterType:
      type: string
      enum:
        - CONTAINS
        - EQUALS
        - REGEX
        - STARTS_WITH
    OAuth2ClaimType:
      type: string
      enum:
        - IDENTITY
        - RESOURCE
    OAuth2ClaimValueType:
      type: string
      enum:
        - EXPRESSION
        - GROUPS
        - SYSTEM
    OAuth2Client:
      type: object
      properties:
        client_id:
          type: string
          readOnly: true
        client_name:
          type: string
          readOnly: true
        client_uri:
          type: string
          readOnly: true
        logo_uri:
          type: string
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OAuth2RefreshToken:
      type: object
      properties:
        clientId:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        issuer:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        scopes:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/GrantOrTokenStatus'
        userId:
          type: string
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OAuth2Scope:
      type: object
      properties:
        consent:
          $ref: '#/components/schemas/OAuth2ScopeConsentType'
        default:
          type: boolean
        description:
          type: string
        displayName:
          type: string
        id:
          type: string
          readOnly: true
        metadataPublish:
          $ref: '#/components/schemas/OAuth2ScopeMetadataPublish'
        name:
          type: string
        system:
          type: boolean
    OAuth2ScopeConsentGrant:
      type: object
      properties:
        clientId:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        id:
          type: string
          readOnly: true
        issuer:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        scopeId:
          type: string
        source:
          $ref: '#/components/schemas/OAuth2ScopeConsentGrantSource'
        status:
          $ref: '#/components/schemas/GrantOrTokenStatus'
        userId:
          type: string
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OAuth2ScopeConsentGrantSource:
      type: string
      enum:
        - ADMIN
        - END_USER
    OAuth2ScopeConsentType:
      type: string
      enum:
        - ADMIN
        - IMPLICIT
        - REQUIRED
    OAuth2ScopeMetadataPublish:
      type: string
      enum:
        - ALL_CLIENTS
        - NO_CLIENTS
    OAuth2ScopesMediationPolicyRuleCondition:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
    OAuth2Token:
      type: object
      properties:
        clientId:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        issuer:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        scopes:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/GrantOrTokenStatus'
        userId:
          type: string
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OAuthApplicationCredentials:
      allOf:
        - $ref: '#/components/schemas/ApplicationCredentials'
        - type: object
          properties:
            oauthClient:
              $ref: '#/components/schemas/ApplicationCredentialsOAuthClient'
    OAuthEndpointAuthenticationMethod:
      type: string
      enum:
        - client_secret_basic
        - client_secret_jwt
        - client_secret_post
        - none
        - private_key_jwt
    OAuthGrantType:
      type: string
      enum:
        - authorization_code
        - client_credentials
        - implicit
        - interaction_code
        - password
        - refresh_token
        - urn:ietf:params:oauth:grant-type:device_code
        - urn:ietf:params:oauth:grant-type:jwt-bearer
        - urn:ietf:params:oauth:grant-type:saml2-bearer
        - urn:ietf:params:oauth:grant-type:token-exchange
    OAuthResponseType:
      type: string
      enum:
        - code
        - id_token
        - token
    OSVersion:
      description: Current version of the operating system
      type: object
      properties:
        minimum:
          type: string
    OktaSignOnPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/OktaSignOnPolicyConditions'
    OktaSignOnPolicyConditions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleConditions'
        - type: object
          properties:
            people:
              $ref: '#/components/schemas/PolicyPeopleCondition'
    OktaSignOnPolicyFactorPromptMode:
      type: string
      enum:
        - ALWAYS
        - DEVICE
        - SESSION
    OktaSignOnPolicyRule:
      allOf:
        - $ref: '#/components/schemas/PolicyRule'
        - type: object
          properties:
            actions:
              $ref: '#/components/schemas/OktaSignOnPolicyRuleActions'
            conditions:
              $ref: '#/components/schemas/OktaSignOnPolicyRuleConditions'
    OktaSignOnPolicyRuleActions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleActions'
        - type: object
          properties:
            signon:
              $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'
    OktaSignOnPolicyRuleConditions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleConditions'
        - type: object
          properties:
            authContext:
              $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
            network:
              $ref: '#/components/schemas/PolicyNetworkCondition'
            people:
              $ref: '#/components/schemas/PolicyPeopleCondition'
    OktaSignOnPolicyRuleSignonActions:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/PolicyAccess'
        factorLifetime:
          type: integer
        factorPromptMode:
          $ref: '#/components/schemas/OktaSignOnPolicyFactorPromptMode'
        rememberDeviceByDefault:
          type: boolean
          default: false
        requireFactor:
          type: boolean
          default: false
        session:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonSessionActions'
    OktaSignOnPolicyRuleSignonSessionActions:
      type: object
      properties:
        maxSessionIdleMinutes:
          type: integer
        maxSessionLifetimeMinutes:
          type: integer
        usePersistentCookie:
          type: boolean
          default: false
    OpenIdConnectApplication:
      x-okta-defined-as:
        name: oidc_client
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/OAuthApplicationCredentials'
            name:
              type: string
              default: oidc_client
            settings:
              $ref: '#/components/schemas/OpenIdConnectApplicationSettings'
    OpenIdConnectApplicationConsentMethod:
      type: string
      enum:
        - REQUIRED
        - TRUSTED
    OpenIdConnectApplicationIdpInitiatedLogin:
      type: object
      properties:
        default_scope:
          type: array
          items:
            type: string
        mode:
          type: string
    OpenIdConnectApplicationIssuerMode:
      type: string
      enum:
        - CUSTOM_URL
        - DYNAMIC
        - ORG_URL
    OpenIdConnectApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            oauthClient:
              $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClient'
    OpenIdConnectApplicationSettingsClient:
      type: object
      properties:
        application_type:
          $ref: '#/components/schemas/OpenIdConnectApplicationType'
        client_uri:
          type: string
        consent_method:
          $ref: '#/components/schemas/OpenIdConnectApplicationConsentMethod'
        dpop_bound_access_tokens:
          type: boolean
          description: Indicates that the client application uses Demonstrating Proof-of-Possession (DPoP) for token requests. If `true`, the authorization server rejects token requests from this client that don't contain the DPoP header.
          default: false
          x-okta-lifecycle:
            features:
              - OAUTH2_DPOP
        grant_types:
          type: array
          items:
            $ref: '#/components/schemas/OAuthGrantType'
        idp_initiated_login:
          $ref: '#/components/schemas/OpenIdConnectApplicationIdpInitiatedLogin'
        initiate_login_uri:
          type: string
        issuer_mode:
          $ref: '#/components/schemas/OpenIdConnectApplicationIssuerMode'
        jwks:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClientKeys'
        jwks_uri:
          description: URL string that references a JSON Web Key Set for validating JWTs presented to Okta.
          type: string
        logo_uri:
          type: string
        policy_uri:
          type: string
        post_logout_redirect_uris:
          type: array
          items:
            type: string
        redirect_uris:
          type: array
          items:
            type: string
        refresh_token:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsRefreshToken'
        response_types:
          type: array
          items:
            $ref: '#/components/schemas/OAuthResponseType'
        tos_uri:
          type: string
        wildcard_redirect:
          type: string
    OpenIdConnectApplicationSettingsClientKeys:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/JsonWebKey'
    OpenIdConnectApplicationSettingsRefreshToken:
      type: object
      properties:
        leeway:
          type: integer
        rotation_type:
          $ref: '#/components/schemas/OpenIdConnectRefreshTokenRotationType'
    OpenIdConnectApplicationType:
      type: string
      enum:
        - browser
        - native
        - service
        - web
    OpenIdConnectRefreshTokenRotationType:
      type: string
      enum:
        - ROTATE
        - STATIC
    OperationalStatus:
      description: Operational status of a given agent
      type: string
      enum:
        - DEGRADED
        - DISRUPTED
        - INACTIVE
        - OPERATIONAL
    OrgCAPTCHASettings:
      title: OrgCAPTCHASettings
      description: ''
      type: object
      properties:
        captchaId:
          description: The unique key of the associated CAPTCHA instance
          type: string
        enabledPages:
          description: An array of pages that have CAPTCHA enabled
          type: array
          items:
            $ref: '#/components/schemas/enabledPagesType'
        _links:
          type: object
          description: Link relations for the CAPTCHA settings object
          properties:
            self:
              $ref: '#/components/schemas/HrefObject'
          readOnly: true
    OrgContactType:
      type: string
      enum:
        - BILLING
        - TECHNICAL
    OrgContactTypeObj:
      type: object
      properties:
        contactType:
          $ref: '#/components/schemas/OrgContactType'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OrgContactUser:
      type: object
      properties:
        userId:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OrgOktaCommunicationSetting:
      type: object
      properties:
        optOutEmailUsers:
          type: boolean
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OrgOktaSupportSetting:
      type: string
      enum:
        - DISABLED
        - ENABLED
    OrgOktaSupportSettingsObj:
      type: object
      properties:
        expiration:
          format: date-time
          type: string
          readOnly: true
        support:
          $ref: '#/components/schemas/OrgOktaSupportSetting'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OrgPreferences:
      type: object
      properties:
        showEndUserFooter:
          type: boolean
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OrgSetting:
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        companyName:
          type: string
        country:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        endUserSupportHelpURL:
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        phoneNumber:
          type: string
        postalCode:
          type: string
        state:
          type: string
        status:
          readOnly: true
          type: string
        subdomain:
          readOnly: true
          type: string
        supportPhoneNumber:
          type: string
        website:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OtpProtocol:
      type: string
      enum:
        - SYMANTEC
        - TOTP
        - YUBICO
    OtpTotpAlgorithm:
      description: HMAC algorithm
      type: string
      enum:
        - HMacSHA1
        - HMacSHA256
        - HMacSHA512
    OtpTotpEncoding:
      type: string
      enum:
        - base32
        - base64
        - hexadecimal
    PageRoot:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            default:
              $ref: '#/components/schemas/CustomizablePage'
            customized:
              $ref: '#/components/schemas/CustomizablePage'
            customizedUrl:
              type: string
              format: uri
            preview:
              $ref: '#/components/schemas/CustomizablePage'
            previewUrl:
              type: string
              format: uri
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                default:
                  $ref: '#/components/schemas/HrefObject'
                customized:
                  $ref: '#/components/schemas/HrefObject'
                preview:
                  $ref: '#/components/schemas/HrefObject'
    PasswordCredential:
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/PasswordCredentialHash'
        hook:
          $ref: '#/components/schemas/PasswordCredentialHook'
        value:
          type: string
          format: password
    PasswordCredentialHash:
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/PasswordCredentialHashAlgorithm'
        digestAlgorithm:
          $ref: '#/components/schemas/DigestAlgorithm'
        iterationCount:
          type: integer
        keySize:
          type: integer
        salt:
          type: string
        saltOrder:
          type: string
        value:
          type: string
        workFactor:
          type: integer
    PasswordCredentialHashAlgorithm:
      type: string
      enum:
        - BCRYPT
        - MD5
        - PBKDF2
        - SHA-1
        - SHA-256
        - SHA-512
    PasswordCredentialHook:
      type: object
      properties:
        type:
          type: string
    PasswordDictionary:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/PasswordDictionaryCommon'
    PasswordDictionaryCommon:
      type: object
      properties:
        exclude:
          type: boolean
          default: false
    PasswordExpirationPolicyRuleCondition:
      type: object
      properties:
        number:
          type: integer
        unit:
          type: string
    PasswordPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/PasswordPolicyConditions'
            settings:
              $ref: '#/components/schemas/PasswordPolicySettings'
    PasswordPolicyAuthenticationProviderCondition:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
        provider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderType'
    PasswordPolicyAuthenticationProviderType:
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - ANY
        - LDAP
        - OKTA
    PasswordPolicyConditions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleConditions'
        - type: object
          properties:
            authProvider:
              $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
            people:
              $ref: '#/components/schemas/PolicyPeopleCondition'
    PasswordPolicyDelegationSettings:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettingsOptions'
    PasswordPolicyDelegationSettingsOptions:
      type: object
      properties:
        skipUnlock:
          type: boolean
    PasswordPolicyPasswordSettings:
      type: object
      properties:
        age:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsAge'
        complexity:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsComplexity'
        lockout:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsLockout'
    PasswordPolicyPasswordSettingsAge:
      type: object
      properties:
        expireWarnDays:
          type: integer
        historyCount:
          type: integer
        maxAgeDays:
          type: integer
        minAgeMinutes:
          type: integer
    PasswordPolicyPasswordSettingsComplexity:
      type: object
      properties:
        dictionary:
          $ref: '#/components/schemas/PasswordDictionary'
        excludeAttributes:
          type: array
          items:
            type: string
        excludeUsername:
          type: boolean
          default: true
        minLength:
          type: integer
        minLowerCase:
          type: integer
        minNumber:
          type: integer
        minSymbol:
          type: integer
        minUpperCase:
          type: integer
    PasswordPolicyPasswordSettingsLockout:
      type: object
      properties:
        autoUnlockMinutes:
          type: integer
        maxAttempts:
          type: integer
        showLockoutFailures:
          type: boolean
        userLockoutNotificationChannels:
          type: array
          items:
            type: string
    PasswordPolicyRecoveryEmail:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailProperties'
        status:
          $ref: '#/components/schemas/LifecycleStatus'
    PasswordPolicyRecoveryEmailProperties:
      type: object
      properties:
        recoveryToken:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken'
    PasswordPolicyRecoveryEmailRecoveryToken:
      type: object
      properties:
        tokenLifetimeMinutes:
          type: integer
    PasswordPolicyRecoveryFactorSettings:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/LifecycleStatus'
    PasswordPolicyRecoveryFactors:
      type: object
      properties:
        okta_call:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        okta_email:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmail'
        okta_sms:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        recovery_question:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestion'
    PasswordPolicyRecoveryQuestion:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionProperties'
        status:
          $ref: '#/components/schemas/LifecycleStatus'
    PasswordPolicyRecoveryQuestionComplexity:
      type: object
      properties:
        minLength:
          type: integer
          readOnly: true
    PasswordPolicyRecoveryQuestionProperties:
      type: object
      properties:
        complexity:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionComplexity'
    PasswordPolicyRecoverySettings:
      type: object
      properties:
        factors:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactors'
    PasswordPolicyRule:
      allOf:
        - $ref: '#/components/schemas/PolicyRule'
        - type: object
          properties:
            actions:
              $ref: '#/components/schemas/PasswordPolicyRuleActions'
            conditions:
              $ref: '#/components/schemas/PasswordPolicyRuleConditions'
    PasswordPolicyRuleAction:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/PolicyAccess'
    PasswordPolicyRuleActions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleActions'
        - type: object
          properties:
            passwordChange:
              $ref: '#/components/schemas/PasswordPolicyRuleAction'
            selfServicePasswordReset:
              $ref: '#/components/schemas/SelfServicePasswordResetAction'
            selfServiceUnlock:
              $ref: '#/components/schemas/PasswordPolicyRuleAction'
    PasswordPolicyRuleConditions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleConditions'
        - type: object
          properties:
            network:
              $ref: '#/components/schemas/PolicyNetworkCondition'
            people:
              $ref: '#/components/schemas/PolicyPeopleCondition'
    PasswordPolicySettings:
      type: object
      properties:
        delegation:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettings'
        password:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettings'
        recovery:
          $ref: '#/components/schemas/PasswordPolicyRecoverySettings'
    PasswordProtectionWarningTrigger:
      description: Indicates whether the Password Protection Warning feature is enabled
      example: PHISHING_REUSE
      type: string
      enum:
        - PASSWORD_PROTECTION_OFF
        - PASSWORD_REUSE
        - PHISHING_REUSE
      x-enumDescriptions:
        PASSWORD_PROTECTION_OFF: Password protection warning is off
        PASSWORD_REUSE: Password protection warning is triggered by password reuse
        PHISHING_REUSE: Password protection warning is triggered by password reuse on a phishing page
    PasswordSettingObject:
      description: Determines whether Okta creates and pushes a password in the application for each assigned user
      type: object
      properties:
        change:
          $ref: '#/components/schemas/ChangeEnum'
        seed:
          $ref: '#/components/schemas/SeedEnum'
        status:
          allOf:
            - $ref: '#/components/schemas/EnabledStatus'
            - default: DISABLED
            - example: ENABLED
    PerClientRateLimitMode:
      type: string
      enum:
        - DISABLE
        - ENFORCE
        - PREVIEW
    PerClientRateLimitSettings:
      title: PerClientRateLimitSettings
      description: ''
      type: object
      properties:
        defaultMode:
          $ref: '#/components/schemas/PerClientRateLimitMode'
          description: The default PerClientRateLimitMode that applies to any use case in the absence of a more specific override
        useCaseModeOverrides:
          description: A map of Per-Client Rate Limit Use Case to the applicable PerClientRateLimitMode. Overrides the `defaultMode` property for the specified use cases.
          type: object
          properties:
            LOGIN_PAGE:
              $ref: '#/components/schemas/PerClientRateLimitMode'
            OAUTH2_AUTHORIZE:
              $ref: '#/components/schemas/PerClientRateLimitMode'
            OIE_APP_INTENT:
              $ref: '#/components/schemas/PerClientRateLimitMode'
      required:
        - defaultMode
    Permission:
      type: object
      properties:
        conditions:
          $ref: '#/components/schemas/PermissionConditions'
        created:
          type: string
          format: date-time
          description: Timestamp when the role was created
          readOnly: true
        label:
          type: string
          description: The permission type
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the role was last updated
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                role:
                  $ref: '#/components/schemas/HrefObject'
    PermissionConditions:
      x-okta-lifecycle:
        features:
          - CUSTOM_ADMIN_ROLES_CONDITIONS
      description: Conditions for further restricting a permission
      nullable: true
      type: object
    Permissions:
      type: object
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    PipelineType:
      description: The authentication pipeline of the org. `idx` means the org is using the Identity Engine, while `v1` means the org is using the Classic authentication pipeline.
      type: string
      enum:
        - idx
        - v1
    Platform:
      type: string
      enum:
        - ANDROID
        - CHROMEOS
        - IOS
        - MACOS
        - WINDOWS
    PlatformConditionEvaluatorPlatform:
      type: object
      properties:
        os:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem'
        type:
          $ref: '#/components/schemas/PolicyPlatformType'
    PlatformConditionEvaluatorPlatformOperatingSystem:
      type: object
      properties:
        expression:
          type: string
        type:
          $ref: '#/components/schemas/PolicyPlatformOperatingSystemType'
        version:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion'
    PlatformConditionEvaluatorPlatformOperatingSystemVersion:
      type: object
      properties:
        matchType:
          $ref: '#/components/schemas/PlatformConditionOperatingSystemVersionMatchType'
        value:
          type: string
    PlatformConditionOperatingSystemVersionMatchType:
      type: string
      enum:
        - EXPRESSION
        - SEMVER
    PlatformPolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
        include:
          type: array
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
    Policy:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        priority:
          type: integer
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/PolicyType'
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
      discriminator:
        propertyName: type
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicy'
          OAUTH_AUTHORIZATION_POLICY: '#/components/schemas/AuthorizationServerPolicy'
          IDP_DISCOVERY: '#/components/schemas/AccessPolicy'
          MFA_ENROLL: '#/components/schemas/MultifactorEnrollmentPolicy'
          OKTA_SIGN_ON: '#/components/schemas/OktaSignOnPolicy'
          PASSWORD: '#/components/schemas/PasswordPolicy'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicy'
    PolicyAccess:
      type: string
      enum:
        - ALLOW
        - DENY
    PolicyAccountLink:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/PolicyAccountLinkAction'
        filter:
          $ref: '#/components/schemas/PolicyAccountLinkFilter'
    PolicyAccountLinkAction:
      type: string
      enum:
        - AUTO
        - DISABLED
    PolicyAccountLinkFilter:
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'
    PolicyAccountLinkFilterGroups:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
    PolicyContext:
      type: object
      properties:
        device:
          type: object
          properties:
            platform:
              type: string
              description: The platform of the device, for example, IOS.
            registered:
              type: boolean
              description: If the device is registered
            managed:
              type: boolean
              description: If the device is managed
        groups:
          type: array
          description: An array of Group IDs for the simulate operation. Only user IDs or Group IDs are allowed, not both.
          properties:
            ids:
              type: array
          required:
            - ids
        ip:
          type: string
          description: The network rule condition, zone, or IP address
        risk:
          type: object
          description: The risk rule condition level
          properties:
            level:
              type: string
              enum:
                - LOW
                - MEDIUM
                - HIGH
        user:
          type: object
          description: The user ID for the simulate operation. Only user IDs or Group IDs are allowed, not both.
          properties:
            id:
              type: string
              description: The unique ID number for the user.
          required:
            - id
        zones:
          type: object
          properties:
            ids:
              type: array
              properties:
                ids:
                  type: string
      required:
        - user
        - groups
    PolicyMapping:
      type: object
      properties:
        id:
          type: string
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                application:
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                    - description: Link to the mapped application
    PolicyMappingRequest:
      type: object
      properties:
        resourceId:
          type: string
        resourceType:
          $ref: '#/components/schemas/PolicyMappingResourceType'
    PolicyMappingResourceType:
      type: string
      enum:
        - APP
    PolicyNetworkCondition:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PolicyNetworkConnection'
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    PolicyNetworkConnection:
      type: string
      enum:
        - ANYWHERE
        - ZONE
    PolicyPeopleCondition:
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/GroupCondition'
        users:
          $ref: '#/components/schemas/UserCondition'
    PolicyPlatformOperatingSystemType:
      type: string
      enum:
        - ANDROID
        - ANY
        - IOS
        - OSX
        - OTHER
        - WINDOWS
    PolicyPlatformType:
      type: string
      enum:
        - ANY
        - DESKTOP
        - MOBILE
        - OTHER
    PolicyRule:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        id:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
        priority:
          type: integer
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        system:
          type: boolean
          default: false
        type:
          $ref: '#/components/schemas/PolicyRuleType'
      discriminator:
        propertyName: type
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicyRule'
          PASSWORD: '#/components/schemas/PasswordPolicyRule'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicyRule'
          RESOURCE_ACCESS: '#/components/schemas/AuthorizationServerPolicyRule'
          SIGN_ON: '#/components/schemas/OktaSignOnPolicyRule'
          IDP_DISCOVERY: '#/components/schemas/IdpDiscoveryPolicyRule'
    PolicyRuleActions:
      type: object
    PolicyRuleActionsEnroll:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/PolicyRuleActionsEnrollSelf'
    PolicyRuleActionsEnrollSelf:
      type: string
      enum:
        - CHALLENGE
        - LOGIN
        - NEVER
    PolicyRuleAuthContextCondition:
      type: object
      properties:
        authType:
          $ref: '#/components/schemas/PolicyRuleAuthContextType'
    PolicyRuleAuthContextType:
      type: string
      enum:
        - ANY
        - RADIUS
    PolicyRuleConditions:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'
        apps:
          $ref: '#/components/schemas/AppInstancePolicyRuleCondition'
        authContext:
          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
        authProvider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
        beforeScheduledAction:
          $ref: '#/components/schemas/BeforeScheduledActionPolicyRuleCondition'
        clients:
          $ref: '#/components/schemas/ClientPolicyCondition'
        context:
          $ref: '#/components/schemas/ContextPolicyRuleCondition'
        device:
          $ref: '#/components/schemas/DevicePolicyRuleCondition'
        grantTypes:
          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
        groups:
          $ref: '#/components/schemas/GroupPolicyRuleCondition'
        identityProvider:
          $ref: '#/components/schemas/IdentityProviderPolicyRuleCondition'
        mdmEnrollment:
          $ref: '#/components/schemas/MDMEnrollmentPolicyRuleCondition'
        network:
          $ref: '#/components/schemas/PolicyNetworkCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
        platform:
          $ref: '#/components/schemas/PlatformPolicyRuleCondition'
        risk:
          $ref: '#/components/schemas/RiskPolicyRuleCondition'
        riskScore:
          $ref: '#/components/schemas/RiskScorePolicyRuleCondition'
        scopes:
          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
        userIdentifier:
          $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'
        users:
          $ref: '#/components/schemas/UserPolicyRuleCondition'
        userStatus:
          $ref: '#/components/schemas/UserStatusPolicyRuleCondition'
    PolicyRuleType:
      type: string
      enum:
        - ACCESS_POLICY
        - IDP_DISCOVERY
        - MFA_ENROLL
        - PASSWORD
        - PROFILE_ENROLLMENT
        - RESOURCE_ACCESS
        - SIGN_ON
    PolicySubject:
      type: object
      properties:
        filter:
          type: string
        format:
          type: array
          items:
            type: string
        matchAttribute:
          type: string
        matchType:
          $ref: '#/components/schemas/PolicySubjectMatchType'
        userNameTemplate:
          $ref: '#/components/schemas/PolicyUserNameTemplate'
    PolicySubjectMatchType:
      type: string
      enum:
        - CUSTOM_ATTRIBUTE
        - EMAIL
        - USERNAME
        - USERNAME_OR_EMAIL
    PolicyType:
      type: string
      enum:
        - ACCESS_POLICY
        - IDP_DISCOVERY
        - MFA_ENROLL
        - OKTA_SIGN_ON
        - OAUTH_AUTHORIZATION_POLICY
        - PASSWORD
        - PROFILE_ENROLLMENT
    PolicyUserNameTemplate:
      type: object
      properties:
        template:
          type: string
    PolicyUserStatus:
      type: string
      enum:
        - ACTIVATING
        - ACTIVE
        - DELETED
        - DELETING
        - EXPIRED_PASSWORD
        - INACTIVE
        - PENDING
        - SUSPENDED
    PossessionConstraint:
      allOf:
        - $ref: '#/components/schemas/AccessPolicyConstraint'
        - type: object
          properties:
            deviceBound:
              type: string
            hardwareProtection:
              type: string
            phishingResistant:
              type: string
            userPresence:
              type: string
    PreRegistrationInlineHook:
      type: object
      properties:
        inlineHookId:
          type: string
    PrincipalRateLimitEntity:
      title: PrincipalRateLimitEntity
      description: ''
      type: object
      properties:
        createdBy:
          type: string
          readOnly: true
        createdDate:
          type: string
          format: date-time
          readOnly: true
        defaultConcurrencyPercentage:
          type: integer
          readOnly: true
        defaultPercentage:
          type: integer
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdate:
          type: string
          format: date-time
          readOnly: true
        lastUpdatedBy:
          type: string
          readOnly: true
        orgId:
          type: string
          readOnly: true
        principalId:
          type: string
        principalType:
          $ref: '#/components/schemas/PrincipalType'
      required:
        - principalId
        - principalType
    PrincipalType:
      type: string
      enum:
        - SSWS_TOKEN
    ProfileEnrollmentPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/PolicyRuleConditions'
    ProfileEnrollmentPolicyRule:
      allOf:
        - $ref: '#/components/schemas/PolicyRule'
        - type: object
          properties:
            actions:
              $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActions'
            conditions:
              $ref: '#/components/schemas/PolicyRuleConditions'
    ProfileEnrollmentPolicyRuleAction:
      type: object
      properties:
        access:
          type: string
        activationRequirements:
          $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActivationRequirement'
        preRegistrationInlineHooks:
          items:
            $ref: '#/components/schemas/PreRegistrationInlineHook'
          type: array
        profileAttributes:
          items:
            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleProfileAttribute'
          type: array
        progressiveProfilingAction:
          type: string
          enum:
            - ENABLED
            - DISABLED
        targetGroupIds:
          items:
            type: string
          type: array
        unknownUserAction:
          type: string
          enum:
            - DENY
            - REGISTER
    ProfileEnrollmentPolicyRuleActions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleActions'
        - type: object
          properties:
            profileEnrollment:
              $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleAction'
    ProfileEnrollmentPolicyRuleActivationRequirement:
      type: object
      properties:
        emailVerification:
          type: boolean
    ProfileEnrollmentPolicyRuleProfileAttribute:
      type: object
      properties:
        label:
          type: string
        name:
          type: string
        required:
          type: boolean
    ProfileMapping:
      description: |-
        The Profile Mapping object describes a mapping between an Okta User's and an App User's properties using [JSON Schema Draft 4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04).

        > **Note:** Same type source/target mappings aren't supported by this API. Profile mappings must either be Okta->App or App->Okta.
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for a profile mapping
          readOnly: true
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProfileMappingProperty'
          readOnly: false
        source:
          type: object
          $ref: '#/components/schemas/ProfileMappingSource'
        target:
          type: object
          $ref: '#/components/schemas/ProfileMappingTarget'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    ProfileMappingProperty:
      description: A target property, in string form, that maps to a valid [JSON Schema Draft](https://tools.ietf.org/html/draft-zyp-json-schema-04) document.
      type: object
      properties:
        expression:
          description: Combination or single source properties that are mapped to the target property
          type: string
        pushStatus:
          $ref: '#/components/schemas/ProfileMappingPropertyPushStatus'
    ProfileMappingPropertyPushStatus:
      description: |-
        Indicates whether to update target properties for user create and update or just for user create.

        Having a pushStatus of `PUSH` causes properties in the target to be updated on create and update. Having a pushStatus of `DONT_PUSH` causes properties in the target to be updated only on create.
      type: string
      enum:
        - DONT_PUSH
        - PUSH
    ProfileMappingRequest:
      description: The updated request body properties
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProfileMappingProperty'
      required:
        - properties
        - additionalProperties
        - expression
        - pushStatus
    ProfileMappingSource:
      description: |-
        The parameter is the source of a profile mapping and is a valid [JSON Schema Draft 4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04) document with the following properties. The data type can be an app instance or an Okta object.

        > **Note:** If the source is Okta and the UserTypes feature isn't enabled, then the source `_links` only has a link to the schema.
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the application instance or userType
          readOnly: true
        name:
          type: string
          description: Variable name of the application instance or name of the referenced UserType
          readOnly: true
        type:
          type: string
          description: Type of user referenced in the mapping
          readOnly: true
        _links:
          $ref: '#/components/schemas/SourceLinks'
    ProfileMappingTarget:
      description: |-
        The parameter is the target of a profile mapping and is a valid [JSON Schema Draft 4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04) document with the following properties. The data type can be an app instance or an Okta object.

         > **Note:** If the target is Okta and the UserTypes feature isn't enabled, then the target `_links` only has a link to the schema.
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the application instance or UserType
          readOnly: true
        name:
          type: string
          description: Variable name of the application instance or name of the referenced userType
          readOnly: true
        type:
          type: string
          description: Type of user referenced in the mapping
          readOnly: true
        _links:
          $ref: '#/components/schemas/SourceLinks'
    ProfileSettingObject:
      description: |
        This setting determines whether a user in the application gets updated when they're updated in Okta.

        If enabled, Okta updates a user's attributes in the application when the application is assigned.
        Future changes made to the Okta user's profile automatically overwrite the corresponding attribute value in the application.
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/EnabledStatus'
            - example: DISABLED
            - default: DISABLED
    Protocol:
      type: object
      properties:
        algorithms:
          $ref: '#/components/schemas/ProtocolAlgorithms'
        credentials:
          $ref: '#/components/schemas/IdentityProviderCredentials'
        endpoints:
          $ref: '#/components/schemas/ProtocolEndpoints'
        issuer:
          $ref: '#/components/schemas/ProtocolEndpoint'
        relayState:
          $ref: '#/components/schemas/ProtocolRelayState'
        scopes:
          type: array
          items:
            type: string
        settings:
          $ref: '#/components/schemas/ProtocolSettings'
        type:
          $ref: '#/components/schemas/ProtocolType'
    ProtocolAlgorithmType:
      type: object
      properties:
        signature:
          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignature'
    ProtocolAlgorithmTypeSignature:
      type: object
      properties:
        algorithm:
          type: string
        scope:
          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignatureScope'
    ProtocolAlgorithmTypeSignatureScope:
      type: string
      enum:
        - ANY
        - NONE
        - REQUEST
        - RESPONSE
        - TOKEN
    ProtocolAlgorithms:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
        response:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
    ProtocolEndpoint:
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        destination:
          type: string
        type:
          $ref: '#/components/schemas/ProtocolEndpointType'
        url:
          type: string
    ProtocolEndpointBinding:
      type: string
      enum:
        - HTTP-POST
        - HTTP-REDIRECT
    ProtocolEndpointType:
      type: string
      enum:
        - INSTANCE
        - ORG
    ProtocolEndpoints:
      type: object
      properties:
        acs:
          $ref: '#/components/schemas/ProtocolEndpoint'
        authorization:
          $ref: '#/components/schemas/ProtocolEndpoint'
        jwks:
          $ref: '#/components/schemas/ProtocolEndpoint'
        metadata:
          $ref: '#/components/schemas/ProtocolEndpoint'
        slo:
          $ref: '#/components/schemas/ProtocolEndpoint'
        sso:
          $ref: '#/components/schemas/ProtocolEndpoint'
        token:
          $ref: '#/components/schemas/ProtocolEndpoint'
        userInfo:
          $ref: '#/components/schemas/ProtocolEndpoint'
    ProtocolRelayState:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/ProtocolRelayStateFormat'
    ProtocolRelayStateFormat:
      type: string
      enum:
        - FROM_URL
        - OPAQUE
    ProtocolSettings:
      type: object
      properties:
        nameFormat:
          type: string
    ProtocolType:
      type: string
      enum:
        - MTLS
        - OAUTH2
        - OIDC
        - SAML2
    ProviderType:
      type: string
      enum:
        - APNS
        - FCM
    Provisioning:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningAction'
        conditions:
          $ref: '#/components/schemas/ProvisioningConditions'
        groups:
          $ref: '#/components/schemas/ProvisioningGroups'
        profileMaster:
          type: boolean
    ProvisioningAction:
      type: string
      enum:
        - AUTO
        - CALLOUT
        - DISABLED
    ProvisioningConditions:
      type: object
      properties:
        deprovisioned:
          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'
        suspended:
          $ref: '#/components/schemas/ProvisioningSuspendedCondition'
    ProvisioningConnection:
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/ProvisioningConnectionAuthScheme'
        status:
          $ref: '#/components/schemas/ProvisioningConnectionStatus'
        _links:
          $ref: '#/components/schemas/LinksSelfAndLifecycle'
      required:
        - authScheme
        - status
    ProvisioningConnectionAuthScheme:
      description: Defines the method of authentication
      type: string
      enum:
        - OAUTH2
        - TOKEN
        - UNKNOWN
      x-enumDescriptions:
        TOKEN: A token is used to authenticate with the app.
        OAUTH2: OAuth 2.0 is used to authenticate with the app.
        UNKNOWN: The authentication scheme used by the app isn't supported, or the app doesn't support provisioning.
    ProvisioningConnectionAuthSchemeRequest:
      description: Method of authentication for the connection
      type: string
      enum:
        - OAUTH2
        - TOKEN
    ProvisioningConnectionProfile:
      description: |
        The profile used to configure the connection method of authentication and the credentials.
        Currently, token-based and OAuth 2.0-based authentication are supported.
      anyOf:
        - $ref: '#/components/schemas/ProvisioningConnectionProfileToken'
        - $ref: '#/components/schemas/ProvisioningConnectionProfileOauth'
      type: object
      discriminator:
        propertyName: authScheme
        mapping:
          TOKEN: '#/components/schemas/ProvisioningConnectionProfileToken'
          OAUTH2: '#/components/schemas/ProvisioningConnectionProfileOauth'
    ProvisioningConnectionProfileOauth:
      description: |
        The app provisioning connection profile used to configure the method of authentication and the credentials.
        Currently, token-based and OAuth 2.0-based authentication are supported.
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/ProvisioningConnectionAuthSchemeRequest'
        clientId:
          type: string
          description: Unique client identifier for the OAuth 2.0 service app from the target org
      required:
        - authScheme
        - clientId
    ProvisioningConnectionProfileToken:
      description: |
        The app provisioning connection profile used to configure the method of authentication and the credentials.
        Currently, token-based and OAuth 2.0-based authentication are supported.
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/ProvisioningConnectionAuthSchemeRequest'
        token:
          type: string
          description: Token used to authenticate with the app
      required:
        - authScheme
        - token
    ProvisioningConnectionRequest:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/ProvisioningConnectionProfile'
      required:
        - profile
    ProvisioningConnectionStatus:
      description: Provisioning connection status
      default: DISABLED
      type: string
      enum:
        - DISABLED
        - ENABLED
        - UNKNOWN
      x-enumDescriptions:
        DISABLED: The provisioning connection is disabled.
        ENABLED: The provisioning connection is enabled.
        UNKNOWN: Provisioning isn't supported by the app, or the authentication method is unknown.
    ProvisioningDeprovisionedAction:
      type: string
      enum:
        - NONE
        - REACTIVATE
    ProvisioningDeprovisionedCondition:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningDeprovisionedAction'
    ProvisioningGroups:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningGroupsAction'
        assignments:
          type: array
          items:
            type: string
        filter:
          type: array
          items:
            type: string
        sourceAttributeName:
          type: string
    ProvisioningGroupsAction:
      type: string
      enum:
        - APPEND
        - ASSIGN
        - NONE
        - SYNC
    ProvisioningSuspendedAction:
      type: string
      enum:
        - NONE
        - UNSUSPEND
    ProvisioningSuspendedCondition:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningSuspendedAction'
    PushMethodKeyProtection:
      type: string
      enum:
        - ANY
        - HARDWARE
    PushProvider:
      title: PushProvider
      type: object
      properties:
        id:
          type: string
          readOnly: true
        lastUpdatedDate:
          type: string
          readOnly: true
        name:
          type: string
          description: Display name of the push provider
        providerType:
          $ref: '#/components/schemas/ProviderType'
        _links:
          $ref: '#/components/schemas/LinksSelf'
      discriminator:
        propertyName: providerType
        mapping:
          APNS: '#/components/schemas/APNSPushProvider'
          FCM: '#/components/schemas/FCMPushProvider'
    PushUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            expiresAt:
              type: string
              format: date-time
            factorResult:
              $ref: '#/components/schemas/FactorResultType'
            profile:
              $ref: '#/components/schemas/PushUserFactorProfile'
    PushUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
        deviceToken:
          type: string
        deviceType:
          type: string
        name:
          type: string
        platform:
          type: string
        version:
          type: string
    RateLimitAdminNotifications:
      title: RateLimitAdminNotifications
      description: ''
      type: object
      properties:
        notificationsEnabled:
          type: boolean
      required:
        - notificationsEnabled
    RateLimitWarningThresholdRequest:
      title: RateLimitWarningThreshold
      description: ''
      type: object
      properties:
        warningThreshold:
          description: The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
          type: integer
          minimum: 30
          maximum: 90
      required:
        - warningThreshold
    RateLimitWarningThresholdResponse:
      title: RateLimitWarningThreshold
      description: ''
      type: object
      properties:
        warningThreshold:
          description: The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
          type: integer
          minimum: 30
          maximum: 90
    Realm:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the Realm was created
          readOnly: true
        id:
          type: string
          description: Unique key for the Realm
          readOnly: true
        isDefault:
          type: boolean
          description: Conveys whether the Realm is the default
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the Realm was last updated
          readOnly: true
        profile:
          $ref: '#/components/schemas/RealmProfile'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    RealmProfile:
      type: object
      properties:
        name:
          type: string
          description: Name of a Realm
    RecoveryQuestionCredential:
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
    ReleaseChannel:
      description: Release channel for auto-update
      type: string
      enum:
        - BETA
        - EA
        - GA
        - TEST
    RequiredEnum:
      type: string
      enum:
        - ALWAYS
        - HIGH_RISK_ONLY
        - NEVER
    ResetPasswordToken:
      type: object
      properties:
        resetPasswordUrl:
          type: string
          readOnly: true
    ResourceSet:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the role was created
          readOnly: true
        description:
          type: string
          description: Description of the Resource Set
        id:
          type: string
          description: Unique key for the role
          readOnly: true
        label:
          type: string
          description: Unique label for the Resource Set
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the role was last updated
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                resources:
                  $ref: '#/components/schemas/HrefObject'
                bindings:
                  $ref: '#/components/schemas/HrefObject'
    ResourceSetBindingAddMembersRequest:
      type: object
      properties:
        additions:
          type: array
          items:
            type: string
    ResourceSetBindingCreateRequest:
      type: object
      properties:
        members:
          type: array
          items:
            type: string
        role:
          type: string
          description: Unique key for the role
    ResourceSetBindingMember:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the role was created
          readOnly: true
        id:
          type: string
          description: Unique key for the role
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the role was last updated
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    ResourceSetBindingMembers:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSetBindingMember'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksNext'
            - properties:
                binding:
                  $ref: '#/components/schemas/HrefObject'
    ResourceSetBindingResponse:
      type: object
      properties:
        id:
          type: string
          description: '`id` of the role'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                bindings:
                  $ref: '#/components/schemas/HrefObject'
                resource-set:
                  $ref: '#/components/schemas/HrefObject'
    ResourceSetBindingRole:
      type: object
      properties:
        id:
          type: string
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                members:
                  $ref: '#/components/schemas/HrefObject'
    ResourceSetBindings:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSetBindingRole'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                bindings:
                  $ref: '#/components/schemas/HrefObject'
                resource-set:
                  $ref: '#/components/schemas/HrefObject'
    ResourceSetResource:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the role was created
          readOnly: true
        description:
          type: string
          description: Description of the Resource Set
        id:
          type: string
          description: Unique key for the role
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the role was last updated
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    ResourceSetResourcePatchRequest:
      type: object
      properties:
        additions:
          type: array
          items:
            type: string
    ResourceSetResources:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSetResource'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksNext'
            - properties:
                resource-set:
                  $ref: '#/components/schemas/HrefObject'
    ResourceSets:
      type: object
      properties:
        resource-sets:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSet'
        _links:
          $ref: '#/components/schemas/LinksNext'
    ResponseLinks:
      type: object
    RiskEvent:
      type: object
      properties:
        expiresAt:
          type: string
          format: date-time
          description: 'Timestamp at which the event expires (expressed as a UTC time zone using ISO 8601 format: yyyy-MM-dd`T`HH:mm:ss.SSS`Z`). If this optional field is not included, Okta automatically expires the event 24 hours after the event is consumed.'
        subjects:
          type: array
          description: List of Risk Event Subjects
          items:
            $ref: '#/components/schemas/RiskEventSubject'
        timestamp:
          type: string
          format: date-time
          description: 'Timestamp of when the event is produced (expressed as a UTC time zone using ISO 8601 format: yyyy-MM-dd`T`HH:mm:ss.SSS`Z`)'
      required:
        - subjects
    RiskEventSubject:
      type: object
      properties:
        ip:
          type: string
          description: The risk event subject IP address (either an IPv4 or IPv6 address)
        message:
          type: string
          description: Additional reasons for the risk level of the IP
          maxLength: 512
          pattern: ^[a-zA-Z0-9 .\-_]*$
        riskLevel:
          $ref: '#/components/schemas/RiskEventSubjectRiskLevel'
      required:
        - ip
        - riskLevel
    RiskEventSubjectRiskLevel:
      description: The risk level associated with the IP
      type: string
      enum:
        - HIGH
        - LOW
        - MEDIUM
    RiskPolicyRuleCondition:
      type: object
      properties:
        behaviors:
          uniqueItems: true
          type: array
          items:
            type: string
    RiskProvider:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/RiskProviderAction'
        clientId:
          type: string
          description: The ID of the [OAuth service app](https://developer.okta.com/docs/guides/implement-oauth-for-okta-serviceapp/main/#create-a-service-app-and-grant-scopes) that is used to send risk events to Okta
          example: 00cjkjjkkgjkdkjdkkljjsd
        created:
          type: string
          format: date-time
          description: Timestamp when the Risk Provider object was created
          readOnly: true
          example: '2021-01-05 22:18:30'
        id:
          type: string
          description: The ID of the Risk Provider object
          readOnly: true
          example: 00rp12r4skkjkjgsn
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the Risk Provider object was last updated
          readOnly: true
          example: '2021-01-05 22:18:30'
        name:
          type: string
          description: Name of the risk provider
          maxLength: 50
          example: Risk-Partner-X
        _links:
          $ref: '#/components/schemas/LinksSelf'
      required:
        - name
        - clientId
        - action
        - id
        - _links
    RiskProviderAction:
      description: Action taken by Okta during authentication attempts based on the risk events sent by this provider
      default: log_only
      type: string
      enum:
        - enforce_and_log
        - log_only
        - none
      x-enumDescriptions:
        log_only: Include risk event information in the System Log
        none: No action
        enforce_and_log: Use risk event information to evaluate risks during authentication attempts and include risk event information in the System Log
    RiskScorePolicyRuleCondition:
      type: object
      properties:
        level:
          type: string
    Role:
      type: object
      properties:
        assignmentType:
          $ref: '#/components/schemas/RoleAssignmentType'
        created:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        id:
          type: string
          readOnly: true
        label:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        resource-set:
          type: string
        role:
          type: string
        type:
          $ref: '#/components/schemas/RoleType'
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    RoleAssignedUser:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        orn:
          type: string
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelfAndRoles'
    RoleAssignedUsers:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignedUser'
        _links:
          $ref: '#/components/schemas/LinksNext'
    RoleAssignmentType:
      type: string
      enum:
        - GROUP
        - USER
    RolePermissionType:
      type: string
      enum:
        - okta.apps.assignment.manage
        - okta.apps.manage
        - okta.apps.manageFirstPartyApps
        - okta.apps.read
        - okta.authzServers.manage
        - okta.authzServers.read
        - okta.customizations.manage
        - okta.customizations.read
        - okta.governance.accessCertifications.manage
        - okta.governance.accessRequests.manage
        - okta.groups.appAssignment.manage
        - okta.groups.create
        - okta.groups.manage
        - okta.groups.members.manage
        - okta.groups.read
        - okta.profilesources.import.run
        - okta.users.appAssignment.manage
        - okta.users.create
        - okta.users.credentials.expirePassword
        - okta.users.credentials.manage
        - okta.users.credentials.resetFactors
        - okta.users.credentials.resetPassword
        - okta.users.groupMembership.manage
        - okta.users.lifecycle.activate
        - okta.users.lifecycle.clearSessions
        - okta.users.lifecycle.deactivate
        - okta.users.lifecycle.delete
        - okta.users.lifecycle.manage
        - okta.users.lifecycle.suspend
        - okta.users.lifecycle.unlock
        - okta.users.lifecycle.unsuspend
        - okta.users.manage
        - okta.users.read
        - okta.users.userprofile.manage
    RoleType:
      type: string
      enum:
        - API_ACCESS_MANAGEMENT_ADMIN
        - API_ADMIN
        - APP_ADMIN
        - CUSTOM
        - GROUP_MEMBERSHIP_ADMIN
        - HELP_DESK_ADMIN
        - MOBILE_ADMIN
        - ORG_ADMIN
        - READ_ONLY_ADMIN
        - REPORT_ADMIN
        - SUPER_ADMIN
        - USER_ADMIN
      x-enumDescriptions:
        - API_ACCESS_MANAGEMENT_ADMIN: Access Management Administrator
        - API_ADMIN: Access Management Administrator
        - APP_ADMIN: Application Administrator
        - CUSTOM: Custom Label specified by the client
        - GROUP_MEMBERSHIP_ADMIN: Group Membership Administrator
        - HELP_DESK_ADMIN: Help Desk Administrator
        - MOBILE_ADMIN: Mobile Administrator
        - ORG_ADMIN: Organizational Administrator
        - READ_ONLY_ADMIN: Read-Only Administrator
        - REPORT_ADMIN: Report Administrator
        - SUPER_ADMIN: Super Administrator
        - USER_ADMIN: Group Administrator
    SafeBrowsingProtectionLevel:
      description: Represents the current value of the Safe Browsing protection level
      example: ENHANCED_PROTECTION
      type: string
      enum:
        - ENHANCED_PROTECTION
        - NO_SAFE_BROWSING
        - STANDARD_PROTECTION
      x-enumDescriptions:
        NO_SAFE_BROWSING: Safe Browsing is never active
        STANDARD_PROTECTION: Safe Browsing is active in the standard mode
        ENHANCED_PROTECTION: Safe Browsing is active in the enhanced mode
    SamlApplication:
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/ApplicationCredentials'
            name:
              type: string
            settings:
              $ref: '#/components/schemas/SamlApplicationSettings'
    SamlApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/SamlApplicationSettingsApplication'
            signOn:
              $ref: '#/components/schemas/SamlApplicationSettingsSignOn'
    SamlApplicationSettingsApplication:
      type: object
      properties:
        acsUrl:
          type: string
        audRestriction:
          type: string
        baseUrl:
          type: string
    SamlApplicationSettingsSignOn:
      type: object
      properties:
        acsEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/AcsEndpoint'
        allowMultipleAcsEndpoints:
          type: boolean
        assertionSigned:
          type: boolean
        attributeStatements:
          type: array
          items:
            $ref: '#/components/schemas/SamlAttributeStatement'
        audience:
          type: string
        audienceOverride:
          type: string
        authnContextClassRef:
          type: string
        configuredAttributeStatements:
          type: array
          items:
            $ref: '#/components/schemas/SamlAttributeStatement'
        defaultRelayState:
          type: string
        destination:
          type: string
        destinationOverride:
          type: string
        digestAlgorithm:
          type: string
        honorForceAuthn:
          type: boolean
        idpIssuer:
          type: string
        inlineHooks:
          items:
            $ref: '#/components/schemas/SignOnInlineHook'
          type: array
        recipient:
          type: string
        recipientOverride:
          type: string
        requestCompressed:
          type: boolean
        responseSigned:
          type: boolean
        signatureAlgorithm:
          type: string
        slo:
          $ref: '#/components/schemas/SingleLogout'
        spCertificate:
          $ref: '#/components/schemas/SpCertificate'
        spIssuer:
          type: string
        ssoAcsUrl:
          type: string
        ssoAcsUrlOverride:
          type: string
        subjectNameIdFormat:
          type: string
        subjectNameIdTemplate:
          type: string
    SamlAttributeStatement:
      type: object
      properties:
        filterType:
          type: string
        filterValue:
          type: string
        name:
          type: string
        namespace:
          type: string
        type:
          type: string
        values:
          type: array
          items:
            type: string
    ScheduledUserLifecycleAction:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PolicyUserStatus'
    SchemeApplicationCredentials:
      allOf:
        - $ref: '#/components/schemas/ApplicationCredentials'
        - type: object
          properties:
            password:
              $ref: '#/components/schemas/PasswordCredential'
            revealPassword:
              type: boolean
            scheme:
              $ref: '#/components/schemas/ApplicationCredentialsScheme'
            signing:
              $ref: '#/components/schemas/ApplicationCredentialsSigning'
            userName:
              type: string
    ScreenLockType:
      type: string
      enum:
        - BIOMETRIC
        - PASSCODE
    SecurePasswordStoreApplication:
      x-okta-defined-as:
        name: template_sps
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/SchemeApplicationCredentials'
            name:
              type: string
              default: template_sps
            settings:
              $ref: '#/components/schemas/SecurePasswordStoreApplicationSettings'
    SecurePasswordStoreApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/SecurePasswordStoreApplicationSettingsApplication'
    SecurePasswordStoreApplicationSettingsApplication:
      type: object
      properties:
        optionalField1:
          type: string
        optionalField1Value:
          type: string
        optionalField2:
          type: string
        optionalField2Value:
          type: string
        optionalField3:
          type: string
        optionalField3Value:
          type: string
        passwordField:
          type: string
        url:
          type: string
        usernameField:
          type: string
    SecurityQuestion:
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
        questionText:
          type: string
    SecurityQuestionUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/SecurityQuestionUserFactorProfile'
    SecurityQuestionUserFactorProfile:
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
        questionText:
          type: string
    SeedEnum:
      description: Determines whether the generated password is the user's Okta password or a randomly generated password
      default: RANDOM
      example: OKTA
      type: string
      enum:
        - OKTA
        - RANDOM
    SelfServicePasswordResetAction:
      allOf:
        - $ref: '#/components/schemas/PasswordPolicyRuleAction'
        - type: object
        - description: Enables or disables users to reset their own password and defines the authenticators and constraints needed to complete the reset
          properties:
            type:
              type: string
              readOnly: true
              description: The type of rule action
              enum:
                - selfServicePasswordReset
            requirement:
              $ref: '#/components/schemas/SsprRequirement'
    Session:
      type: object
      properties:
        amr:
          type: array
          readOnly: true
          description: Authentication method reference
          items:
            $ref: '#/components/schemas/SessionAuthenticationMethod'
        createdAt:
          type: string
          format: date-time
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          readOnly: true
          description: A timestamp when the Session expires
        id:
          type: string
          readOnly: true
          description: A unique key for the Session
        idp:
          $ref: '#/components/schemas/SessionIdentityProvider'
        lastFactorVerification:
          type: string
          format: date-time
          readOnly: true
          description: A timestamp when the user last performed multifactor authentication
        lastPasswordVerification:
          type: string
          format: date-time
          readOnly: true
          description: A timestamp when the user last performed the primary or step-up authentication with a password
        login:
          type: string
          readOnly: true
          description: A unique identifier for the user (username)
        status:
          $ref: '#/components/schemas/SessionStatus'
          description: Current Session status
        userId:
          type: string
          readOnly: true
          description: A unique key for the user
        _links:
          $ref: '#/components/schemas/LinksSelf'
    SessionAuthenticationMethod:
      type: string
      enum:
        - fpt
        - geo
        - hwk
        - kba
        - mca
        - mfa
        - otp
        - pwd
        - sc
        - sms
        - swk
        - tel
      x-enumDescriptions:
        pwd: Password authentication. **Inline hook value:** `PASSWORD` **Example:** Standard password-based sign-in
        swk: Proof-of-possession (PoP) of a software key. **Inline hook value:** `POP_SOFTWARE_KEY` **Example:** Okta Verify with Push
        hwk: Proof-of-possession (PoP) of a hardware key. **Inline hook value:** `POP_HARDWARE_KEY` **Example:** Yubikey factor
        opt: One-time password. **Inline hook value:** `ONE_TIME_PASSWORD`. **Example:** Okta Verify, Google Authenticator
        sms: SMS text message to the user at a registered number. **Inline hook value:** `SMS_MESSAGE`. **Example:** SMS factor
        tel: Telephone call to the user at a registered number. **Inline hook value:** `TELEPHONE_CALL`. **Example:** Phone call factor
        geo: Use of geo-location information. **Inline hook value:** `GEOLOCATION`. **Example:** IP Trust and Network Zone policy conditions
        fpt: Fingerprint biometric authentication. **Inline hook value:** `BIO_FINGERPRINT`. **Example:** Okta Verify with Touch ID
        kba: Knowledge-based authentication. **Inline hook value:** `KNOWLEDGE_BASED_AUTHENTICATION`. **Example:** Security Question factor
        mfa: Multifactor authentication. **Inline hook value:** `MULTIFACTOR_AUTHENTICATION`. **Example:** This value is present whenever any MFA factor verification is performed.
        mca: Multiple-channel authentication. **Inline hook value:** `MULTIPLE_CHANNEL_AUTHENTICATION`. **Example:** Authentication requires communication over more than one channel, such as Internet and mobile network
        sc: Smart card authentication. **Inline hook value:** `SMART_CARD. **Example:** User authenticated using a smart card, such as a Personal Identity Verification (PIV) card or Common Access Card (CAC)
    SessionIdentityProvider:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: Identity Provider ID. If the `type` is `OKTA`, then the `id` is the org ID.
        type:
          $ref: '#/components/schemas/SessionIdentityProviderType'
    SessionIdentityProviderType:
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - FEDERATION
        - LDAP
        - OKTA
        - SOCIAL
    SessionStatus:
      type: string
      enum:
        - ACTIVE
        - MFA_ENROLL
        - MFA_REQUIRED
      x-enumDescriptions:
        ACTIVE: The Session is established and fully validated.
        MFA_REQUIRED: The Session is established, but requires second factor verification.
        MFA_ENROLL: The Session is established, but the user needs to enroll a second factor.
    ShowSignInWithOV:
      type: string
      enum:
        - ALWAYS
        - NEVER
    SignInPage:
      allOf:
        - $ref: '#/components/schemas/CustomizablePage'
        - type: object
          properties:
            contentSecurityPolicySetting:
              $ref: '#/components/schemas/ContentSecurityPolicySetting'
            widgetCustomizations:
              type: object
              properties:
                signInLabel:
                  type: string
                usernameLabel:
                  type: string
                usernameInfoTip:
                  type: string
                passwordLabel:
                  type: string
                passwordInfoTip:
                  type: string
                showPasswordVisibilityToggle:
                  type: boolean
                showUserIdentifier:
                  type: boolean
                forgotPasswordLabel:
                  type: string
                forgotPasswordUrl:
                  type: string
                unlockAccountLabel:
                  type: string
                unlockAccountUrl:
                  type: string
                helpLabel:
                  type: string
                helpUrl:
                  type: string
                customLink1Label:
                  type: string
                customLink1Url:
                  type: string
                customLink2Label:
                  type: string
                customLink2Url:
                  type: string
                authenticatorPageCustomLinkLabel:
                  type: string
                authenticatorPageCustomLinkUrl:
                  type: string
                classicRecoveryFlowEmailOrUsernameLabel:
                  type: string
            widgetVersion:
              $ref: '#/components/schemas/Version'
    SignInPageTouchPointVariant:
      type: string
      enum:
        - BACKGROUND_IMAGE
        - BACKGROUND_SECONDARY_COLOR
        - OKTA_DEFAULT
    SignOnInlineHook:
      properties:
        id:
          type: string
          readOnly: false
    SimulatePolicyBody:
      description: The request body required for a simulate policy operation.
      type: object
      properties:
        appInstance:
          type: string
          description: The application instance ID for a simulate operation
        policyContext:
          $ref: '#/components/schemas/PolicyContext'
        policyTypes:
          type: string
          description: Supported policy types for a simulate operation. The default value, `null`, returns all types.
          enum:
            - OKTA_SIGN_ON
            - MFA_ENROLL
            - PROFILE_ENROLLMENT
            - ACCESS_POLICY
            - null
      required:
        - appInstance
    SimulatePolicyEvaluations:
      type: object
      properties:
        evaluated:
          type: object
          description: A list of evaluated but not matched policies and rules
          properties:
            policies:
              $ref: '#/components/schemas/SimulateResultPolicies'
        policyType:
          type: string
          description: The policy type of the simulate operation
          enum:
            - OKTA_SIGN_ON
            - MFA_ENROLL
            - PROFILE_ENROLLMENT
            - ACCESS_POLICY
            - null
        result:
          $ref: '#/components/schemas/SimulatePolicyResult'
        status:
          type: string
          description: The result of this entity evaluation
          enum:
            - MATCH
            - NOT_MATCH
            - UNDEFINED
        undefined:
          type: object
          description: A list of undefined but not matched policies and rules
          properties:
            policies:
              $ref: '#/components/schemas/SimulateResultPolicies'
    SimulatePolicyResponse:
      description: The response body returned for a simulate policy operation. An array of `evaluations`.
      items:
        $ref: '#/components/schemas/SimulatePolicyEvaluations'
      type: array
    SimulatePolicyResult:
      description: The result of the policy evaluation
      type: object
      properties:
        policies:
          $ref: '#/components/schemas/SimulateResultPolicies'
    SimulateResultConditions:
      type: object
      properties:
        status:
          type: string
          description: The result of the entity evaluation
          enum:
            - MATCH
            - UNMATCHED
            - UNDEFINED
        type:
          type: string
          description: The type of condition
    SimulateResultPolicies:
      items:
        $ref: '#/components/schemas/SimulateResultPoliciesItems'
      type: array
    SimulateResultPoliciesItems:
      type: object
      properties:
        conditions:
          type: array
          $ref: '#/components/schemas/SimulateResultConditions'
        id:
          type: string
        name:
          type: string
        rules:
          type: array
          $ref: '#/components/schemas/SimulateResultRules'
        status:
          type: string
    SimulateResultRules:
      type: object
      properties:
        conditions:
          type: array
          $ref: '#/components/schemas/SimulateResultConditions'
        id:
          type: string
          description: The unique ID number of the policy rule
        name:
          type: string
          description: The name of the policy rule
        status:
          type: string
          description: The result of the entity evaluation
          enum:
            - MATCH
            - UNMATCHED
            - UNDEFINED
    SingleLogout:
      type: object
      properties:
        enabled:
          type: boolean
        issuer:
          type: string
        logoutUrl:
          type: string
    SmsTemplate:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        template:
          type: string
        translations:
          $ref: '#/components/schemas/SmsTemplateTranslations'
        type:
          $ref: '#/components/schemas/SmsTemplateType'
    SmsTemplateTranslations:
      type: object
      x-okta-extensible: true
    SmsTemplateType:
      type: string
      enum:
        - SMS_VERIFY_CODE
    SmsUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/SmsUserFactorProfile'
    SmsUserFactorProfile:
      type: object
      properties:
        phoneNumber:
          type: string
    SocialAuthToken:
      type: object
      properties:
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
        tokenAuthScheme:
          type: string
        tokenType:
          type: string
    SourceLinks:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        - type: object
          properties:
            schema:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: The associated schema
    SpCertificate:
      type: object
      properties:
        x5c:
          type: array
          items:
            type: string
    SplunkEdition:
      description: Edition of the Splunk Cloud instance
      example: aws
      type: string
      enum:
        - aws
        - aws_govcloud
        - gcp
    SplunkHost:
      description: 'The domain name for your Splunk Cloud instance. Don''t include `http` or `https` in the string. For example: `acme.splunkcloud.com`'
      minLength: 17
      maxLength: 116
      example: acme.splunkcloud.com
      type: string
    SplunkToken:
      description: The HEC token for your Splunk Cloud HTTP Event Collector. The token value is set at object creation, but isn't returned.
      example: 11111111-1111-2222-2222-222222222222
      writeOnly: true
      type: string
      pattern: (?i)^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
    SsprPrimaryRequirement:
      description: Defines the authenticators permitted for the initial authentication step of password recovery
      type: object
      properties:
        methodConstraints:
          description: Constraints on the values specified in the `methods` array. Specifying a constraint limits methods to specific authenticator(s). Currently, Google OTP is the only accepted constraint.
          x-okta-lifecycle:
            features:
              - IDX_SSPR_EXTENDED_PRIMARY_FACTORS
          type: array
          items:
            $ref: '#/components/schemas/AuthenticatorMethodConstraint'
        methods:
          type: array
          description: Authenticator methods allowed for the initial authentication step of password recovery
          items:
            type: string
            enum:
              - push
              - sms
              - voice
              - email
          x-okta-feature-flag-amends:
            IDX_SSPR_EXTENDED_PRIMARY_FACTORS:
              description: Authenticator methods allowed for the initial authentication step of password recovery. Method `otp` requires a constraint limiting it to a Google authenticator.
              items:
                type: string
                enum:
                  - push
                  - sms
                  - voice
                  - email
                  - otp
    SsprRequirement:
      description: Describes the initial and secondary authenticator requirements a user needs to reset their password
      type: object
      properties:
        primary:
          $ref: '#/components/schemas/SsprPrimaryRequirement'
        stepUp:
          $ref: '#/components/schemas/SsprStepUpRequirement'
    SsprStepUpRequirement:
      description: |-
        Defines the secondary authenticators needed for password reset if `required` is true. The following are three valid configurations:
        * `required`=false
        * `required`=true with no methods to use any SSO authenticator
        * `required`=true with `security_question` as the method
      type: object
      properties:
        methods:
          description: Authenticator methods required for secondary authentication step of password recovery. Specify this value only when `required` is true and `security_question` is permitted for the secondary authentication.
          type: array
          items:
            type: string
            enum:
              - security_question
        required:
          type: boolean
    Subscription:
      type: object
      properties:
        channels:
          description: |-
            An array of sources send notifications to users.
            > **Note**: Currently, Okta only allows `email` channels.
          items:
            type: string
          type: array
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
        _links:
          type: object
          description: Discoverable resources related to the subscription
          properties:
            self:
              $ref: '#/components/schemas/HrefObject'
          readOnly: true
    SubscriptionStatus:
      description: The status of the subscription
      type: string
      enum:
        - subscribed
        - unsubscribed
    SupportedMethods:
      type: object
      properties:
        settings:
          type: object
          properties:
            keyProtection:
              type: string
            algorithms:
              type: array
              items:
                $ref: '#/components/schemas/AuthenticatorMethodAlgorithm'
            transactionTypes:
              type: array
              items:
                $ref: '#/components/schemas/AuthenticatorMethodTransactionType'
        status:
          type: string
        type:
          type: string
          enum:
            - push
    SwaApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/SwaApplicationSettingsApplication'
    SwaApplicationSettingsApplication:
      type: object
      properties:
        buttonField:
          type: string
        buttonSelector:
          type: string
        checkbox:
          type: string
        extraFieldSelector:
          type: string
        extraFieldValue:
          type: string
        loginUrlRegex:
          type: string
        passwordField:
          type: string
        passwordSelector:
          type: string
        redirectUrl:
          type: string
        targetURL:
          type: string
        url:
          type: string
        usernameField:
          type: string
        userNameSelector:
          type: string
    TempPassword:
      type: object
      properties:
        tempPassword:
          type: string
          readOnly: true
    Theme:
      type: object
      properties:
        backgroundImage:
          readOnly: true
          type: string
        emailTemplateTouchPointVariant:
          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
        endUserDashboardTouchPointVariant:
          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
        errorPageTouchPointVariant:
          $ref: '#/components/schemas/ErrorPageTouchPointVariant'
        loadingPageTouchPointVariant:
          $ref: '#/components/schemas/LoadingPageTouchPointVariant'
        primaryColorContrastHex:
          type: string
        primaryColorHex:
          type: string
        secondaryColorContrastHex:
          type: string
        secondaryColorHex:
          type: string
        signInPageTouchPointVariant:
          $ref: '#/components/schemas/SignInPageTouchPointVariant'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    ThemeResponse:
      type: object
      properties:
        backgroundImage:
          readOnly: true
          type: string
        emailTemplateTouchPointVariant:
          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
        endUserDashboardTouchPointVariant:
          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
        errorPageTouchPointVariant:
          $ref: '#/components/schemas/ErrorPageTouchPointVariant'
        favicon:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        loadingPageTouchPointVariant:
          $ref: '#/components/schemas/LoadingPageTouchPointVariant'
        logo:
          readOnly: true
          type: string
        primaryColorContrastHex:
          type: string
        primaryColorHex:
          type: string
        secondaryColorContrastHex:
          type: string
        secondaryColorHex:
          type: string
        signInPageTouchPointVariant:
          $ref: '#/components/schemas/SignInPageTouchPointVariant'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    ThreatInsightConfiguration:
      type: object
      properties:
        action:
          type: string
          description: Specifies how Okta responds to authentication requests from suspicious IP addresses
          enum:
            - none
            - audit
            - block
          x-enumDescriptions:
            none: Indicates that ThreatInsight is disabled
            audit: Indicates that Okta logs suspicious requests to the System Log
            block: Indicates that Okta logs suspicious requests to the System Log and blocks the requests
          example: none
        created:
          type: string
          format: date-time
          description: Timestamp when the ThreatInsight Configuration object was created
          example: '2020-08-05T22:18:30.629Z'
          readOnly: true
        excludeZones:
          type: array
          description: |-
            Accepts a list of [Network Zone](/openapi/okta-management/management/tag/NetworkZone/) IDs.
            IPs in the excluded network zones aren't logged or blocked.
            This ensures that traffic from known, trusted IPs isn't accidentally logged or blocked.
          items:
            type: string
          example: []
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the ThreatInsight Configuration object was last updated
          readOnly: true
          example: '2020-09-08T20:53:20.882Z'
        _links:
          $ref: '#/components/schemas/LinksSelf'
      required:
        - action
    TimeDuration:
      description: A time duration specified as an [ISO-8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
      type: string
      pattern: ^P(?!$)(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?$
    TokenAuthorizationServerPolicyRuleAction:
      type: object
      properties:
        accessTokenLifetimeMinutes:
          type: integer
        inlineHook:
          $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleActionInlineHook'
        refreshTokenLifetimeMinutes:
          type: integer
        refreshTokenWindowMinutes:
          type: integer
    TokenAuthorizationServerPolicyRuleActionInlineHook:
      type: object
      properties:
        id:
          type: string
          readOnly: false
    TokenUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/TokenUserFactorProfile'
    TokenUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    TotpUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/TotpUserFactorProfile'
    TotpUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    TrustedOrigin:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        lastUpdatedBy:
          type: string
        name:
          type: string
        origin:
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/TrustedOriginScope'
        status:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
    TrustedOriginScope:
      type: object
      properties:
        allowedOktaApps:
          type: array
          items:
            $ref: '#/components/schemas/IframeEmbedScopeAllowedApps'
        type:
          $ref: '#/components/schemas/TrustedOriginScopeType'
    TrustedOriginScopeType:
      type: string
      enum:
        - CORS
        - IFRAME_EMBED
        - REDIRECT
    U2fUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/U2fUserFactorProfile'
    U2fUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    UIElement:
      description: Specifies the configuration of an input field on an enrollment form
      type: object
      properties:
        label:
          type: string
          description: Label name for the UI element
        options:
          type: object
          description: UI Schema element options object
          properties:
            format:
              type: string
              description: Specifies how the input appears
              enum:
                - text
                - radio
                - select
                - checkbox
                - radio_yes_no
                - radio_true_false
              x-enumDescriptions:
                text: The default format for the majority of property types.
                radio: Radio button options. This option is only available for `string` data types with an `enum` or `one of` constraint.
                select: Displays input as a dropdown list. This option is only available for the `country-code` data type or a string data type with an enum or one of constraint.
                checkbox: Displays input as a checkbox. This option is only available for Boolean data types.
                radio_yes_no: Displays input as two radio buttons, one with the option `yes` and the other `no`. This option is only available for Boolean data types.
                radio_true_false: Displays input as two radio buttons, one with the option `true` and the other `false`. This option is only available for Boolean data types.
        scope:
          type: string
          description: Specifies the property bound to the input field. It must follow the format `#/properties/PROPERTY_NAME` where `PROPERTY_NAME` is a variable name for an attribute in `profile editor`.
        type:
          type: string
          description: Specifies the relationship between this input element and `scope`. The `Control` value specifies that this input controls the value represented by `scope`.
    UISchemaObject:
      description: Properties of the UI schema
      type: object
      properties:
        buttonLabel:
          type: string
          description: Specifies the button label for the `Submit` button at the bottom of the enrollment form.
          default: Submit
        elements:
          $ref: '#/components/schemas/UIElement'
        label:
          type: string
          description: Specifies the label at the top of the enrollment form under the logo.
          default: Sign in
        type:
          type: string
          description: Specifies the type of layout
    UISchemasResponseObject:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the UI Schema was created (ISO-86001)
          readOnly: true
        id:
          type: string
          description: Unique identifier for the UI Schema
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the UI Schema was last modified (ISO-86001)
          readOnly: true
        uiSchema:
          $ref: '#/components/schemas/UISchemaObject'
        _links:
          $ref: '#/components/schemas/LinksSelf'
      required:
        - id
        - uiSchema
        - created
        - lastUpdated
        - _links
    UpdateDomain:
      type: object
      properties:
        brandId:
          description: The `id` of the brand used to replace the existing brand.
          type: string
          example: bndul904tTZ6kWVhP0g3
      required:
        - brandId
    UpdateEmailDomain:
      allOf:
        - $ref: '#/components/schemas/BaseEmailDomain'
    UpdateIamRoleRequest:
      type: object
      properties:
        description:
          type: string
          description: Description of the role
        label:
          type: string
          description: Unique label for the role
      required:
        - label
        - description
    UpdateUISchema:
      description: The updated request body properties
      type: object
      properties:
        uiSchema:
          type: object
          description: Updated schema property expressions (Okta object or App Instance object)
          $ref: '#/components/schemas/UISchemaObject'
    UpdateUserRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        profile:
          $ref: '#/components/schemas/UserProfile'
        realmId:
          type: string
          description: The ID of the realm in which the user is residing
          example: guo1bfiNtSnZYILxO0g4
          x-okta-lifecycle:
            features:
              - UD_REALMS
    User:
      type: object
      properties:
        activated:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          type: string
          readOnly: true
        lastLogin:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        passwordChanged:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        profile:
          $ref: '#/components/schemas/UserProfile'
        realmId:
          type: string
          description: The ID of the realm in which the user is residing
          example: guo1bfiNtSnZYILxO0g4
          x-okta-lifecycle:
            features:
              - UD_REALMS
          readOnly: true
        status:
          $ref: '#/components/schemas/UserStatus'
        statusChanged:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        transitioningToStatus:
          $ref: '#/components/schemas/UserStatus'
        type:
          $ref: '#/components/schemas/UserType'
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    UserActivationToken:
      type: object
      properties:
        activationToken:
          type: string
          readOnly: true
        activationUrl:
          type: string
          readOnly: true
    UserBlock:
      type: object
      properties:
        appliesTo:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
    UserCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    UserCredentials:
      type: object
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProvider'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
    UserFactor:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        factorType:
          $ref: '#/components/schemas/FactorType'
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        profile:
          type: object
          description: Factor-specific attributes
        provider:
          $ref: '#/components/schemas/FactorProvider'
        status:
          $ref: '#/components/schemas/FactorStatus'
        verify:
          $ref: '#/components/schemas/VerifyFactorRequest'
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
      discriminator:
        propertyName: factorType
        mapping:
          call: '#/components/schemas/CallUserFactor'
          email: '#/components/schemas/EmailUserFactor'
          push: '#/components/schemas/PushUserFactor'
          question: '#/components/schemas/SecurityQuestionUserFactor'
          signed_nonce: '#/components/schemas/PushUserFactor'
          sms: '#/components/schemas/SmsUserFactor'
          token: '#/components/schemas/TokenUserFactor'
          token:hardware: '#/components/schemas/HardwareUserFactor'
          token:hotp: '#/components/schemas/CustomHotpUserFactor'
          token:software:totp: '#/components/schemas/TotpUserFactor'
          u2f: '#/components/schemas/U2fUserFactor'
          web: '#/components/schemas/WebUserFactor'
          webauthn: '#/components/schemas/WebAuthnUserFactor'
          hotp: '#/components/schemas/CustomHotpUserFactor'
    UserIdentifierConditionEvaluatorPattern:
      type: object
      properties:
        matchType:
          $ref: '#/components/schemas/UserIdentifierMatchType'
        value:
          type: string
    UserIdentifierMatchType:
      type: string
      enum:
        - CONTAINS
        - EQUALS
        - EXPRESSION
        - STARTS_WITH
        - SUFFIX
    UserIdentifierPolicyRuleCondition:
      type: object
      properties:
        attribute:
          type: string
        patterns:
          type: array
          items:
            $ref: '#/components/schemas/UserIdentifierConditionEvaluatorPattern'
        type:
          $ref: '#/components/schemas/UserIdentifierType'
    UserIdentifierType:
      type: string
      enum:
        - ATTRIBUTE
        - IDENTIFIER
    UserIdentityProviderLinkRequest:
      type: object
      properties:
        externalId:
          type: string
    UserLifecycleAttributePolicyRuleCondition:
      type: object
      properties:
        attributeName:
          type: string
        matchingValue:
          type: string
    UserLockoutSettings:
      type: object
      properties:
        preventBruteForceLockoutFromUnknownDevices:
          type: boolean
          description: Prevents brute-force lockout from unknown devices for the password authenticator.
    UserNextLogin:
      type: string
      enum:
        - changePassword
    UserPolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        inactivity:
          $ref: '#/components/schemas/InactivityPolicyRuleCondition'
        include:
          type: array
          items:
            type: string
        lifecycleExpiration:
          $ref: '#/components/schemas/LifecycleExpirationPolicyRuleCondition'
        passwordExpiration:
          $ref: '#/components/schemas/PasswordExpirationPolicyRuleCondition'
        userLifecycleAttribute:
          $ref: '#/components/schemas/UserLifecycleAttributePolicyRuleCondition'
    UserProfile:
      additionalProperties: {}
      type: object
      properties:
        city:
          type: string
          maxLength: 128
          nullable: true
        costCenter:
          type: string
        countryCode:
          type: string
          maxLength: 2
          nullable: true
        department:
          type: string
        displayName:
          type: string
        division:
          type: string
        email:
          type: string
          format: email
          minLength: 5
          maxLength: 100
        employeeNumber:
          type: string
        firstName:
          type: string
          minLength: 1
          maxLength: 50
          nullable: true
        honorificPrefix:
          type: string
        honorificSuffix:
          type: string
        lastName:
          type: string
          minLength: 1
          maxLength: 50
          nullable: true
        locale:
          $ref: '#/components/schemas/Language'
        login:
          type: string
          maxLength: 100
        manager:
          type: string
        managerId:
          type: string
        middleName:
          type: string
        mobilePhone:
          type: string
          maxLength: 100
          nullable: true
        nickName:
          type: string
        organization:
          type: string
        postalAddress:
          type: string
          maxLength: 4096
          nullable: true
        preferredLanguage:
          type: string
        primaryPhone:
          type: string
          maxLength: 100
          nullable: true
        profileUrl:
          type: string
        secondEmail:
          type: string
          format: email
          minLength: 5
          maxLength: 100
          nullable: true
        state:
          type: string
          maxLength: 128
          nullable: true
        streetAddress:
          type: string
          maxLength: 1024
          nullable: true
        timezone:
          type: string
        title:
          type: string
        userType:
          type: string
        zipCode:
          type: string
          maxLength: 50
          nullable: true
    UserSchema:
      type: object
      properties:
        $schema:
          type: string
          readOnly: true
        created:
          type: string
          readOnly: true
        definitions:
          $ref: '#/components/schemas/UserSchemaDefinitions'
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        title:
          type: string
        type:
          type: string
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    UserSchemaAttribute:
      type: object
      properties:
        description:
          type: string
        enum:
          type: array
          items:
            type: string
        externalName:
          type: string
        externalNamespace:
          type: string
        items:
          $ref: '#/components/schemas/UserSchemaAttributeItems'
        master:
          $ref: '#/components/schemas/UserSchemaAttributeMaster'
        maxLength:
          type: integer
        minLength:
          type: integer
        mutability:
          type: string
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
        pattern:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributePermission'
        required:
          type: boolean
        scope:
          $ref: '#/components/schemas/UserSchemaAttributeScope'
        title:
          type: string
        type:
          $ref: '#/components/schemas/UserSchemaAttributeType'
        union:
          $ref: '#/components/schemas/UserSchemaAttributeUnion'
        unique:
          type: string
      x-okta-allow-null-property-value-for-updates: true
    UserSchemaAttributeEnum:
      type: object
      properties:
        const:
          type: string
        title:
          type: string
    UserSchemaAttributeItems:
      type: object
      properties:
        enum:
          type: array
          items:
            type: string
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
        type:
          type: string
    UserSchemaAttributeMaster:
      type: object
      properties:
        priority:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeMasterPriority'
        type:
          $ref: '#/components/schemas/UserSchemaAttributeMasterType'
    UserSchemaAttributeMasterPriority:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    UserSchemaAttributeMasterType:
      type: string
      enum:
        - OKTA
        - OVERRIDE
        - PROFILE_MASTER
    UserSchemaAttributePermission:
      type: object
      properties:
        action:
          type: string
        principal:
          type: string
    UserSchemaAttributeScope:
      type: string
      enum:
        - NONE
        - SELF
    UserSchemaAttributeType:
      type: string
      enum:
        - array
        - boolean
        - integer
        - number
        - string
    UserSchemaAttributeUnion:
      type: string
      enum:
        - DISABLE
        - ENABLE
    UserSchemaBase:
      type: object
      properties:
        id:
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaBaseProperties'
        required:
          type: array
          items:
            type: string
        type:
          type: string
    UserSchemaBaseProperties:
      type: object
      properties:
        city:
          $ref: '#/components/schemas/UserSchemaAttribute'
        costCenter:
          $ref: '#/components/schemas/UserSchemaAttribute'
        countryCode:
          $ref: '#/components/schemas/UserSchemaAttribute'
        department:
          $ref: '#/components/schemas/UserSchemaAttribute'
        displayName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        division:
          $ref: '#/components/schemas/UserSchemaAttribute'
        email:
          $ref: '#/components/schemas/UserSchemaAttribute'
        employeeNumber:
          $ref: '#/components/schemas/UserSchemaAttribute'
        firstName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        honorificPrefix:
          $ref: '#/components/schemas/UserSchemaAttribute'
        honorificSuffix:
          $ref: '#/components/schemas/UserSchemaAttribute'
        lastName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        locale:
          $ref: '#/components/schemas/UserSchemaAttribute'
        login:
          $ref: '#/components/schemas/UserSchemaAttribute'
        manager:
          $ref: '#/components/schemas/UserSchemaAttribute'
        managerId:
          $ref: '#/components/schemas/UserSchemaAttribute'
        middleName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        mobilePhone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        nickName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        organization:
          $ref: '#/components/schemas/UserSchemaAttribute'
        postalAddress:
          $ref: '#/components/schemas/UserSchemaAttribute'
        preferredLanguage:
          $ref: '#/components/schemas/UserSchemaAttribute'
        primaryPhone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        profileUrl:
          $ref: '#/components/schemas/UserSchemaAttribute'
        secondEmail:
          $ref: '#/components/schemas/UserSchemaAttribute'
        state:
          $ref: '#/components/schemas/UserSchemaAttribute'
        streetAddress:
          $ref: '#/components/schemas/UserSchemaAttribute'
        timezone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        title:
          $ref: '#/components/schemas/UserSchemaAttribute'
        userType:
          $ref: '#/components/schemas/UserSchemaAttribute'
        zipCode:
          $ref: '#/components/schemas/UserSchemaAttribute'
    UserSchemaDefinitions:
      type: object
      properties:
        base:
          $ref: '#/components/schemas/UserSchemaBase'
        custom:
          $ref: '#/components/schemas/UserSchemaPublic'
    UserSchemaProperties:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/UserSchemaPropertiesProfile'
    UserSchemaPropertiesProfile:
      type: object
      properties:
        allOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaPropertiesProfileItem'
    UserSchemaPropertiesProfileItem:
      type: object
      properties:
        $ref:
          type: string
    UserSchemaPublic:
      type: object
      properties:
        id:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserSchemaAttribute'
        required:
          type: array
          items:
            type: string
        type:
          type: string
    UserStatus:
      type: string
      enum:
        - ACTIVE
        - DEPROVISIONED
        - LOCKED_OUT
        - PASSWORD_EXPIRED
        - PROVISIONED
        - RECOVERY
        - STAGED
        - SUSPENDED
    UserStatusPolicyRuleCondition:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/PolicyUserStatus'
    UserType:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: A timestamp from when the User Type was created
          readOnly: true
        createdBy:
          type: string
          description: The user ID of the account that created the User Type
          readOnly: true
        default:
          type: boolean
          description: A boolean value to indicate if this is the default User Type
          readOnly: true
        description:
          type: string
          description: The human-readable description of the User Type
        displayName:
          type: string
          description: The human-readable name of the User Type
        id:
          type: string
          description: The unique key for the User Type
        lastUpdated:
          type: string
          format: date-time
          description: A timestamp from when the User Type was most recently updated
          readOnly: true
        lastUpdatedBy:
          type: string
          description: The user ID of the most recent account to edit the User Type
          readOnly: true
        name:
          type: string
          description: |-
            The name of the User Type. The name must start with A-Z or a-z and contain only A-Z, a-z, 0-9, or underscore (_) characters. 
             This value becomes read-only after creation and can't be updated.
        _links:
          $ref: '#/components/schemas/UserTypeLinks'
      required:
        - name
        - displayName
    UserTypeCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
    UserTypeLinks:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        - type: object
          properties:
            schema:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: The associated schema
    UserTypePostRequest:
      type: object
      properties:
        description:
          type: string
          description: The updated human-readable description of the User Type
        displayName:
          type: string
          description: The updated human-readable display name for the User Type
    UserTypePutRequest:
      type: object
      properties:
        description:
          type: string
          description: The human-readable description of the User Type
        displayName:
          type: string
          description: The human-readable name of the User Type
        name:
          type: string
          description: The name of the existing type
      required:
        - name
        - displayName
        - description
    UserVerificationEnum:
      description: User verification setting
      type: string
      enum:
        - DISCOURAGED
        - PREFERRED
        - REQUIRED
    VerificationMethod:
      type: object
      properties:
        constraints:
          items:
            $ref: '#/components/schemas/AccessPolicyConstraints'
          type: array
        factorMode:
          type: string
        reauthenticateIn:
          type: string
        type:
          type: string
    VerifyFactorRequest:
      type: object
      properties:
        activationToken:
          type: string
        answer:
          type: string
        attestation:
          type: string
        clientData:
          type: string
        nextPassCode:
          type: string
        passCode:
          type: string
        registrationData:
          type: string
        stateToken:
          type: string
    VerifyUserFactorResponse:
      type: object
      properties:
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        factorResult:
          $ref: '#/components/schemas/VerifyUserFactorResult'
        factorResultMessage:
          type: string
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HrefObjectSelfLink'
    VerifyUserFactorResult:
      type: string
      enum:
        - CHALLENGE
        - ERROR
        - EXPIRED
        - FAILED
        - PASSCODE_REPLAYED
        - REJECTED
        - SUCCESS
        - TIMEOUT
        - TIME_WINDOW_EXCEEDED
        - WAITING
    Version:
      description: The version specified as a [Semantic Version](https://semver.org/).
      type: string
      pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
    WebAuthnAttachment:
      type: string
      enum:
        - ANY
        - BUILT_IN
        - ROAMING
    WebAuthnUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/WebAuthnUserFactorProfile'
    WebAuthnUserFactorProfile:
      type: object
      properties:
        authenticatorName:
          type: string
        credentialId:
          type: string
    WebUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/WebUserFactorProfile'
    WebUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    WellKnownAppAuthenticatorConfiguration:
      type: object
      properties:
        appAuthenticatorEnrollEndpoint:
          type: string
        authenticatorId:
          type: string
          description: The unique identifier of the app authenticator
        createdDate:
          type: string
          format: date-time
        key:
          type: string
        lastUpdated:
          type: string
          format: date-time
        name:
          type: string
          description: The authenticator display name
        orgId:
          type: string
        settings:
          type: object
          properties:
            userVerification:
              type: string
              $ref: '#/components/schemas/UserVerificationEnum'
        supportedMethods:
          type: array
          items:
            $ref: '#/components/schemas/SupportedMethods'
        type:
          type: string
          enum:
            - app
    WellKnownOrgMetadata:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the Org
        pipeline:
          $ref: '#/components/schemas/PipelineType'
        settings:
          $ref: '#/components/schemas/WellKnownOrgMetadataSettings'
        _links:
          type: object
          properties:
            alternate:
              $ref: '#/components/schemas/HrefObject'
            organization:
              $ref: '#/components/schemas/HrefObject'
    WellKnownOrgMetadataSettings:
      type: object
      properties:
        analyticsCollectionEnabled:
          type: boolean
        bugReportingEnabled:
          type: boolean
        omEnabled:
          type: boolean
          description: Whether the legacy Okta Mobile application is enabled for the org
    WsFederationApplication:
      x-okta-defined-as:
        name: template_wsfed
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/ApplicationCredentials'
            name:
              type: string
              default: template_wsfed
            settings:
              $ref: '#/components/schemas/WsFederationApplicationSettings'
    WsFederationApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/WsFederationApplicationSettingsApplication'
    WsFederationApplicationSettingsApplication:
      type: object
      properties:
        attributeStatements:
          type: string
        audienceRestriction:
          type: string
        authnContextClassRef:
          type: string
        groupFilter:
          type: string
        groupName:
          type: string
        groupValueFormat:
          type: string
        nameIDFormat:
          type: string
        realm:
          type: string
        siteURL:
          type: string
        usernameAttribute:
          type: string
        wReplyOverride:
          type: boolean
        wReplyURL:
          type: string
    enabledPagesType:
      title: enabledPages
      type: string
      enum:
        - SIGN_IN
        - SSPR
        - SSR
      x-enumDescriptions:
        SIGN_IN: User sign-in page
        SSPR: Self-service Password Recovery page
        SSR: Self-service Registration page
    postAPIServiceIntegrationInstance:
      allOf:
        - $ref: '#/components/schemas/APIServiceIntegrationInstance'
        - type: object
          properties:
            clientSecret:
              type: string
              description: The client secret for the API Service Integration instance. This property is only returned in a POST response.
              readOnly: true
    postAPIServiceIntegrationInstanceRequest:
      type: object
      properties:
        grantedScopes:
          type: array
          description: The list of Okta management scopes granted to the API Service Integration instance. See [Okta management OAuth 2.0 scopes](/oauth2/#okta-admin-management).
          items:
            type: string
          example:
            - okta.logs.read
        type:
          type: string
          description: The type of the API service integration. This string is an underscore-concatenated, lowercased API service integration name. For example, `my_api_log_integration`.
          example: my_app_cie
      required:
        - type
        - grantedScopes
  securitySchemes:
    apiToken:
      description: 'Pass the API token as the Authorization header value prefixed with SSWS: `Authorization: SSWS {API Token}`'
      name: Authorization
      type: apiKey
      in: header
    oauth2:
      type: oauth2
      description: 'Pass the access_token as the value of the Authorization header: `Authorization: Bearer {access_token}`'
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          tokenUrl: /oauth2/v1/token
          scopes:
            okta.agentPools.manage: Allows the app to create and manage agent pools in your Okta organization.
            okta.agentPools.read: Allows the app to read agent pools in your Okta organization.
            okta.apiTokens.manage: Allows the app to manage API Tokens in your Okta organization.
            okta.apiTokens.read: Allows the app to read API Tokens in your Okta organization.
            okta.appGrants.manage: Allows the app to create and manage grants in your Okta organization.
            okta.appGrants.read: Allows the app to read grants in your Okta organization.
            okta.apps.manage: Allows the app to create and manage Apps in your Okta organization.
            okta.apps.read: Allows the app to read information about Apps in your Okta organization.
            okta.authenticators.manage: Allows the app to manage all authenticators (e.g. enrollments, reset).
            okta.authenticators.read: Allows the app to read org authenticators information.
            okta.authorizationServers.manage: Allows the app to create and manage Authorization Servers in your Okta organization.
            okta.authorizationServers.read: Allows the app to read information about Authorization Servers in your Okta organization.
            okta.behaviors.manage: Allows the app to create and manage behavior detection rules in your Okta organization.
            okta.behaviors.read: Allows the app to read behavior detection rules in your Okta organization.
            okta.brands.manage: Allows the app to create and manage Brands and Themes in your Okta organization.
            okta.brands.read: Allows the app to read information about Brands and Themes in your Okta organization.
            okta.captchas.manage: Allows the app to create and manage CAPTCHAs in your Okta organization.
            okta.captchas.read: Allows the app to read information about CAPTCHAs in your Okta organization.
            okta.deviceAssurance.manage: Allows the app to manage device assurances.
            okta.deviceAssurance.read: Allows the app to read device assurances.
            okta.devices.manage: Allows the app to manage device status transitions and delete a device.
            okta.devices.read: Allows the app to read the existing device's profile and search devices.
            okta.domains.manage: Allows the app to manage custom Domains for your Okta organization.
            okta.domains.read: Allows the app to read information about custom Domains for your Okta organization.
            okta.emailDomains.manage: Allows the app to manage Email Domains for your Okta organization.
            okta.emailDomains.read: Allows the app to read information about Email Domains for your Okta organization.
            okta.emailServers.manage: Allows the app to manage Email Servers for your Okta organization.
            okta.emailServers.read: Allows the app to read information about Email Servers for your Okta organization.
            okta.eventHooks.manage: Allows the app to create and manage Event Hooks in your Okta organization.
            okta.eventHooks.read: Allows the app to read information about Event Hooks in your Okta organization.
            okta.features.manage: Allows the app to create and manage Features in your Okta organization.
            okta.features.read: Allows the app to read information about Features in your Okta organization.
            okta.groups.manage: Allows the app to manage existing groups in your Okta organization.
            okta.groups.read: Allows the app to read information about groups and their members in your Okta organization.
            okta.identitySources.manage: Allows the custom identity sources to manage user entities in your Okta organization
            okta.identitySources.read: Allows to read session information for custom identity sources in your Okta organization
            okta.idps.manage: Allows the app to create and manage Identity Providers in your Okta organization.
            okta.idps.read: Allows the app to read information about Identity Providers in your Okta organization.
            okta.inlineHooks.manage: Allows the app to create and manage Inline Hooks in your Okta organization.
            okta.inlineHooks.read: Allows the app to read information about Inline Hooks in your Okta organization.
            okta.linkedObjects.manage: Allows the app to manage linked object definitions in your Okta organization.
            okta.linkedObjects.read: Allows the app to read linked object definitions in your Okta organization.
            okta.logStreams.manage: Allows the app to create and manage log streams in your Okta organization.
            okta.logStreams.read: Allows the app to read information about log streams in your Okta organization.
            okta.logs.read: Allows the app to read information about System Log entries in your Okta organization.
            okta.networkZones.manage: Allows the app to create and manage Network Zones in your Okta organization.
            okta.networkZones.read: Allows the app to read Network Zones in your Okta organization.
            okta.oauthIntegrations.manage: Allows the app to create and manage API service Integration instances in your Okta organization.
            okta.oauthIntegrations.read: Allows the app to read API service Integration instances in your Okta organization.
            okta.orgs.manage: Allows the app to manage organization-specific details for your Okta organization.
            okta.orgs.read: Allows the app to read organization-specific details about your Okta organization.
            okta.policies.manage: Allows the app to manage policies in your Okta organization.
            okta.policies.read: Allows the app to read information about policies in your Okta organization.
            okta.principalRateLimits.manage: Allows the app to create and manage Principal Rate Limits in your Okta organization.
            okta.principalRateLimits.read: Allows the app to read information about Principal Rate Limits in your Okta organization.
            okta.profileMappings.manage: Allows the app to manage user profile mappings in your Okta organization.
            okta.profileMappings.read: Allows the app to read user profile mappings in your Okta organization.
            okta.pushProviders.manage: Allows the app to create and manage push notification providers such as APNs and FCM.
            okta.pushProviders.read: Allows the app to read push notification providers such as APNs and FCM.
            okta.rateLimits.manage: Allows the app to create and manage rate limits in your Okta organization.
            okta.rateLimits.read: Allows the app to read information about rate limits in your Okta organization.
            okta.realms.manage: Allows the app to create new realms and to manage their details.
            okta.realms.read: Allows the app to read the existing realms and their details.
            okta.riskEvents.manage: Allows the app to publish risk events to your Okta organization.
            okta.riskProviders.manage: Allows the app to create and manage risk provider integrations in your Okta organization.
            okta.riskProviders.read: Allows the app to read all risk provider integrations in your Okta organization.
            okta.roles.manage: Allows the app to manage administrative role assignments for users in your Okta organization.
            okta.roles.read: Allows the app to read administrative role assignments for users in your Okta organization.
            okta.schemas.manage: Allows the app to create and manage Schemas in your Okta organization.
            okta.schemas.read: Allows the app to read information about Schemas in your Okta organization.
            okta.sessions.manage: Allows the app to manage all sessions in your Okta organization.
            okta.sessions.read: Allows the app to read all sessions in your Okta organization.
            okta.templates.manage: Allows the app to manage all custom templates in your Okta organization.
            okta.templates.read: Allows the app to read all custom templates in your Okta organization.
            okta.threatInsights.manage: Allows the app to manage all ThreatInsight configurations in your Okta organization.
            okta.threatInsights.read: Allows the app to read all ThreatInsight configurations in your Okta organization.
            okta.trustedOrigins.manage: Allows the app to manage all Trusted Origins in your Okta organization.
            okta.trustedOrigins.read: Allows the app to read all Trusted Origins in your Okta organization.
            okta.uischemas.manage: Allows the app to manage all the UI Schemas in your Okta organization.
            okta.uischemas.read: Allows the app to read all the UI Schemas in your Okta organization.
            okta.userTypes.manage: Allows the app to manage user types in your Okta organization.
            okta.userTypes.read: Allows the app to read user types in your Okta organization.
            okta.users.manage: Allows the app to create new users and to manage all users' profile and credentials information.
            okta.users.read: Allows the app to read the existing users' profiles and credentials.
