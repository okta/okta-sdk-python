# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_user_request import UpdateUserRequest

class TestUpdateUserRequest(unittest.TestCase):
    """UpdateUserRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateUserRequest:
        """Test UpdateUserRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateUserRequest`
        """
        model = UpdateUserRequest()
        if include_optional:
            return UpdateUserRequest(
                credentials = openapi_client.models.user_credentials.UserCredentials(
                    password = openapi_client.models.password_credential.PasswordCredential(
                        hash = openapi_client.models.password_credential_hash.PasswordCredentialHash(
                            algorithm = 'BCRYPT', 
                            digest_algorithm = 'SHA256_HMAC', 
                            iteration_count = 56, 
                            key_size = 56, 
                            salt = '', 
                            salt_order = '', 
                            value = '', 
                            work_factor = 56, ), 
                        hook = openapi_client.models.password_credential_hook.PasswordCredentialHook(
                            type = '', ), 
                        value = '', ), 
                    provider = openapi_client.models.authentication_provider.AuthenticationProvider(
                        name = '', 
                        type = 'ACTIVE_DIRECTORY', ), 
                    recovery_question = openapi_client.models.recovery_question_credential.RecoveryQuestionCredential(
                        answer = '', 
                        question = '', ), ),
                profile = { },
                realm_id = 'guo1bfiNtSnZYILxO0g4'
            )
        else:
            return UpdateUserRequest(
        )
        """

    def testUpdateUserRequest(self):
        """Test UpdateUserRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
