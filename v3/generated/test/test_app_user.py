# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_user import AppUser

class TestAppUser(unittest.TestCase):
    """AppUser unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppUser:
        """Test AppUser
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppUser`
        """
        model = AppUser()
        if include_optional:
            return AppUser(
                created = '2014-06-24T15:27:59Z',
                credentials = openapi_client.models.app_user_credentials.AppUserCredentials(
                    password = openapi_client.models.app_user_password_credential.AppUserPasswordCredential(
                        value = '', ), 
                    user_name = 'testuser', ),
                external_id = '70c14cc17d3745e8a9f98d599a68329c',
                id = '00u11z6WHMYCGPCHCRFK',
                last_sync = '2014-06-24T15:27:59Z',
                last_updated = '2014-06-24T15:28:14Z',
                password_changed = '2014-06-24T15:27:59Z',
                profile = {
                    'key' : None
                    },
                scope = 'USER',
                status = 'ACTIVE',
                status_changed = '2014-06-24T15:28:14Z',
                sync_state = 'SYNCHRONIZED',
                embedded = {
                    'key' : None
                    },
                links = openapi_client.models.links_app_and_user.LinksAppAndUser(
                    app = null, 
                    user = null, )
            )
        else:
            return AppUser(
                created = '2014-06-24T15:27:59Z',
                last_updated = '2014-06-24T15:28:14Z',
                scope = 'USER',
                status = 'ACTIVE',
                status_changed = '2014-06-24T15:28:14Z',
                links = openapi_client.models.links_app_and_user.LinksAppAndUser(
                    app = null, 
                    user = null, ),
        )
        """

    def testAppUser(self):
        """Test AppUser"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
