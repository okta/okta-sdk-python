# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.profile_mapping import ProfileMapping

class TestProfileMapping(unittest.TestCase):
    """ProfileMapping unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProfileMapping:
        """Test ProfileMapping
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProfileMapping`
        """
        model = ProfileMapping()
        if include_optional:
            return ProfileMapping(
                id = '',
                properties = {
                    'key' : openapi_client.models.profile_mapping_property.ProfileMappingProperty(
                        expression = '', 
                        push_status = 'DONT_PUSH', )
                    },
                source = openapi_client.models.profile_mapping_source.ProfileMappingSource(
                    id = '', 
                    name = '', 
                    type = '', 
                    _links = null, ),
                target = openapi_client.models.profile_mapping_target.ProfileMappingTarget(
                    id = '', 
                    name = '', 
                    type = '', 
                    _links = null, ),
                links = openapi_client.models.links_self.LinksSelf(
                    self = null, )
            )
        else:
            return ProfileMapping(
        )
        """

    def testProfileMapping(self):
        """Test ProfileMapping"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
