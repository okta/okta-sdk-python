# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.event_hook import EventHook

class TestEventHook(unittest.TestCase):
    """EventHook unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventHook:
        """Test EventHook
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventHook`
        """
        model = EventHook()
        if include_optional:
            return EventHook(
                channel = openapi_client.models.event_hook_channel.EventHookChannel(
                    config = openapi_client.models.event_hook_channel_config.EventHookChannelConfig(
                        auth_scheme = openapi_client.models.event_hook_channel_config_auth_scheme.EventHookChannelConfigAuthScheme(
                            key = '', 
                            type = 'HEADER', 
                            value = '', ), 
                        headers = [
                            openapi_client.models.event_hook_channel_config_header.EventHookChannelConfigHeader(
                                key = '', 
                                value = '', )
                            ], 
                        uri = '', ), 
                    type = 'HTTP', 
                    version = '', ),
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_by = '',
                events = openapi_client.models.event_subscriptions.EventSubscriptions(
                    items = [
                        ''
                        ], ),
                id = '',
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = '',
                status = 'ACTIVE',
                verification_status = 'UNVERIFIED',
                links = openapi_client.models.links_self.LinksSelf(
                    self = null, )
            )
        else:
            return EventHook(
        )
        """

    def testEventHook(self):
        """Test EventHook"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
