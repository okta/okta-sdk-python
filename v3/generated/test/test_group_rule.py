# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.group_rule import GroupRule

class TestGroupRule(unittest.TestCase):
    """GroupRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GroupRule:
        """Test GroupRule
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GroupRule`
        """
        model = GroupRule()
        if include_optional:
            return GroupRule(
                actions = openapi_client.models.group_rule_action.GroupRuleAction(
                    assign_user_to_groups = openapi_client.models.group_rule_group_assignment.GroupRuleGroupAssignment(
                        group_ids = [
                            ''
                            ], ), ),
                conditions = openapi_client.models.group_rule_conditions.GroupRuleConditions(
                    expression = openapi_client.models.group_rule_expression.GroupRuleExpression(
                        type = '', 
                        value = '', ), 
                    people = openapi_client.models.group_rule_people_condition.GroupRulePeopleCondition(
                        groups = openapi_client.models.group_rule_group_condition.GroupRuleGroupCondition(
                            exclude = [
                                ''
                                ], 
                            include = [
                                ''
                                ], ), 
                        users = openapi_client.models.group_rule_user_condition.GroupRuleUserCondition(), ), ),
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = '',
                status = 'ACTIVE',
                type = ''
            )
        else:
            return GroupRule(
        )
        """

    def testGroupRule(self):
        """Test GroupRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
