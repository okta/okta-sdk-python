# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.well_known_app_authenticator_configuration import WellKnownAppAuthenticatorConfiguration

class TestWellKnownAppAuthenticatorConfiguration(unittest.TestCase):
    """WellKnownAppAuthenticatorConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WellKnownAppAuthenticatorConfiguration:
        """Test WellKnownAppAuthenticatorConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WellKnownAppAuthenticatorConfiguration`
        """
        model = WellKnownAppAuthenticatorConfiguration()
        if include_optional:
            return WellKnownAppAuthenticatorConfiguration(
                app_authenticator_enroll_endpoint = '',
                authenticator_id = '',
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                key = '',
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = '',
                org_id = '',
                settings = openapi_client.models.well_known_app_authenticator_configuration_settings.WellKnownAppAuthenticatorConfiguration_settings(
                    user_verification = 'DISCOURAGED', ),
                supported_methods = [
                    openapi_client.models.supported_methods.SupportedMethods(
                        settings = openapi_client.models.supported_methods_settings.SupportedMethods_settings(
                            key_protection = '', 
                            algorithms = [
                                'ES256'
                                ], 
                            transaction_types = [
                                'CIBA'
                                ], ), 
                        status = '', 
                        type = 'push', )
                    ],
                type = 'app'
            )
        else:
            return WellKnownAppAuthenticatorConfiguration(
        )
        """

    def testWellKnownAppAuthenticatorConfiguration(self):
        """Test WellKnownAppAuthenticatorConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
