# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.identity_provider_api import IdentityProviderApi


class TestIdentityProviderApi(unittest.TestCase):
    """IdentityProviderApi unit test stubs"""

    def setUp(self) -> None:
        self.api = IdentityProviderApi()

    def tearDown(self) -> None:
        pass

    def test_activate_identity_provider(self) -> None:
        """Test case for activate_identity_provider

        Activate an Identity Provider
        """
        pass

    def test_clone_identity_provider_key(self) -> None:
        """Test case for clone_identity_provider_key

        Clone a Signing Credential Key
        """
        pass

    def test_create_identity_provider(self) -> None:
        """Test case for create_identity_provider

        Create an Identity Provider
        """
        pass

    def test_create_identity_provider_key(self) -> None:
        """Test case for create_identity_provider_key

        Create an X.509 Certificate Public Key
        """
        pass

    def test_deactivate_identity_provider(self) -> None:
        """Test case for deactivate_identity_provider

        Deactivate an Identity Provider
        """
        pass

    def test_delete_identity_provider(self) -> None:
        """Test case for delete_identity_provider

        Delete an Identity Provider
        """
        pass

    def test_delete_identity_provider_key(self) -> None:
        """Test case for delete_identity_provider_key

        Delete a Signing Credential Key
        """
        pass

    def test_generate_csr_for_identity_provider(self) -> None:
        """Test case for generate_csr_for_identity_provider

        Generate a Certificate Signing Request
        """
        pass

    def test_generate_identity_provider_signing_key(self) -> None:
        """Test case for generate_identity_provider_signing_key

        Generate a new Signing Credential Key
        """
        pass

    def test_get_csr_for_identity_provider(self) -> None:
        """Test case for get_csr_for_identity_provider

        Retrieve a Certificate Signing Request
        """
        pass

    def test_get_identity_provider(self) -> None:
        """Test case for get_identity_provider

        Retrieve an Identity Provider
        """
        pass

    def test_get_identity_provider_application_user(self) -> None:
        """Test case for get_identity_provider_application_user

        Retrieve a User
        """
        pass

    def test_get_identity_provider_key(self) -> None:
        """Test case for get_identity_provider_key

        Retrieve an Credential Key
        """
        pass

    def test_get_identity_provider_signing_key(self) -> None:
        """Test case for get_identity_provider_signing_key

        Retrieve a Signing Credential Key
        """
        pass

    def test_link_user_to_identity_provider(self) -> None:
        """Test case for link_user_to_identity_provider

        Link a User to a Social IdP
        """
        pass

    def test_list_csrs_for_identity_provider(self) -> None:
        """Test case for list_csrs_for_identity_provider

        List all Certificate Signing Requests
        """
        pass

    def test_list_identity_provider_application_users(self) -> None:
        """Test case for list_identity_provider_application_users

        List all Users
        """
        pass

    def test_list_identity_provider_keys(self) -> None:
        """Test case for list_identity_provider_keys

        List all Credential Keys
        """
        pass

    def test_list_identity_provider_signing_keys(self) -> None:
        """Test case for list_identity_provider_signing_keys

        List all Signing Credential Keys
        """
        pass

    def test_list_identity_providers(self) -> None:
        """Test case for list_identity_providers

        List all Identity Providers
        """
        pass

    def test_list_social_auth_tokens(self) -> None:
        """Test case for list_social_auth_tokens

        List all Tokens from a OIDC Identity Provider
        """
        pass

    def test_publish_csr_for_identity_provider(self) -> None:
        """Test case for publish_csr_for_identity_provider

        Publish a Certificate Signing Request
        """
        pass

    def test_replace_identity_provider(self) -> None:
        """Test case for replace_identity_provider

        Replace an Identity Provider
        """
        pass

    def test_revoke_csr_for_identity_provider(self) -> None:
        """Test case for revoke_csr_for_identity_provider

        Revoke a Certificate Signing Request
        """
        pass

    def test_unlink_user_from_identity_provider(self) -> None:
        """Test case for unlink_user_from_identity_provider

        Unlink a User from IdP
        """
        pass


if __name__ == '__main__':
    unittest.main()
