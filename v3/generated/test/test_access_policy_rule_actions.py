# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.access_policy_rule_actions import AccessPolicyRuleActions

class TestAccessPolicyRuleActions(unittest.TestCase):
    """AccessPolicyRuleActions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccessPolicyRuleActions:
        """Test AccessPolicyRuleActions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccessPolicyRuleActions`
        """
        model = AccessPolicyRuleActions()
        if include_optional:
            return AccessPolicyRuleActions(
                app_sign_on = openapi_client.models.access_policy_rule_application_sign_on.AccessPolicyRuleApplicationSignOn(
                    access = '', 
                    verification_method = openapi_client.models.verification_method.VerificationMethod(
                        constraints = [
                            openapi_client.models.access_policy_constraints.AccessPolicyConstraints(
                                knowledge = null, 
                                possession = null, )
                            ], 
                        factor_mode = '', 
                        reauthenticate_in = '', 
                        type = '', ), )
            )
        else:
            return AccessPolicyRuleActions(
        )
        """

    def testAccessPolicyRuleActions(self):
        """Test AccessPolicyRuleActions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
