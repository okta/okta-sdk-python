# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.password_policy_recovery_settings import PasswordPolicyRecoverySettings

class TestPasswordPolicyRecoverySettings(unittest.TestCase):
    """PasswordPolicyRecoverySettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PasswordPolicyRecoverySettings:
        """Test PasswordPolicyRecoverySettings
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PasswordPolicyRecoverySettings`
        """
        model = PasswordPolicyRecoverySettings()
        if include_optional:
            return PasswordPolicyRecoverySettings(
                factors = openapi_client.models.password_policy_recovery_factors.PasswordPolicyRecoveryFactors(
                    okta_call = openapi_client.models.password_policy_recovery_factor_settings.PasswordPolicyRecoveryFactorSettings(
                        status = 'ACTIVE', ), 
                    okta_email = openapi_client.models.password_policy_recovery_email.PasswordPolicyRecoveryEmail(
                        properties = openapi_client.models.password_policy_recovery_email_properties.PasswordPolicyRecoveryEmailProperties(
                            recovery_token = openapi_client.models.password_policy_recovery_email_recovery_token.PasswordPolicyRecoveryEmailRecoveryToken(
                                token_lifetime_minutes = 56, ), ), ), 
                    okta_sms = openapi_client.models.password_policy_recovery_factor_settings.PasswordPolicyRecoveryFactorSettings(), 
                    recovery_question = openapi_client.models.password_policy_recovery_question.PasswordPolicyRecoveryQuestion(), )
            )
        else:
            return PasswordPolicyRecoverySettings(
        )
        """

    def testPasswordPolicyRecoverySettings(self):
        """Test PasswordPolicyRecoverySettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
