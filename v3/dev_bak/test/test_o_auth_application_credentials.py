# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.o_auth_application_credentials import OAuthApplicationCredentials

class TestOAuthApplicationCredentials(unittest.TestCase):
    """OAuthApplicationCredentials unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OAuthApplicationCredentials:
        """Test OAuthApplicationCredentials
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OAuthApplicationCredentials`
        """
        model = OAuthApplicationCredentials()
        if include_optional:
            return OAuthApplicationCredentials(
                signing = openapi_client.models.application_credentials_signing.ApplicationCredentialsSigning(
                    kid = '', 
                    last_rotated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    next_rotation = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    rotation_mode = '', 
                    use = 'sig', ),
                user_name_template = openapi_client.models.application_credentials_username_template.ApplicationCredentialsUsernameTemplate(
                    push_status = '', 
                    template = '', 
                    type = '', 
                    user_suffix = '', ),
                oauth_client = openapi_client.models.application_credentials_o_auth_client.ApplicationCredentialsOAuthClient(
                    auto_key_rotation = True, 
                    client_id = '', 
                    client_secret = '', 
                    token_endpoint_auth_method = 'client_secret_basic', )
            )
        else:
            return OAuthApplicationCredentials(
        )
        """

    def testOAuthApplicationCredentials(self):
        """Test OAuthApplicationCredentials"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
