# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.password_policy_password_settings import PasswordPolicyPasswordSettings

class TestPasswordPolicyPasswordSettings(unittest.TestCase):
    """PasswordPolicyPasswordSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PasswordPolicyPasswordSettings:
        """Test PasswordPolicyPasswordSettings
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PasswordPolicyPasswordSettings`
        """
        model = PasswordPolicyPasswordSettings()
        if include_optional:
            return PasswordPolicyPasswordSettings(
                age = openapi_client.models.password_policy_password_settings_age.PasswordPolicyPasswordSettingsAge(
                    expire_warn_days = 56, 
                    history_count = 56, 
                    max_age_days = 56, 
                    min_age_minutes = 56, ),
                complexity = openapi_client.models.password_policy_password_settings_complexity.PasswordPolicyPasswordSettingsComplexity(
                    dictionary = openapi_client.models.password_dictionary.PasswordDictionary(
                        common = openapi_client.models.password_dictionary_common.PasswordDictionaryCommon(
                            exclude = True, ), ), 
                    exclude_attributes = [
                        ''
                        ], 
                    exclude_username = True, 
                    min_length = 56, 
                    min_lower_case = 56, 
                    min_number = 56, 
                    min_symbol = 56, 
                    min_upper_case = 56, ),
                lockout = openapi_client.models.password_policy_password_settings_lockout.PasswordPolicyPasswordSettingsLockout(
                    auto_unlock_minutes = 56, 
                    max_attempts = 56, 
                    show_lockout_failures = True, 
                    user_lockout_notification_channels = [
                        ''
                        ], )
            )
        else:
            return PasswordPolicyPasswordSettings(
        )
        """

    def testPasswordPolicyPasswordSettings(self):
        """Test PasswordPolicyPasswordSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
