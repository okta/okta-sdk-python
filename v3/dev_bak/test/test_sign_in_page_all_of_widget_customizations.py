# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sign_in_page_all_of_widget_customizations import SignInPageAllOfWidgetCustomizations

class TestSignInPageAllOfWidgetCustomizations(unittest.TestCase):
    """SignInPageAllOfWidgetCustomizations unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SignInPageAllOfWidgetCustomizations:
        """Test SignInPageAllOfWidgetCustomizations
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SignInPageAllOfWidgetCustomizations`
        """
        model = SignInPageAllOfWidgetCustomizations()
        if include_optional:
            return SignInPageAllOfWidgetCustomizations(
                sign_in_label = '',
                username_label = '',
                username_info_tip = '',
                password_label = '',
                password_info_tip = '',
                show_password_visibility_toggle = True,
                show_user_identifier = True,
                forgot_password_label = '',
                forgot_password_url = '',
                unlock_account_label = '',
                unlock_account_url = '',
                help_label = '',
                help_url = '',
                custom_link1_label = '',
                custom_link1_url = '',
                custom_link2_label = '',
                custom_link2_url = '',
                authenticator_page_custom_link_label = '',
                authenticator_page_custom_link_url = '',
                classic_recovery_flow_email_or_username_label = ''
            )
        else:
            return SignInPageAllOfWidgetCustomizations(
        )
        """

    def testSignInPageAllOfWidgetCustomizations(self):
        """Test SignInPageAllOfWidgetCustomizations"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
