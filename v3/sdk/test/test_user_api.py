# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.user_api import UserApi


class TestUserApi(unittest.TestCase):
    """UserApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UserApi()

    def tearDown(self) -> None:
        pass

    def test_activate_user(self) -> None:
        """Test case for activate_user

        Activate a User
        """
        pass

    def test_change_password(self) -> None:
        """Test case for change_password

        Change Password
        """
        pass

    def test_change_recovery_question(self) -> None:
        """Test case for change_recovery_question

        Change Recovery Question
        """
        pass

    def test_create_user(self) -> None:
        """Test case for create_user

        Create a User
        """
        pass

    def test_deactivate_user(self) -> None:
        """Test case for deactivate_user

        Deactivate a User
        """
        pass

    def test_delete_linked_object_for_user(self) -> None:
        """Test case for delete_linked_object_for_user

        Delete a Linked Object
        """
        pass

    def test_delete_user(self) -> None:
        """Test case for delete_user

        Delete a User
        """
        pass

    def test_expire_password(self) -> None:
        """Test case for expire_password

        Expire Password
        """
        pass

    def test_expire_password_and_get_temporary_password(self) -> None:
        """Test case for expire_password_and_get_temporary_password

        Expire Password and Set Temporary Password
        """
        pass

    def test_forgot_password(self) -> None:
        """Test case for forgot_password

        Initiate Forgot Password
        """
        pass

    def test_forgot_password_set_new_password(self) -> None:
        """Test case for forgot_password_set_new_password

        Reset Password with Recovery Question
        """
        pass

    def test_generate_reset_password_token(self) -> None:
        """Test case for generate_reset_password_token

        Generate a Reset Password Token
        """
        pass

    def test_get_refresh_token_for_user_and_client(self) -> None:
        """Test case for get_refresh_token_for_user_and_client

        Retrieve a Refresh Token for a Client
        """
        pass

    def test_get_user(self) -> None:
        """Test case for get_user

        Retrieve a User
        """
        pass

    def test_get_user_grant(self) -> None:
        """Test case for get_user_grant

        Retrieve a User Grant
        """
        pass

    def test_list_app_links(self) -> None:
        """Test case for list_app_links

        List all Assigned Application Links
        """
        pass

    def test_list_grants_for_user_and_client(self) -> None:
        """Test case for list_grants_for_user_and_client

        List all Grants for a Client
        """
        pass

    def test_list_linked_objects_for_user(self) -> None:
        """Test case for list_linked_objects_for_user

        List all Linked Objects
        """
        pass

    def test_list_refresh_tokens_for_user_and_client(self) -> None:
        """Test case for list_refresh_tokens_for_user_and_client

        List all Refresh Tokens for a Client
        """
        pass

    def test_list_user_blocks(self) -> None:
        """Test case for list_user_blocks

        List all User Blocks
        """
        pass

    def test_list_user_clients(self) -> None:
        """Test case for list_user_clients

        List all Clients
        """
        pass

    def test_list_user_grants(self) -> None:
        """Test case for list_user_grants

        List all User Grants
        """
        pass

    def test_list_user_groups(self) -> None:
        """Test case for list_user_groups

        List all Groups
        """
        pass

    def test_list_user_identity_providers(self) -> None:
        """Test case for list_user_identity_providers

        List all Identity Providers
        """
        pass

    def test_list_users(self) -> None:
        """Test case for list_users

        List all Users
        """
        pass

    def test_reactivate_user(self) -> None:
        """Test case for reactivate_user

        Reactivate a User
        """
        pass

    def test_replace_user(self) -> None:
        """Test case for replace_user

        Replace a User
        """
        pass

    def test_reset_factors(self) -> None:
        """Test case for reset_factors

        Reset all Factors
        """
        pass

    def test_revoke_grants_for_user_and_client(self) -> None:
        """Test case for revoke_grants_for_user_and_client

        Revoke all Grants for a Client
        """
        pass

    def test_revoke_token_for_user_and_client(self) -> None:
        """Test case for revoke_token_for_user_and_client

        Revoke a Token for a Client
        """
        pass

    def test_revoke_tokens_for_user_and_client(self) -> None:
        """Test case for revoke_tokens_for_user_and_client

        Revoke all Refresh Tokens for a Client
        """
        pass

    def test_revoke_user_grant(self) -> None:
        """Test case for revoke_user_grant

        Revoke a User Grant
        """
        pass

    def test_revoke_user_grants(self) -> None:
        """Test case for revoke_user_grants

        Revoke all User Grants
        """
        pass

    def test_revoke_user_sessions(self) -> None:
        """Test case for revoke_user_sessions

        Revoke all User Sessions
        """
        pass

    def test_set_linked_object_for_user(self) -> None:
        """Test case for set_linked_object_for_user

        Create a Linked Object for two Users
        """
        pass

    def test_suspend_user(self) -> None:
        """Test case for suspend_user

        Suspend a User
        """
        pass

    def test_unlock_user(self) -> None:
        """Test case for unlock_user

        Unlock a User
        """
        pass

    def test_unsuspend_user(self) -> None:
        """Test case for unsuspend_user

        Unsuspend a User
        """
        pass

    def test_update_user(self) -> None:
        """Test case for update_user

        Update a User
        """
        pass


if __name__ == '__main__':
    unittest.main()
