# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.change_password_request import ChangePasswordRequest

class TestChangePasswordRequest(unittest.TestCase):
    """ChangePasswordRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChangePasswordRequest:
        """Test ChangePasswordRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChangePasswordRequest`
        """
        model = ChangePasswordRequest()
        if include_optional:
            return ChangePasswordRequest(
                new_password = openapi_client.models.password_credential.PasswordCredential(
                    hash = openapi_client.models.password_credential_hash.PasswordCredentialHash(
                        algorithm = 'BCRYPT', 
                        digest_algorithm = 'SHA256_HMAC', 
                        iteration_count = 56, 
                        key_size = 56, 
                        salt = '', 
                        salt_order = '', 
                        value = '', 
                        work_factor = 56, ), 
                    hook = openapi_client.models.password_credential_hook.PasswordCredentialHook(
                        type = '', ), 
                    value = '', ),
                old_password = openapi_client.models.password_credential.PasswordCredential(
                    hash = openapi_client.models.password_credential_hash.PasswordCredentialHash(
                        algorithm = 'BCRYPT', 
                        digest_algorithm = 'SHA256_HMAC', 
                        iteration_count = 56, 
                        key_size = 56, 
                        salt = '', 
                        salt_order = '', 
                        value = '', 
                        work_factor = 56, ), 
                    hook = openapi_client.models.password_credential_hook.PasswordCredentialHook(
                        type = '', ), 
                    value = '', ),
                revoke_sessions = True
            )
        else:
            return ChangePasswordRequest(
        )
        """

    def testChangePasswordRequest(self):
        """Test ChangePasswordRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
