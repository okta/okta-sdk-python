# coding: utf-8

"""
    Okta Admin Management

    Allows customers to easily access the Okta Management APIs

    The version of the OpenAPI document: 5.1.0
    Contact: devex-public@okta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.secure_password_store_application_settings import SecurePasswordStoreApplicationSettings

class TestSecurePasswordStoreApplicationSettings(unittest.TestCase):
    """SecurePasswordStoreApplicationSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SecurePasswordStoreApplicationSettings:
        """Test SecurePasswordStoreApplicationSettings
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SecurePasswordStoreApplicationSettings`
        """
        model = SecurePasswordStoreApplicationSettings()
        if include_optional:
            return SecurePasswordStoreApplicationSettings(
                identity_store_id = '',
                implicit_assignment = True,
                inline_hook_id = '',
                notes = openapi_client.models.application_settings_notes.ApplicationSettingsNotes(
                    admin = '', 
                    enduser = '', ),
                notifications = openapi_client.models.application_settings_notifications.ApplicationSettingsNotifications(
                    vpn = openapi_client.models.application_settings_notifications_vpn.ApplicationSettingsNotificationsVpn(
                        help_url = '', 
                        message = '', 
                        network = openapi_client.models.application_settings_notifications_vpn_network.ApplicationSettingsNotificationsVpnNetwork(
                            connection = '', 
                            exclude = [
                                ''
                                ], 
                            include = [
                                ''
                                ], ), ), ),
                app = openapi_client.models.secure_password_store_application_settings_application.SecurePasswordStoreApplicationSettingsApplication(
                    optional_field1 = '', 
                    optional_field1_value = '', 
                    optional_field2 = '', 
                    optional_field2_value = '', 
                    optional_field3 = '', 
                    optional_field3_value = '', 
                    password_field = '', 
                    url = '', 
                    username_field = '', )
            )
        else:
            return SecurePasswordStoreApplicationSettings(
        )
        """

    def testSecurePasswordStoreApplicationSettings(self):
        """Test SecurePasswordStoreApplicationSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
